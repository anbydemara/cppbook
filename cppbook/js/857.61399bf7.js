"use strict";(self["webpackChunkcpp_book"]=self["webpackChunkcpp_book"]||[]).push([[857],{1857:function(t,s,a){a.r(s),a.d(s,{default:function(){return r}});var e=function(){var t=this;t._self._c;return t._m(0)},i=[function(){var t=this,s=t._self._c;return s("div",[s("h1",{staticStyle:{"text-align":"center"}},[t._v(" 第五章 数组与字符串 ")]),s("div",{staticClass:"lake-content",attrs:{typography:"classic"}},[s("h1",{attrs:{id:"vftx2"}},[s("span",{staticClass:"ne-text"},[t._v(" 1. 一维数组的定义和初始化 ")])]),s("h2",{attrs:{id:"docsq"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.1 一维数组的定义 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1389aad7"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)"}},[t._v(" 在程序设计中，为了便于程序处理，通常把具有相同类型的若干变量按有序的形式组织在一起，这些按序排列的同类数据元素的集合称为数组。其中，集合中的每一个元素都相当于一个与数组同类型的变量；集合中的每一个元素用同一个名字（数组名）和它在集合中的序号（下标）来区分引用。语法格式如下： ")])]),s("details",{staticClass:"lake-collapse"},[s("summary",{attrs:{id:"ub5c5d47b"}},[s("span",{staticClass:"ne-text"},[t._v(" 数据类型 数组名[元素数量]; ")])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"h4xuI"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.1")]),t._v(" 一维数组的定义\n"),s("code",[t._v("int a[10];\t\t//语法格式：//定义了长度为10的整型数组")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u0b9fc52d"}},[s("span",{staticClass:"ne-text"},[t._v(" 第1行定义了一个包含10个 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" int ")])]),s("span",{staticClass:"ne-text"},[t._v(" 类型元素的数组，数组名为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，这10个元素分别是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a[0] ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a[1] ")])]),s("span",{staticClass:"ne-text"},[t._v(" , … ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a[9] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("li",{attrs:{id:"u01a845cb"}},[s("span",{staticClass:"ne-text"},[t._v(" 特别强调，C/C++中区分定义语句和非定义语句。同样的符号，在定义语句和非定义语句中表达的含义可能完全不同。 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 在数组定义时表示数组中元素的个数，而在数组使用时表示下标，即第 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("span",{staticClass:"ne-text"},[t._v(" 个元素。 ")])]),s("li",{attrs:{id:"链接4b"}},[s("span",{staticClass:"ne-text"},[t._v(" 下标从0开始，以 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" int a[10]; ")])]),s("span",{staticClass:"ne-text"},[t._v(" 为例，第一个元素是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a[0] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，最后一个元素是a[9]。 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a[10] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 并不存在，对其访问存在下标越界错误。 ")])])]),s("h3",{attrs:{id:"sDNu2"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T511 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"BBzxw"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7f46a344"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"543"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u740c940a"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"57"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue01922b6"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"105"}},[s("p",{staticClass:"ne-p",attrs:{id:"udaec95f4"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u487f0a74"}},[s("span",{staticClass:"ne-text"},[t._v(" T511 ")])])]),s("td",{attrs:{width:"543"}},[s("p",{staticClass:"ne-p",attrs:{id:"u58d0930d"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握数组的基本定义，索引从0开始，中括号在定义语句和非定义语句中的含义 ")])])]),s("td",{attrs:{width:"57"}},[s("p",{staticClass:"ne-p",attrs:{id:"uea6e9b8f"}},[s("br")])]),s("td",{attrs:{width:"105"}},[s("p",{staticClass:"ne-p",attrs:{id:"u70d3a523"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#D8kyt",href:"#D8kyt"}},[s("span",{staticClass:"ne-text"},[t._v(" T531 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#eRcMx",href:"#eRcMx"}},[s("span",{staticClass:"ne-text"},[t._v(" T541 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"705"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua8093131"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX501) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"T4QOe"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.2 一维数组的初始化 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6c094f71"}},[s("span",{staticClass:"ne-text"},[t._v(" 定义后用大括号中的数值对各个元素依次进行赋值。数值个数不能超过数组定义时的元素数量。如果用全部数值进行了初始化，元素数量在定义时可以省略。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"YqhAq"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.2")]),t._v(" 一维数组的初始化\n"),s("code",[t._v("int main(){\n    int a[5] = {1, 2, 3, 4, 5};\n    double b[] = {7.1, 8.2, 9.3};\n    double c1[10] = {0.5,1.0,1.5,2.0};\n    long long c2[100] = {0};\n    long long c3[100] = {};\n    int d[50];\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uf3d565ba"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组b根据初始化数值的数量确定元素个数为3。 ")])]),s("li",{attrs:{id:"uc6a2aea9"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组c1的前4个数据为与初始化列表对应，根据C/C++的规则，部分初始化时，未赋值元素为0，因此c1[4]以后的元素为0。 ")])])]),s("img",{staticStyle:{display:"block",width:"100%"},attrs:{id:"a8vfs",src:a(3273)}}),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2dde51fc"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.1 部分初始化时的数组c1 ")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u6e6f5ac1"}},[s("span",{staticClass:"ne-text"},[t._v(" 根据部分初始化规则，可以用第5行的方法将所有数值初始化为全0。这是利用了规则，并不存在全1或其他数值的全部初始化操作。 ")])]),s("li",{attrs:{id:"u94be4cea"}},[s("span",{staticClass:"ne-text"},[t._v(" 采用第6行的方式，也可以将数组全部初始化为0 ")])]),s("li",{attrs:{id:"u5eeffd2c"}},[s("span",{staticClass:"ne-text"},[t._v(" 但是如果没有初始化，数值中所有元素的值是不确定的。变量定义时，只会分配空间，没有自动赋值为0的操作。例如数组d中的所有值是不确定的。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ua78ab0fb"}},[s("span",{staticClass:"ne-text"},[t._v(" 元素数量必须是非负整数，可以是常量，也可以是变量。如果定义数组时元素数量为常量，称为静态数组，在编译时分配存储空间，因为存储空间确定，所以可以进行初始化；但是如果元素数量是变量，称为动态数组，在运行时分配存储空间，编译时不能确定存储空间的大小。从C++11开始，动态数组可以进行初始化。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"IvVzf"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.3")]),t._v(" 定义动态数组\n"),s("code",[t._v("int main(){\n    int n;\n    cin>>n;\n    int arr[n]={1,2};\t\t//动态数组，从C++11开始支持初始化\n    for(int i=0;i<n;i++)\n        cout<<arr[i]<<' ';\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"DxOZF"}},[s("tbody",[s("tr",{staticStyle:{height:"37px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u392f0c40"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u487d18ed"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u17b7d0e4"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua096d203"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 0 0 0 ")])])])])])]),s("h3",{attrs:{id:"Dr2WK"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T512 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"eFZuq"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufb3c903f"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u711c1477"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4bc49089"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2ff086be"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u682eecb6"}},[s("span",{staticClass:"ne-text"},[t._v(" T512 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u429b81d1"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握数组的初始化方法，尤其是部分初始化的作用；理解动态数组 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u46bcd3c7"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u07e96257"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub6610ace"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX503) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"CSiAQ"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.3 一维数组的内存模型 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u75c72bbb"}},[s("span",{staticClass:"ne-text"},[t._v(" 从数组的定义中可以获知，一个数组中所有元素的数据类型必须相同。从存储角度，当定义一个数组 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" 时，编译器根据指定的元素个数和元素的类型分配确定大小（元素类型大小*元素个数）的一块内存，并把这块内存的名字命名为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，名字 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" 一旦与这块内存匹配就不能再改变。由此可知，一个数组中所有元素的存储空间是连续的。对于一个数组 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" float a[]={1.2, 2.3, 3.4, 4.5,5.6} ")])]),s("span",{staticClass:"ne-text"},[t._v(" ， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" sizeof(a)=20=sizeof(float)*5 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，各元素的相关数据如下： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"fHktw"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.4")]),t._v(" 数组元素的地址\n"),s("code",[t._v('#include<iostream>\nusing namespace std;\nint main (  )\n{\n    float a[]={1.2, 2.3, 3.4, 4.5,5.6};\n    cout<<"下标";\n    for(int i=0;i<5;i++)\n        cout<<"\\ta["<<i<<\']\';\n    cout<<endl;\n    cout<<"值";\n    for(int i=0;i<5;i++)\n        cout<<\'\\t\'<<a[i];\n    cout<<endl;    \n    cout<<"地址";\n    for(int i=0;i<5;i++)\n        cout<<\'\\t\'<<&a[i];\n    cout<<endl;\n    cout<<"a+i";\n    for(int i=0;i<5;i++)\n        cout<<\'\\t\'<<a+i;\n    cout<<endl;\n    cout<<endl;\n}')])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udfe715c2"}},[s("span",{staticClass:"ne-text"},[t._v(" 表5.1 数组各元素的相关数据 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"742px","text-align":"center"},attrs:{border:"1",id:"uVkYL",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud11151ba"}},[s("span",{staticClass:"ne-text"},[t._v(" 下标 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u905e224c"}},[s("span",{staticClass:"ne-text"},[t._v(" a[0] ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u84d97ee0"}},[s("span",{staticClass:"ne-text"},[t._v(" a[1] ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u54abcbdf"}},[s("span",{staticClass:"ne-text"},[t._v(" a[2] ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u02ae78e2"}},[s("span",{staticClass:"ne-text"},[t._v(" a[3] ")])])]),s("td",{attrs:{width:"127"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ubab4c90a"}},[s("span",{staticClass:"ne-text"},[t._v(" a[4] ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua1242f02"}},[s("span",{staticClass:"ne-text"},[t._v(" 值 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2e0bbe7f"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.2 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udb49ddbb"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.3 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u450b5935"}},[s("span",{staticClass:"ne-text"},[t._v(" 3.4 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub1556f3f"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.5 ")])])]),s("td",{attrs:{width:"127"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5dcb7449"}},[s("span",{staticClass:"ne-text"},[t._v(" 5.6 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4a4a0bc9"}},[s("span",{staticClass:"ne-text"},[t._v(" 地址 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u8a3cfde8"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe00 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf2be43e9"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe04 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u35a106b7"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe08 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u37faa00f"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe0c ")])])]),s("td",{attrs:{width:"127"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4fd9ee82"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe10 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u88b34330"}},[s("span",{staticClass:"ne-text"},[t._v(" a+i ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5421bbfc"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe00 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u1d85b11d"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe04 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u69ef1d0d"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe08 ")])])]),s("td",{attrs:{width:"123"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u9256ea22"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe0c ")])])]),s("td",{attrs:{width:"127"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udf2932f4"}},[s("span",{staticClass:"ne-text"},[t._v(" 0x61fe10 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u21f0f76b"}},[s("span",{staticClass:"ne-text"},[t._v(" 从输出结果中可以看出，第5行相当于同时定义了5个变量，下标从0开始，每个变量存储对应的值。 ")])]),s("li",{attrs:{id:"u0adef987"}},[s("span",{staticClass:"ne-text"},[t._v(" 从表格第3行可以看到，所有元素的内存地址连续，间隔为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" sizeof(float) ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("li",{attrs:{id:"u1adb9b1e"}},[s("span",{staticClass:"ne-text"},[t._v(" 从 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a+i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的输出结果中可以看出， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a+i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 与 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" &a[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 相同，都是表示第i个元素的地址。这是因为数组名代表了数组首元素的地址，简称首地址，即 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" +0= ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" =0x61fe00， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a+1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 不代表一个字节，而是表示一个元素的空间，即 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" sizeof(float) ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。因此第 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 个元素的地址为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a+i*sizeof(float) ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u8daf9b97"}},[s("span",{staticClass:"ne-text"},[t._v(" 总而言之，数组可以通过偏移快速定位第 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 个元素。偏移在计算机中是一个非常快速的基本运算，这也是数组能够进行快速访问的根本原因。 ")])]),s("h3",{attrs:{id:"pNT2u"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T513 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"EHD3a"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue4891310"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"522"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua90f617b"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6a593e6f"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"97"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue861e59c"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"71px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u732ec138"}},[s("span",{staticClass:"ne-text"},[t._v(" T513 ")])])]),s("td",{attrs:{width:"522"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf51a7786"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组的连续内存分配模型，通过偏移快速定位元素是数组的突出优势。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud72f191f"}},[s("span",{staticClass:"ne-text"},[t._v(" 理解数组的物理空间和有效元素个数是不同的 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u69d646e0"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/iz3dks#QAfJZ",href:"ch3#QAfJZ"}},[s("span",{staticClass:"ne-text"},[t._v(" T341 ")])])])]),s("td",{attrs:{width:"97"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub03b9280"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#AE9qD",href:"#AE9qD"}},[s("span",{staticClass:"ne-text"},[t._v(" T521 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#fakFb",href:"#fakFb"}},[s("span",{staticClass:"ne-text"},[t._v(" T525 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#Km6tT",href:"#Km6tT"}},[s("span",{staticClass:"ne-text"},[t._v(" T528 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#zTfai",href:"#zTfai"}},[s("span",{staticClass:"ne-text"},[t._v(" T542 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/qvzagc#IS3uW",href:"ch6#IS3uW"}},[s("span",{staticClass:"ne-text"},[t._v(" T621 ")])])])])])])]),s("h2",{attrs:{id:"wVcOg"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.4 数组的基本运算 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u8d7a303f"}},[s("span",{staticClass:"ne-text"},[t._v(" C/C++中的数组虽然可以看做一个整体，但并不是一种独立存在的数据类型。按照语法规定，不能整体赋值、整体比较、整体输入输出。当需要进行赋值或比较或输入输出时，需要通过循环逐个元素的进行。 ")])]),s("h3",{attrs:{id:"Px9Hv"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.1 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue04db5b5"}},[s("span",{staticClass:"ne-text"},[t._v(" 输入n个同学的成绩，输出其中小于平均分的成绩。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"DbXBx"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4f7622fd"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7225ce7f"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0bb9a191"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u264f6db0"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 6 5 3 1 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue10644a4"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 1 ")])])])])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"eF4bW"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.5")]),t._v(" 数组的输入和比较\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\nint main (  )\n{\n    int n;\n    cin>>n;\n    int score[n];\n    double sum=0;\n    for(int i=0;i<n;++i){\n        cin>>score[i];\n        sum += score[i];\n    }\n    for(int i=0;i<n;++i)\n        if(score[i]<sum/n)\n            cout<<score[i]<<' ';\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u809c1cbe"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组毕竟占据较多存储空间，如果能用简单变量解决，可以尽量避免使用数组。本例题中所有元素要使用两遍，当得到平均值后，必须第二次遍历数组，因此必须使用数组记录每个元素。 ")])]),s("li",{attrs:{id:"u4e3ce849"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组在第7行定义时，元素数量是变量，因此是一个动态数组，不可以直接进行初始化。只能通过第9-12行的循环，逐个进行赋值。 ")])]),s("li",{attrs:{id:"u49abb90d"}},[s("span",{staticClass:"ne-text"},[t._v(" 当需要对每个元素与平均值进行比较时，必须逐个元素进行比较，C/C++中没有提供整体比较的语法支持。 ")])])]),s("h3",{attrs:{id:"nbQfZ"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T514 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"Y2ByV"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u64df8305"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ubed3eae9"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7f8c9ff3"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf751fea4"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uda671436"}},[s("span",{staticClass:"ne-text"},[t._v(" T514 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7afe5085"}},[s("span",{staticClass:"ne-text"},[t._v(" 只有多个数据反复利用时，才需要数组；单次使用多个数据尽量不用数组 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u70a4c804"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组不能整体赋值、整体比较、整体输入输出，必须与循环结合 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6d0f394e"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue627c818"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u40d79084"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX502) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX504) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX505) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"AxwhE"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.5 数组作为函数参数 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uc5cf79ab"}},[s("span",{staticClass:"ne-text"},[t._v(" 当定义一个数组 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" int a[10]; ")])]),s("span",{staticClass:"ne-text"},[t._v(" 时，根据前文所述内容可知，同时分配了10个 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" sizeof(int) ")])]),s("span",{staticClass:"ne-text"},[t._v(" 大小的空间。 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")])]),s("span",{staticClass:"ne-text"},[t._v(" 存储了首地址。但并不存储元素的数量，只是从首地址开始，通过偏移访问各个元素。因此当把数组作为函数的参数时，实参数组会把它的地址传递给形参数组，但数组的元素数量并不会被传递。因此数组作为函数的参数时，必须同时传递数组地址和数组中元素的数量，否则无法知道数组的有效范围。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"TXxsb"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.6")]),t._v(" 最小值下标\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\n\nint argmin(int n,int arr[]){\t//数组的元素数量n和数组的首地址\n    int min = 0;\t\t\t\t//默认下标为0的元素最小\n    for(int i=1;i<n;++i)\n        if(arr[i]<arr[min])\t\t//当前元素和最小值元素进行比较\n            min = i;\t\t\t//min保留最小值的下标\n    return min;\n}\n\nint main (  )\n{\n    int n;\n    cin>>n;\n    int a[n+10];\n    for(int i=0;i<n;++i)\n        cin>>a[i];\n    cout<<argmin(n,a)<<endl;\n    return 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"x9EBh"}},[s("tbody",[s("tr",{staticStyle:{height:"37px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufec18252"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4303b9ac"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"udcd9f220"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4db32bef"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 3 8 1 9 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"udc96391b"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u8be6f4b7"}},[s("span",{staticClass:"ne-text"},[t._v(" 由代码5.6可以看出，把数组作为函数的参数时，必须同时传递元素的数量和数组的地址。 ")])]),s("li",{attrs:{id:"u2eea9997"}},[s("span",{staticClass:"ne-text"},[t._v(" 关注第4行的形参 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" arr ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，可以看到 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 为空。数组定义时，理论上 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中应该注明元素的数量。但是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" arr ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是形参，在 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" argmin ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数被调用之前，它没有存储空间。在 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" argmin ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数被调用之后，它的作用就是存放实参的首地址，因此元素数量对它没有任何意义。 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 在此仅仅表明 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" arr ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是一个数组，即整型数组类型；更准确的说， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" arr ")])]),s("span",{staticClass:"ne-text"},[t._v(" 只是为了存储一个 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" int ")])]),s("span",{staticClass:"ne-text"},[t._v(" 类型的地址。因此 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 为空，或者写成 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [0] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 或其他任何整数，对程序运行都没有任何影响。甚至可以将 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" int arr[] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 改写成 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" auto arr ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，根据实参赋值决定形参 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" arr ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的数据类型，也是可以的。由此可以进一步了解，数组名不包含任何的元素数量信息。 ")])])]),s("h3",{attrs:{id:"TFSS3"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T515-T516 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"BeKKq"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufc0bd50a"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua81ccbf6"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2bbb6415"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8e1cfc14"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9256bc32"}},[s("span",{staticClass:"ne-text"},[t._v(" T515 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc53b48a9"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组作为函数的参数，只是传递首元素地址，与实参共享存储空间 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u94387ee5"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接ca"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/qvzagc#aplSt",href:"ch6#aplSt"}},[s("span",{staticClass:"ne-text"},[t._v(" T625 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7ab60e50"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX512) ")])]),s("span",{staticClass:"ne-text"})])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u13c1d37f"}},[s("span",{staticClass:"ne-text"},[t._v(" T516 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u691cf4d0"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握求数组极值及极值对应下标的方法 ")])])]),s("td",{attrs:{width:"70"}}),s("td",{attrs:{width:"67"}})]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub4caaabe"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX506) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h1",{attrs:{id:"s7C1R"}},[s("span",{staticClass:"ne-text"},[t._v(" 2. 一维数组的应用 ")])]),s("h2",{attrs:{id:"eVqvU"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.1 数组的插入与删除 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ua76cdc5f"}},[s("span",{staticClass:"ne-text"},[t._v(" 因为数组的存储空间一定是连续的，因此对于非尾部数据的插入和删除是无法物理实现的，只能通过逻辑方式满足需求。删除时，将被删除元素右侧的所有元素向前平移，插入时将所有元素向后平移，留出插入空间。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"BNQMS"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.7")]),t._v(" 删除和插入元素\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\nbool remove(int n,int arr[],int pos){\t//删除长度为n的数组的第pos个元素\n    if(pos<0 || pos>=n)  return false;\n    for(int i=pos;i<n-1;++i)\t//正序遍历\n        arr[i]=arr[i+1];\t\t//删除位置右侧的值向左移动\n    return true;\n}\nbool insert(int n,int arr[],int pos,int val){//在长度为n的数组的第pos个位置插入新元素val\n    if(pos<0)  return false;\n    if(pos>n)\tpos = n;\t\t//如果插入位置过大，把数据添加到数组的末尾\n    for(int i=n-1;i>=pos;--i)\t//必须倒序循环，保证数据不被覆盖\n        arr[i+1] = arr[i];\t\t//插入位置右侧的值向右移动\n    arr[pos] = val;     \t\t//将新值放到空白处\n    return true;\n}\nvoid print(int n,int arr[]){\n    for(int i=0;i<n;++i)\n        cout<<arr[i]<<(i<n-1?' ':'\\n');//控制输出间隔\n}\nint main (  )\n{\n    int n,index;\n    cin>>n>>index;\n    int values[n];\n    for(int i=0;i<n;++i)\n        cin>>values[i];\n    n-=remove(n,values,index);\n    print(n,values);\n    n+=insert(n,values,index,37);\n    print(n,values);\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"gY1s4"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0fde5374"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5c8074d2"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc591be8e"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u02c4e45a"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 3 4 5 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u315f3d0f"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 4 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1ffb4f4d"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 37 4 5 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u1b9c6e78"}},[s("span",{staticClass:"ne-text"},[t._v(" 利用元素左移模拟删除，利用元素右移模拟插入。插入时一定要倒序移位，因为正序移位会出现元素覆盖和数据丢失。请自行尝试体验。 ")])]),s("li",{attrs:{id:"ub90944a1"}},[s("span",{staticClass:"ne-text"},[t._v(" 插入或删除成功返回 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，否则返回 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" false ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，借助 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true ")])]),s("span",{staticClass:"ne-text"},[t._v(" / ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" false ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和1/0的对应关系，对数据总元素进行修正（第28和30行）。也就是说，数组的物理存储空间不会改变的，只是从逻辑上认为元素的总量发生变化。 ")])]),s("li",{attrs:{id:"uc789237a"}},[s("span",{staticClass:"ne-text"},[t._v(" 对于插入而言，一定要保证物理存储空间足够用，不要在插入时发生下标超上限的现象。 ")])]),s("li",{attrs:{id:"u0231c0ef"}},[s("span",{staticClass:"ne-text"},[t._v(" 第18-19行对数据分隔显示做了一个示范。从视觉上一个元素加一个空格是没有问题的，但是对于在线评测系统，多出一个空格，可能会导致整个题目被判错，一定严格遵守题目的输出规范和要求。 ")])])]),s("h3",{attrs:{id:"AE9qD"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T521 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"LXOiv"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u15df0f02"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7ca76b81"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u189df400"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8ab69cf7"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue9c63e1e"}},[s("span",{staticClass:"ne-text"},[t._v(" T521 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uefe75c83"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组只能对单个元素做逻辑插入和删除，注意循环移位时的元素覆盖问题 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue78ed875"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#pNT2u",href:"#pNT2u"}},[s("span",{staticClass:"ne-text"},[t._v(" T513 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u32bf7359"}},[s("br")])])])])]),s("h2",{attrs:{id:"qQ3m1"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.2 数组与循环的联动 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"链接51"}},[s("span",{staticClass:"ne-text"},[t._v(" 有时在题目中没有明显需要数组的提示，可以采用数组记录已知的数据，利用数组可以跟循环联动的特点，极大简化程序的流程。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u7e32dc06"}},[s("span",{staticClass:"ne-text"},[t._v(" 在例题5.2中，由于每月天数的不规律性，导致无法直接使用循环，只能通过多分支进行逐条处理，代码非常冗余。但是通过把每月天数预置到数组中，让循环与数组形成联动，对程序书写进行了极大的简化，降低了出错的概率。 ")])]),s("h3",{attrs:{id:"NA6mZ"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.2 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u68d94f5f"}},[s("span",{staticClass:"ne-text"},[t._v(" 把1月1日当做第1天，当用户输入年份和第n天时，输出第n天是几月几日？ ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"UdIsw"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub46570f9"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5858feb8"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接38"}},[s("span",{staticClass:"ne-text"},[t._v(" 2022 33 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc27a8536"}},[s("span",{staticClass:"ne-text"},[t._v(" 2月2日 ")])])])])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"RBvZK"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.8")]),t._v(" 数组与循环的联动\n"),s("code",[t._v('#include<iostream>\nusing namespace std;\n\nint main (  )\n{\n    int year,n;\n    cin>>year>>n;\n    int month[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n    auto leapyear = [](int year){return year%400==0||(year%4==0 && year%100!=0);};\n    month[1]+=leapyear(year);\n    int i=0;\n    while(n>month[i])\n        n-=month[i++];\n    cout<<i+1<<"月"<<n<<"日"<<endl;\n    return 0;\n}')])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u2c70fb0b"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行定义了一个数组，记录了每个月的天数。 ")])]),s("li",{attrs:{id:"uf7353724"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行赋值号右侧是一个匿名函数， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 表示后面定义了一个函数，参数和函数体的写法和普通函数定义相同。将定义后的匿名函数赋值给 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" auto ")])]),s("span",{staticClass:"ne-text"},[t._v(" 变量 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" leapyear ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，此时的leapyear就是一个函数。auto表示根据赋值号右侧的内容自动解析变量的类型。此处的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" leapyear ")])]),s("span",{staticClass:"ne-text"},[t._v(" 就被解析为函数。对于简单的函数，或只需要使用一次的函数，可以采用匿名函数的方式进行定义。 ")])]),s("li",{attrs:{id:"u020fd781"}},[s("span",{staticClass:"ne-text"},[t._v(" 第10行将二月增加是否为闰年，因为闰年的二月比其他年份的二月多一天，同样是利用了 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true ")])]),s("span",{staticClass:"ne-text"},[t._v(" / ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" false ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和1/0的对应关系。 ")])]),s("li",{attrs:{id:"uf81ae3eb"}},[s("span",{staticClass:"ne-text"},[t._v(" 第12-13行，利用数组和循环的联动，快速简单的定位了月份和日期。 ")])]),s("li",{attrs:{id:"u6aac6b47"}},[s("span",{staticClass:"ne-text"},[t._v(" 第13行的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" ++ ")])]),s("span",{staticClass:"ne-text"},[t._v(" 在 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 后面，表示先执行当前表达式的运算，然后再对i进行加1操作。即先执行 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" n-=month[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，再执行 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i++ ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。将两条语句简化成了一条语句，但是功能完全相同。初学者如果掌握不好这种技巧，可以将第13行的表达式拆成两条语句，保证代码理解的清晰度。 ")])])]),s("h3",{attrs:{id:"WGgmO"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T522-T523 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"WDS2Y"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u82ab1817"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc77b216c"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接d6"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"udc33556b"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue9fa759b"}},[s("span",{staticClass:"ne-text"},[t._v(" T522 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u19bef5cc"}},[s("span",{staticClass:"ne-text"},[t._v(" 单循环与数组搭配使用，嵌套循环与二维数组搭配使用 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u73e3e40c"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub35f09ed"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#mu9UI",href:"ch8#mu9UI"}},[s("span",{staticClass:"ne-text"},[t._v(" T874 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u580ca9e4"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX507) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX508) ")])]),s("span",{staticClass:"ne-text"})])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接45"}},[s("span",{staticClass:"ne-text"},[t._v(" T523 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7add7016"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握匿名函数的基本使用方法，理解这种形式，不做重点掌握 ")])])]),s("td",{attrs:{width:"70"}}),s("td",{attrs:{width:"67"}})])])]),s("h2",{attrs:{id:"FCrRm"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.3 尺取法 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uf2277451"}},[s("span",{staticClass:"ne-text"},[t._v(" 尺取法又称双指针法，用来解决序列的区间问题，是一种常见的优化技巧。分为反向扫描法和同向扫描法。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u65f7e5cd"}},[s("span",{staticClass:"ne-text"},[t._v(" 反向扫描法又称为左右指针法，即设定两个指针i和j，分别指向数组的头和尾，i和j方向相反，i从头向尾，j从尾向头，在中间集合。虽然设定两个指针，但是对同一个数组同时遍历，算法复杂度为O(n)。初学者由于对语法的不熟悉，容易写成嵌套循环，这样算法复杂度变为O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )，造成了大量无效的遍历。 ")])]),s("h3",{attrs:{id:"b9kDc"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.3 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ude83e839"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个数组arr，判断数组是否对称。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"uAz0V"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.9")]),t._v(" 数组的多变量遍历\n"),s("code",[t._v("bool sym(int n,int arr[])\n{\n    for(int i=0,j=n-1;i<j;++i,--j)\n        if(arr[i]!=arr[j])\n            return false;\n    return true;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u23a28952"}},[s("span",{staticClass:"ne-text"},[t._v(" 注意第3行两个变量同时变化遍历数组的方法。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u48ce52db"}},[s("span",{staticClass:"ne-text"},[t._v(" 同向扫描法同样是即设定两个指针i和j，同时指向数组的头或尾，i和j移动方向相同，但偏移速度不同，因此又称为快慢指针法。关键是一个指针处的修改不能影响另外一个指针的遍历。 ")])]),s("h3",{attrs:{id:"UP8pF"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习5.1 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ubd75b3ae"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个数组，采用尺取法将数组逆序。 ")])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"ua0777c31"}},[s("span",{staticClass:"ne-text"},[t._v(" 提示：注意交换要在数组的中间停止，否则会把已经逆序的数组重新修改为正序。 ")])])]),s("h3",{attrs:{id:"xecmX"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.4 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u2ece06eb"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个数组arr，要求删除其中的指定值val。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接03"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud5db7a06"}},[s("span",{staticClass:"ne-text"},[t._v(" 方案一：基于第2.1小节中的删除元素方法，每次删除一个值，算法复杂度为O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u17ac0c7e"}},[s("span",{staticClass:"ne-text"},[t._v(" 方案二：新建一个数组，将原数组中的有效值添加到新数组中。以空间换时间，算法复杂度降为O(n)。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ud25a8d1a"}},[s("span",{staticClass:"ne-text"},[t._v(" 显然第二种方法更好一些。但在一些特殊情况下，要求在原数组上删除指定元素，不允许建立新数组。仔细分析可以发现，一个删除后的数组，元素的数量一定小于或等于原数组，因此可以设置两个索引i和index，i遍历原数组，index遍历保留的元素。因为index小于等于i，因此index处的赋值不会影响i的遍历。具体如下： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"Henlz"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.10")]),t._v(" 删除指定元素\n"),s("code",[t._v("int remove(int n,int arr[],int val)\n{\n    int index = 0;\n    for(int i=0;i<n;++i){\n        if(arr[i]!=val){\n            arr[index] = arr[i];\n            index++;\n        }\n    }\n    return index;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ueb7df5ca"}},[s("span",{staticClass:"ne-text"},[t._v(" index一定小于或等于i，因此第6行的赋值操作对第4行正在进行的遍历操作不会造成任何影响。 ")])]),s("li",{attrs:{id:"u27c0912c"}},[s("span",{staticClass:"ne-text"},[t._v(" 一次性删除所有指定的值val。函数最后返回index，代表了保留元素的个数。 ")])]),s("li",{attrs:{id:"ueafbbc07"}},[s("span",{staticClass:"ne-text"},[t._v(" 第八章将要提到的STL的remove算法与以上代码的想法完全一致。既不需要创建新空间，算法复杂度也降低到O(n)。 ")])])]),s("h3",{attrs:{id:"HPdn9"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习5.2 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6b66711d"}},[s("span",{staticClass:"ne-text"},[t._v(" 移除一个数组中的重复元素。 ")])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"链接53"}},[s("span",{staticClass:"ne-text"},[t._v(" 提示：依次遍历每个元素，删除其后继元素中与其值相同的元素。 ")])])]),s("h3",{attrs:{id:"BNafm"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.5 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u3efeb884"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定两个按非递减顺序的整数数组 nums1 和 nums2，元素数量分别为m 和 n 。合并 nums2 到 nums1 中，使合并后的数组同样保持非递减顺序。nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7aa23ef5"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u94188e20"}},[s("span",{staticClass:"ne-text"},[t._v(" 方案一、将nums2直接拼接到nums1的尾部，然后采用快速排序，重新达成非递减顺序，算法复杂度为O((m+n)log(m+n))。并没有用到原数组已经有序的条件。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua8fd307e"}},[s("span",{staticClass:"ne-text"},[t._v(" 方案二、新建一个数组，依次将两个数组中复合条件的数据添加到新数组中。以空间换时间，算法复杂度降为O(m+n)。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u9dad5e63"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果不允许建立新空间呢？主要存在的问题是一个数据可能未被处理前，就被新数据覆盖。但是如果倒序遍历，先让一个索引p指向最后一个元素的位置m+n-1，这样p一定大于或等于m或n，因此可以得到以下方法： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"KCBjU"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.11")]),t._v(" 合并有序数组 I\n"),s("code",[t._v("void merge(int nums1[], int m, int nums2[], int n) {\n    int p=m--+(--n);\n    while(m>=0&&n>=0){\t\t//或while(m+1&&n+1)\n        nums1[p--] = nums1[m]>nums2[n]?nums1[m--]:nums2[n--];\n    }\n    while(n>=0){\t\t\t//或while(n+1)\n        nums1[p--] = nums2[n--];\n    }\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u3dba40a2"}},[s("span",{staticClass:"ne-text"},[t._v(" 第2行将p指向数据尾部，注意 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" m-- ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" --n ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的使用，之所以使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" --n ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，是因为p应该等于 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" m+n-1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，所以要先减1。（知识点： ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/afrstd#t5tWx",href:"ch2#t5tWx"}},[s("span",{staticClass:"ne-text"},[t._v(" T268 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("li",{attrs:{id:"u2d6eb975"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" p ")])]),s("span",{staticClass:"ne-text"},[t._v(" 一定大于或等于m或n，因此第4行的赋值操作对第3行正在进行的遍历操作不会造成任何影响。 ")])]),s("li",{attrs:{id:"u5230aca4"}},[s("span",{staticClass:"ne-text"},[t._v(" 第6-8行的循环是为了处理 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 已经被处理完毕，但是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 还有残留数据，这些数据必须迁移到 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中。如果 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 还有残留，那么正好处于应有的位置，不需要处理。 ")])]),s("li",{attrs:{id:"ua7d8316a"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果nums1已经处理完毕，可以只处理nums2，因此可以将以上代码中的两个循环简化成一个循环。 ")])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"mpDPc"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.12")]),t._v(" 合并有序数组 II\n"),s("code",[t._v("void merge(int nums1[], int m, int nums2[], int n) {\n    int p=m--+(--n);\n    while(n>=0){\t\t//或while(m+1&&n+1)\n        nums1[p--] = m>=0&&nums1[m]>nums2[n]?nums1[m--]:nums2[n--];\n    }\n}")])]),s("h3",{attrs:{id:"o8Kxq"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T524 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"oB63X"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf4969c5f"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"549"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udaf7c6eb"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4b73a5cc"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4286ba57"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接32"}},[s("span",{staticClass:"ne-text"},[t._v(" T524 ")])])]),s("td",{attrs:{width:"549"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2207db94"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握尺取法多指针反向或同向扫描法，掌握多变量方式对序列的遍历，能够把对称判断、原地删除和合并等方法作为解题模板。 ")])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u43b7ca9b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FdHGv",href:"ch4#FdHGv"}},[s("span",{staticClass:"ne-text"},[t._v(" T475 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FdHGv",href:"ch4#FdHGv"}},[s("span",{staticClass:"ne-text"},[t._v(" T476 ")])]),s("span",{staticClass:"ne-text"})])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接ac"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#K2mZX",href:"#K2mZX"}},[s("span",{staticClass:"ne-text"},[t._v(" T547 ")])])])])])])]),s("h2",{attrs:{id:"Aw7Ea"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.4 空间换时间 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u4b1163b7"}},[s("span",{staticClass:"ne-text"},[t._v(" 有时需要在两个以上的多维度上对数据进行遍历，或多单一维度进行多重遍历时，计算复杂度高。通过把数组作为中间媒介，可以实现降维，把嵌套循环简化为并列循环，甚至单循环，能够极大地降低算法的复杂度。这是一种用空间换时间的思路。嵌套循环体现了乘法的思想，并列循环体现了加法的思想，嵌套循环简化为并列循环能对计算效率进行极大地提升。 ")])]),s("h3",{attrs:{id:"yuD60"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.6 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"链接35"}},[s("span",{staticClass:"ne-text"},[t._v(" 长度为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" L ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的长江路上有一排树。如果把长江路看成一个0~ ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" L ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的数轴，则数轴上的每个整数0,1,2,... ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" L ")])]),s("span",{staticClass:"ne-text"},[t._v(" 都种有一棵树。由于长江路部分区域要建地铁。这些区域用它们在数轴上的起始点（整数）和终止点（整数）表示，区域之间可能有重合的部分。现在要把建地铁区域的树(包括区域端点)移走，计算移走后路上还有多少棵树。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"B425Z"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u91534c10"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u954f7127"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua2ae780a"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ude2a280d"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0c175316"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 7 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0ec83477"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 10 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u66f5a055"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u24e773f9"}},[s("span",{staticClass:"ne-text"},[t._v(" 【问题分析】从简单的思维出发，判断每棵树是否在给定的所有范围里。这样需要遍历所有的树 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" L ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，对于每棵树，再次遍历所有范围（假定共有 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" R ")])]),s("span",{staticClass:"ne-text"},[t._v(" 个范围），树和范围两个维度进行嵌套遍历，时间复杂度为O(L*R)，其中O为算法复杂度表示方法。这种嵌套循环复杂度高，而且容易出错。仔细分析，每棵树只有保留或移走两种状态，可以通过数组记录状态变化。更重要的是，以数组为媒介，可以将嵌套循环拆解为并列循环，时间复杂度降为O(L+R)。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"PVS4D"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.13")]),t._v(" 空间换时间\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\n\nint main (  )\n{\n    int L;\n    cin>>L;\n    bool tree[L+1];\n    for(auto &e:tree)    e = 1;\n    int left,right;\n    while(cin>>left>>right)\n        for(int i=left;i<=right;++i)\t//将删除区域的值修改为0\n            tree[i] = 0;\n    int sum = 0;\n    for(auto e:tree)\n        sum += e;\n    cout<<sum<<endl;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u83a4478b"}},[s("span",{staticClass:"ne-text"},[t._v(" 因为第8行定义的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" tree ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是一个动态数组，不能进行直接初始化。第9行用范围 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" for ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的形式将数组全部初始化为1。注意这里要改变每个元素的值，因此 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" e ")])]),s("span",{staticClass:"ne-text"},[t._v(" 必须采用引用形式。 ")])]),s("li",{attrs:{id:"u8f7dd609"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14-16行借助true/false和1/0的对应关系，不采用判断，直接将所有数值求和得到剩余树的数量。 ")])]),s("li",{attrs:{id:"ud44d039f"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行和第15-16行遍历所有的树，第11-13行遍历所有的范围。这两个遍历的中间媒介是数组tree，两个遍历形成并列关系而不是嵌套关系。 ")])])]),s("h3",{attrs:{id:"XV2Mo"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.7 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u25c3d26d"}},[s("span",{staticClass:"ne-text"},[t._v(" 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？其中 ")]),s("span",{staticClass:"ne-math",attrs:{id:"l0bKX"}},[s("img",{attrs:{src:a(1075)}})]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" ( ")])]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://leetcode.cn/problems/climbing-stairs/description/",href:"https://leetcode.cn/problems/climbing-stairs/description/",target:"_blank"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 力扣70 ")])])]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" ) ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"u3cd4ba49"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uaba1a2ec"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 仔细分析题目，如果上到第n-2阶台阶共有f(n-2)种方法，上到第n-1阶台阶共有f(n-1)种方法，则f(n)=f(n-1)+f(n-2)，这其实就是一个斐波那契数列。因此采用递归求解非常简单。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"DpG5i"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.14")]),t._v(" 递归求斐波那契数列 I\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\nlong long fib(int n){\n    if(n==1||n==2)return n;\n    return fib(n-1)+fib(n-2);\n}\nint main ()\n{\n    int n;\n    cin>>n;\n    long long num = fib(n);\n    cout<<num<<endl;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u3eee3ede"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 整个程序一目了然，但是当输入为50时，在codeblocks上的运行时间为55.5秒。耗时的主要原因是重复计算。n越大，重复的越多，耗时就越长。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ue509986b"}},[s("img",{staticClass:"ne-image",attrs:{id:"ua8c5fe6f",src:a(5663),width:"682"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5d840fbd"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.2 斐波那契数列的递归展开，以fib(6)为例 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u85eff2c0"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 事实上，如果已经计算过fib(n)，可以存储起来，下次用到的时候直接使用，就可以极大的加快计算速度。这是一个比较经典的以空间换时间的操作。这种方法称为带备忘录的递归方法，可以解决绝大部分递归超时问题。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"z8BKM"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.15")]),t._v(" 递归求斐波那契数列 II\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\nlong long ret[100]={0,1,2};\t\t\t\t//建立一个备忘录\nlong long fib(int n){\n    if(n && !ret[n])\t\t\t\t\t//如果需要更新备忘录\n    \tret[n]=fib(n-1)+fib(n-2);\t\t//更新备忘录\n    return ret[n];\t\t\t\t\t\t//返回备忘录中对应的值\n}\nint main ()\n{\n    int n;\n    cin>>n;\n    long long num = fib(n);\n    cout<<num<<endl;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uc1d5e7c9"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 第3行给定了一个全局变量数组，并初始化了fib(1)和fib(2)的值，其余默认为0。全局变量的生命周期贯穿整个程序的运行，可以在任意位置使用。 ")])]),s("li",{attrs:{id:"u35dfe888"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 第6行将每次计算的结果保存到数组 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" ret ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 中的对应位置上。计算时第5行先进行判断，如果fib(n)已经计算过（不为0），这直接返回结果，这样极大的加快了计算速度。当输入为50甚至90时，运行时间在codeblocks上大约都为3.5秒，这还是因为包括了输入输出的时间。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uce603abc"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 因为全局变量可以在任意处使用，可能会造成程序的混乱，因此并不建议使用。以下代码采用static静态变量，其作用域在局部，但是生命周期与全局变量相同。初始化操作只会执行一次。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"RKoQP"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.16")]),t._v(" 递归求斐波那契数列 III\n"),s("code",[t._v("long long fib(int n){\n    static long long ret[100]={0,1,2};\t//建立一个备忘录\n    if(n && !ret[n])\t\t\t\t\t//如果需要更新备忘录\n    \tret[n]=fib(n-1)+fib(n-2);\t\t//更新备忘录\n    return ret[n];\t\t\t\t\t\t//返回备忘录中对应的值\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"链接1a"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 第2行定义的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" ret ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 是静态变量，只能在函数内部使用。但是其生命周期与全局变量一致，贯穿整个程序的运行过程。第2行的代码在反复调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" fib ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 函数的过程中会多次执行到该位置，但是这条语句只在第一次执行的时候起作用，后继执行到该位置的时候，会自动忽略第2行语句，因此整个变量的定义和初始化只会执行一次，其效果与全局变量完全相同。 ")])])]),s("h3",{attrs:{id:"fakFb"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T525 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"V1psN"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5ba8d48f"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接91"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud830860d"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u155c4cd1"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u317ae03a"}},[s("span",{staticClass:"ne-text"},[t._v(" T525 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u873f98d0"}},[s("span",{staticClass:"ne-text"},[t._v(" 以空间消耗换取时间效率是算法优化的基本方法 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uce1fc837"}},[s("span",{staticClass:"ne-text"},[t._v(" 利用全局变量或静态变量构建数组，实现递归的快速计算，注意静态变量的使用 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"udca1f575"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#pNT2u",href:"#pNT2u"}},[s("span",{staticClass:"ne-text"},[t._v(" T513 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud4ca7379"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#bDkij",href:"#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u5dbfa2f6"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#Km6tT",href:"#Km6tT"}},[s("span",{staticClass:"ne-text"},[t._v(" T528 ")])])])])])])]),s("h2",{attrs:{id:"KKCom"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.5 打表法 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue2be086f"}},[s("span",{staticClass:"ne-text"},[t._v(" 在一些题目中，某些计算过程需要反复使用，这就造成了时间的严重消耗，可能造成超时问题。遇到这种情况，可以一次性计算所有可能输入对应的的结果，并保存到数组中，之后直接查询。这种方式主要对每个可能的计算只操作一遍，从而达到了节省时间的目的。这种利用数组的方式称为打表法。注意这个技巧只适用于输入的值域不大的问题，否则可能会导致内存超限、时间超限等问题。 ")])]),s("h3",{attrs:{id:"AuYzI"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.8 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ub03a1782"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定n个不同的非负整数，求这些数中有多少对整数的值正好相差1。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" （CSP2014年9月真题） ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"ubf4899ac"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9d6dd9df"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一行包含一个整数n（1≤n≤1000），表示给定非负整数的个数 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ucc8895b1"}},[s("span",{staticClass:"ne-text"},[t._v(" 第二行包含n个给定的非负整数，每个整数不超过10000 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0480e687"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub26900a2"}},[s("span",{staticClass:"ne-text"},[t._v(" 这n个非负整数中有多少对整数的值正好相差1 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"LpRse"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u14aecf53"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3f21584e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucae2b18b"}},[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2543f9a1"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 2 6 3 7 8 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7b2f52ab"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u52dd320a"}},[s("span",{staticClass:"ne-text"},[t._v(" 【样例说明】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc813b9d8"}},[s("span",{staticClass:"ne-text"},[t._v(" 相差为1的整数对包括(2,3), (6,7), (7,8) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u99f6b07c"}},[s("span",{staticClass:"ne-text"},[t._v(" 【问题分析】朴素的方法是逐个枚举，使用双重嵌套循环，时间复杂度为O( ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )。也可以先排序，然后检测相邻元素是否符合题目规定，时间复杂度为O( ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("span",{staticClass:"ne-text"},[t._v(" log ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("span",{staticClass:"ne-text"},[t._v(" )，即排序的复杂度。根据题目说明，每个非负整数最大不超过10000，因此最佳方式是创建一个元素个数为10000的数组，将所有数据标定出来，再进行向量元素检测。时间复杂度降为O( ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("span",{staticClass:"ne-text"},[t._v(" )。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"BEfZD"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.17")]),t._v(" 打表法\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\n\nint main (  )\n{\n    int n;\n    cin>>n;\n    bool cnt[10010]= {0};\t\t\t\t//给定一些冗余空间，防止边界错误\n    int x,min=10000,max=0,ans;\n    for(int i=0; i<n; ++i){\n        cin>>x;\n        if(x<min)   min = x;\t\t\t//求最小值\n        if(x>max)   max = x;\t\t\t//求最大值\n        cnt[x] = 1;\t\t\t\t\t\t//对应x的位置有数值\n    }\n    for(int i=min+1;i<=max;++i)\t\t\t//遍历所有有效数值\n        ans += (cnt[i]+cnt[i-1]==2);\t//如果相邻两个元素都有效，则相加必为2\n    cout<<ans<<endl;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uad35a1c4"}},[s("span",{staticClass:"ne-text"},[t._v(" 本题目借助数组，虽然浪费了一定的空间，但是极大降低了算法的复杂度。当对 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" cnt ")])]),s("span",{staticClass:"ne-text"},[t._v(" 进行赋值后，实际上就是按空间顺序完成了排序，又不需要排序那么复杂。 ")])]),s("li",{attrs:{id:"u1218e0ff"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行元素只有10000个，但是边界是最容易出问题的地方，因此额外定义了10个空间。 ")])]),s("li",{attrs:{id:"u28c20882"}},[s("span",{staticClass:"ne-text"},[t._v(" 第16行的遍历，可以是0~10000，但本算法在输入过程中求解了最大值和最小值，降低了遍历的范围。 ")])]),s("li",{attrs:{id:"u4856a8a6"}},[s("span",{staticClass:"ne-text"},[t._v(" 第17行也可以修改为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" ans += cnt[i]&&cnt[i-1] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，同样表示两个相邻元素都为1时计数加1。 ")])]),s("li",{attrs:{id:"u88ade4e2"}},[s("span",{staticClass:"ne-text"},[t._v(" 第17行也可以修改为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" ans += cnt[i]&cnt[i-1] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，只有两个相邻元素都为1时，进行“位与”运算的结果才能为1。位运算是底层运算，计算效率最高。 ")])])]),s("h3",{attrs:{id:"aIxI7"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习5.3 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ud94c6621"}},[s("span",{staticClass:"ne-text"},[t._v(" 有N个非零且各不相同的整数。请你编一个程序求出它们中有多少对相反数(a和-a为一对相反数)。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" （CSP2014年3月真题） ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"u497b59e8"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub6ad2482"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一行包含一个正整数N (1≤N≤500)。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uee6f0187"}},[s("span",{staticClass:"ne-text"},[t._v(" 第二行为N个用单个空格隔开的非零整数，每个数的绝对值不超过1000，保证这些整数各不相同。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7ec30186"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u87e5a5bf"}},[s("span",{staticClass:"ne-text"},[t._v(" 只输出一个整数， 即这N个数中包含多少对相反数。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"UiR5f"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf0333f61"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u103d05d0"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud55b44fc"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub15ceffc"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 3 -1 -2 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u08caf513"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])])])])])]),s("h3",{attrs:{id:"oIzDD"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.9 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u85994bf8"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定n个整数，求第i~j之间所有数据的和。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4c62697a"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u12943a79"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一行包含一个正整数N (1≤N≤10000)。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u51820b6a"}},[s("span",{staticClass:"ne-text"},[t._v(" 第二行为N个用单个空格隔开的整数，每个数小于10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7bb9d509"}},[s("span",{staticClass:"ne-text"},[t._v(" 从第三行开始，每行输入两个整数 ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和 ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" j ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，1≤ ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" ≤ ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" j ")])]),s("span",{staticClass:"ne-text"},[t._v(" ≤10000 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud396afe4"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc93b914a"}},[s("span",{staticClass:"ne-text"},[t._v(" 输出从输入第三行开始每行指定范围的所有整数的和 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"zsDlf"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf6fac26e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u875c72c5"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u35dfde0f"}},[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub64d09f7"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 2 6 3 7 8 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接fc"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub75c16fa"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 6 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u00f4bb38"}},[s("span",{staticClass:"ne-text"},[t._v(" 11 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u307a54cd"}},[s("span",{staticClass:"ne-text"},[t._v(" 24 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u4582ec1a"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目分析】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uc12dd337"}},[s("span",{staticClass:"ne-text"},[t._v(" 这个题目从表面上看就是一个简单的数据求和问题，但是求和范围可能有重叠，重叠部分如果范围较大，次数较多时，就会造成严重的时间浪费，从而出现超时问题。以下方法采用打表法进行解决。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"PeIpG"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.18")]),t._v(" 打表法求数据和\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\n\nint main (  )\n{\n    int n,x;\n    cin>>n;\n    int table[10010]= {0};\n    for(int i=0; i<n; ++i){\n        cin>>x;\n        table[i+1] = table[i]+x;\n    }\n    int i,j;\n    while(cin>>i>>j)\n        cout<<table[j]-table[i-1]<<endl;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u637e7aaa"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行建立了一个数组，保存在第9~12行中输入数据的累积和。 ")])]),s("li",{attrs:{id:"u276d0477"}},[s("span",{staticClass:"ne-text"},[t._v(" 第15行中，对应范围的两个累积和相减，就得到了这个范围内所有数据的和。这种方法的最大优势就体现在对于重复的范围只计算了一次，去除了时间的反复消耗。 ")])])]),s("h3",{attrs:{id:"MUXsu"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.10 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ucb538bec"}},[s("span",{staticClass:"ne-text"},[t._v(" 计算小于给定非负整数n的所有素数的个数。0 ≤ n ≤ 5 * 10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，当n为0或1时，对应结果为0。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" （ ")])]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://leetcode.cn/problems/count-primes/",href:"https://leetcode.cn/problems/count-primes/",target:"_blank"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 力扣204 ")])])]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" ） ")])])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"ZQPjS"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接21"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud22a5519"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u466aa86f"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u92a53031"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"uec63c9f7"}},[s("span",{staticClass:"ne-text"},[t._v(" 【样例说明】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6b83d2bb"}},[s("span",{staticClass:"ne-text"},[t._v(" 分别为2, 3, 5, 7。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7f91bad8"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目分析】如果对范围内的每个数据都进行素数判断，会造成极大的时间浪费。利用打表法，把这个想法倒过来。从2开始向后遍历，将所有数据的倍数标记为非素数，这样统计起来非常简单。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"SQ1Tc"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.19")]),t._v(" 打表法求素数个数\n"),s("code",[t._v("#include<iostream>\nusing namespace std;\n\nint main (  )\n{\n    int n;\n    cin>>n;\n    int res = 0;\n    bool prime[n+10];\n    for(auto &e:prime)  e=true;\n    for (int i = 2; i < n; ++i){\n        if (prime[i]) {\t\t\t\t\t\t\t//如果i是素数\n            ++res;\t\t\t\t\t\t\t\t//答案加1\n            for (int j = i+i; j < n; j+=i)\t\t//将i的所有倍数设置为false\n                prime[j] = false;\n        }\n    }\n    cout<<res<<endl;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u2feed93a"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行建立了一个数组保存所有可能的候选答案，通过第10行全部初始化为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("li",{attrs:{id:"u45296da0"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11-17行从小到大遍历所有可能的候选答案，将素数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的所有倍数全部标记为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" false ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。剩余的就全部为素数。 ")])]),s("li",{attrs:{id:"u5fe6714d"}},[s("span",{staticClass:"ne-text"},[t._v(" 虽然从表面上看是一个嵌套循环，时间复杂度应该为O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )，但是仔细分析就可以知道，第14行的循环是跳跃的，整个程序执行完毕后，数组中的每个元素只被第14行的循环访问一次。 ")])])]),s("h3",{attrs:{id:"bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T526 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"DPUnD"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uaffd11eb"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u78b9dae8"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"61"}},[s("p",{staticClass:"ne-p",attrs:{id:"u00d59ae4"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"64"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf883bdcc"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接54"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0e85ac82"}},[s("span",{staticClass:"ne-text"},[t._v(" 打表法是数组应用的最重要方法之一，需要重点掌握 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue02bf2b9"}},[s("span",{staticClass:"ne-text"},[t._v(" 空间消耗不能过大，一般在 ")]),s("span",{staticClass:"ne-math",attrs:{id:"j7aKi"}},[s("img",{attrs:{src:a(2646)}})]),s("span",{staticClass:"ne-text"},[t._v(" 以内，如果题目中没有缩减范围则不能用打表法 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7273c2cc"}},[s("span",{staticClass:"ne-text"},[t._v(" 尽量减少数组遍历的范围 ")])])]),s("td",{attrs:{width:"61"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3c694ee5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#fakFb",href:"#fakFb"}},[s("span",{staticClass:"ne-text"},[t._v(" T525 ")])])])]),s("td",{attrs:{width:"64"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub270fa6c"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#cOtOt",href:"ch8#cOtOt"}},[s("span",{staticClass:"ne-text"},[t._v(" T833 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#cR2Bd",href:"ch8#cR2Bd"}},[s("span",{staticClass:"ne-text"},[t._v(" T871 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#jxNPL",href:"ch8#jxNPL"}},[s("span",{staticClass:"ne-text"},[t._v(" T872 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#Yve1p",href:"ch8#Yve1p"}},[s("span",{staticClass:"ne-text"},[t._v(" T873 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"684"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5f52ed60"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX509) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX510) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"Tpq9G"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.6 排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ud8fc4d48"}},[s("span",{staticClass:"ne-text"},[t._v(" 排序是多数值运算中的基本操作，一般分为升序和降序。排序的方法有很多，经典排序方法包括冒泡法、选择法、插入法和归并排序法等。这些算法的动画演示可以参见网站 ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://visualgo.net/zh/sorting",href:"https://visualgo.net/zh/sorting",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" https://visualgo.net/zh/sorting ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"u14bc16b7"}},[s("span",{staticClass:"ne-text"},[t._v(" visualgo是一个非常好的算法动画演示平台，很多常用算法都在该网站有动画形式展现。 ")])])]),s("h3",{attrs:{id:"wQDhG"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.6.1 冒泡排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u781c2e10"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)"}},[t._v(" 冒泡排序是一种简单的排序算法，它也是一种稳定排序算法。 ")]),s("span",{staticClass:"ne-text"},[t._v(" 重复遍历要排序的元素，依次比较两个相邻的元素，如果顺序错误就进行交换，直到没有相邻元素需要交换，完成排序。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端（升序或降序排列），就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样，故名“冒泡排序”。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"链接e6"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)"}},[t._v(" 假设对待排序序列(5,1,4,2,8)进行升序排列，第一轮排序将最大元素置于最后： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6d6708bb"}},[s("img",{staticClass:"ne-image",attrs:{id:"u68921a78",src:a(8337),width:"800"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4e6c74d0"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.3 冒泡排序的第一轮排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uceedb06b"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)"}},[t._v(" 第二轮待排序序列只包含前 4 个元素，将其中最大元素放置在待排序序列尾部： ")]),s("img",{staticClass:"ne-image",attrs:{id:"u321c19bd",src:a(8932),width:"800"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em","text-align":"center"},attrs:{id:"u3db7541a"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.4 冒泡排序的第二轮排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u3eb4b2a8"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)"}},[t._v(" 第三轮待排序序列只包含前 3个元素，将其中最大元素放置在待排序序列尾部： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"udb95ad8c"}},[s("img",{staticClass:"ne-image",attrs:{id:"u3b92afa2",src:a(2835),width:"800"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udadd12ea"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.5 冒泡排序的第三轮排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u8634c3d1"}},[s("span",{staticClass:"ne-text"},[t._v(" 第四轮只剩下2个元素，对其进行顺序调整，完成排序。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u573d8b85"}},[s("img",{staticClass:"ne-image",attrs:{id:"u908d2632",src:a(5229),width:"800"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua1c2b1e4"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.6 冒泡排序的第四轮排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"udb1ca1d4"}},[s("span",{staticClass:"ne-text"},[t._v(" 由此可以推导，对于 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("span",{staticClass:"ne-text"},[t._v(" 个元素的排序，需要比较 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" n-1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 轮，对于第 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 轮排序，比较 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" n-i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 次。该算法时间复杂度为O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"mrjZR"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.20")]),t._v(" 冒泡排序\n"),s("code",[t._v('#include <iostream>\nusing namespace std;\n\nvoid bubble_sort(int n,int a[]) {\n    for (int i = 0; i < n; i++) {\n        //对待排序序列进行冒泡排序\n        for (int j = 0; j + 1 < n - i; j++) {\n            //相邻元素进行比较，当顺序不正确时，交换位置\n            if (a[j] > a[j + 1]) {\n                int temp = a[j];\n                a[j] = a[j + 1];\n                a[j + 1] = temp;\n            }\n        }\n        cout<<"第"<<i+1<<"轮排序：";\n        for(int j = 0; j< n; ++j)\n            cout<<a[j]<<\' \';\n        cout<<endl;\n    }\n}\n\nint main(){\n    int a[] = { 5,1,4,2,8 };\n    bubble_sort(sizeof(a)/sizeof(int),a);\n    return 0;\n}')])]),s("h3",{attrs:{id:"bgmHW"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.6.2 其他典型排序方法 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uaf3021b1"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 选择法排序 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ：与冒泡法基本流程相同，但是每次比较的时候不进行交换，只是记录最优值的下标，每轮交换一次，将一个极值放到有序位置。只是交换的次数比冒泡法少。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u0ce5646c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 插入法排序 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ：每次取出一个元素，放到已有有序数组的对应位置上。类似打牌时一边摸牌，一边排序。例如山东流行的“保皇”“勾机”等玩法需要四副牌，这种摸牌方法尤其通用。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u7cd20bd0"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 快速排序 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ：每轮随机选取一个元素作为基准，将所有元素分为比基准大和小两组，分别放到基准的左侧和右侧，然后分别对两组采用相同的方法进行处理。这样排序轮次降低为 ")]),s("span",{staticClass:"ne-math",attrs:{id:"Q2ZuN"}},[s("img",{attrs:{src:a(1790)}})]),s("span",{staticClass:"ne-text"},[t._v(" 。C++中默认提供的sort函数就是采用的快速排序方法。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"QTNB9"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.21")]),t._v(" 快速排序函数\n"),s("code",[t._v('#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nbool cmp(int a,int b){\n    return a>b;\n}\n\nint main()\n{\n    int n;\n    cin >> n;\n    int a[n+3];\n    for (int i=0;i<n;++i){\n        cin >> a[i];\n    }\n    sort(a,a+n);\t\t\t//升序\n    //reverse(a,a+n);\t\t//逆序\n    for (int i=0;i<n;++i){\n        cout << a[i] << " ";\n    }\n    cout<<endl;\n    sort(a,a+n,cmp);\t\t\t//按照cmp函数指定的规则进行排序，此处为降序\n    for (int i=0;i<n;++i){\n        cout << a[i] << " ";\n    }\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"fe9Di"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc64e9462"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接01"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uadd4410b"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua9c16f29"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 1 7 6 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua6197b86"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 5 6 7 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3812d3c5"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 6 5 1 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u318c91fb"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" sort ")])]),s("span",{staticClass:"ne-text"},[t._v(" 默认按照升序排列，如果需要降序，将排列好的数组调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" reverse ")])]),s("span",{staticClass:"ne-text"},[t._v(" 进行逆序即可。 ")])]),s("li",{attrs:{id:"u2e548913"}},[s("span",{staticClass:"ne-text"},[t._v(" 注意第5-7行自定义的比较函数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" cmp ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，要求返回值为布尔类型，两个参数的数据类型与数组中元素的数据类型相同。其中a和b代表数组中的两个元素。函数体中定义两个元素的比较规则。例如第6行中定义当 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a>b ")])]),s("span",{staticClass:"ne-text"},[t._v(" 时返回为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，因此第23行的调用结果形成降序。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u762b0a2f"}},[s("span",{staticClass:"ne-text"},[t._v(" 一般情况下，称某个排序算法稳定，指的是当待排序序列中有相同的元素时，它们的相对位置在排序前后不会发生改变。在NOI竞赛中，经常考察算法的稳定性，下表列出常用排序算法的时间复杂度和稳定性。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em","text-align":"center"},attrs:{id:"u10ca6adf"}},[s("span",{staticClass:"ne-text"},[t._v(" 表5.2 常用排序算法的时间复杂度和稳定性 ")])]),s("table",{staticClass:"ne-table no-border",staticStyle:{width:"855px","text-align":"center"},attrs:{border:"1",id:"NR6nV",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#101E60"},attrs:{colspan:"7",width:"855"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u1680db17"}},[s("strong",[s("span",{staticClass:"ne-text",staticStyle:{color:"#FFFFFF"}},[t._v(" 各种常用排序算法 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{rowspan:"2",width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2c40f95e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 类别 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{rowspan:"2",width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf7152c9c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 排序方法 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{colspan:"3",width:"409"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6cfeb09f"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 时间复杂度 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u58ce580e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 空间复杂度 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{rowspan:"2",width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u83b0542e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 稳定性 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u004e90ac"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 平均情况 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6b8acef7"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 最好情况 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ue3bac58b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 最坏情况 ")])])])]),s("td",{staticStyle:{"background-color":"#CEF5F7"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u0daa17a5"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 辅助存储 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{rowspan:"2",width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u40ed5293"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 插入排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u92729dc2"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 直接插入 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udf56efdb"}},[s("span",{staticClass:"ne-math",attrs:{id:"HGN1C"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u8d3fd7e5"}},[s("span",{staticClass:"ne-math",attrs:{id:"NQ1Na"}},[s("img",{attrs:{src:a(7002)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u35d877f3"}},[s("span",{staticClass:"ne-math",attrs:{id:"eKgbx"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4c6399fa"}},[s("span",{staticClass:"ne-math",attrs:{id:"kCvAS"}},[s("img",{attrs:{src:a(5651)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u370c7fe7"}},[s("span",{staticClass:"ne-text"},[t._v(" 稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接a6"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" shell排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u37889af5"}},[s("span",{staticClass:"ne-math",attrs:{id:"MvQKF"}},[s("img",{attrs:{src:a(2327)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud8d18d45"}},[s("span",{staticClass:"ne-math",attrs:{id:"pWGME"}},[s("img",{attrs:{src:a(7002)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua7f3c274"}},[s("span",{staticClass:"ne-math",attrs:{id:"ebqyJ"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u730a7963"}},[s("span",{staticClass:"ne-math",attrs:{id:"osgIF"}},[s("img",{attrs:{src:a(5651)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接f2"}},[s("span",{staticClass:"ne-text"},[t._v(" 不稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{rowspan:"2",width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u1ed5767b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 选择排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ufb545f21"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 直接选择 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7fe9ef31"}},[s("span",{staticClass:"ne-math",attrs:{id:"x1xB7"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u205cdd53"}},[s("span",{staticClass:"ne-math",attrs:{id:"JBGw0"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua9d7f0c0"}},[s("span",{staticClass:"ne-math",attrs:{id:"NmQGS"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6819ae9d"}},[s("span",{staticClass:"ne-math",attrs:{id:"ZMn2t"}},[s("img",{attrs:{src:a(5651)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u74b89cc1"}},[s("span",{staticClass:"ne-text"},[t._v(" 不稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ued955eb8"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 堆排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua2274385"}},[s("span",{staticClass:"ne-math",attrs:{id:"Fm5Y9"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc8839769"}},[s("span",{staticClass:"ne-math",attrs:{id:"DnYvO"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u8c5a6c3b"}},[s("span",{staticClass:"ne-math",attrs:{id:"zd56k"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u80b48ca2"}},[s("span",{staticClass:"ne-math",attrs:{id:"l2ACv"}},[s("img",{attrs:{src:a(5651)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u52a5fc79"}},[s("span",{staticClass:"ne-text"},[t._v(" 不稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{rowspan:"2",width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub7f5a2fa"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 交换排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u63adc47a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 冒泡排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uff08789c"}},[s("span",{staticClass:"ne-math",attrs:{id:"M3MEp"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u35912cc9"}},[s("span",{staticClass:"ne-math",attrs:{id:"tF5C8"}},[s("img",{attrs:{src:a(7002)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u076cbcb0"}},[s("span",{staticClass:"ne-math",attrs:{id:"rDZna"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u0f3be563"}},[s("span",{staticClass:"ne-math",attrs:{id:"gHKLn"}},[s("img",{attrs:{src:a(5651)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6e4f51d6"}},[s("span",{staticClass:"ne-text"},[t._v(" 稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{width:"107"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u750bacd4"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 快速排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7eb608aa"}},[s("span",{staticClass:"ne-math",attrs:{id:"K9zRk"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u8ba5017e"}},[s("span",{staticClass:"ne-math",attrs:{id:"b4kp9"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ufe372be1"}},[s("span",{staticClass:"ne-math",attrs:{id:"GNze3"}},[s("img",{attrs:{src:a(2555)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4452a5a1"}},[s("span",{staticClass:"ne-math",attrs:{id:"Gc5Ot"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u96959b75"}},[s("span",{staticClass:"ne-text"},[t._v(" 不稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{colspan:"2",width:"214"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u069e59f1"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 归并排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub670663a"}},[s("span",{staticClass:"ne-math",attrs:{id:"TuDp9"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7a6df89b"}},[s("span",{staticClass:"ne-math",attrs:{id:"Lnovf"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u38aa211c"}},[s("span",{staticClass:"ne-math",attrs:{id:"c4HQM"}},[s("img",{attrs:{src:a(9898)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u1a3b185c"}},[s("span",{staticClass:"ne-math",attrs:{id:"YXRZA"}},[s("img",{attrs:{src:a(5651)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u85f71f0f"}},[s("span",{staticClass:"ne-text"},[t._v(" 稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#F8B881"},attrs:{colspan:"2",width:"214"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ubbad094b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 基数排序 ")])])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u003ed9ff"}},[s("span",{staticClass:"ne-math",attrs:{id:"DdBB5"}},[s("img",{attrs:{src:a(2901)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"145"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua7a0166a"}},[s("span",{staticClass:"ne-math",attrs:{id:"Zss1e"}},[s("img",{attrs:{src:a(4823)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"132"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uded5575c"}},[s("span",{staticClass:"ne-math",attrs:{id:"OtUzu"}},[s("img",{attrs:{src:a(2901)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"124"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uacf71304"}},[s("span",{staticClass:"ne-math",attrs:{id:"MYB1Y"}},[s("img",{attrs:{src:a(5497)}})])])]),s("td",{staticStyle:{"background-color":"#F5D480"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc5c85f02"}},[s("span",{staticClass:"ne-text"},[t._v(" 稳定 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#8CCF17"},attrs:{colspan:"7",width:"855"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua5f2187d"}},[s("span",{staticClass:"ne-text"},[t._v(" 注：基数排序的复杂度中，r 代表关键字的基数，d 代表长度，n 代表关键字的个数 ")])])])])])]),s("h3",{attrs:{id:"pyYpq"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T527 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"y6HAe"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8cb5b9ba"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2a7d4f6b"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub2d829b3"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud4a78711"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u82f327cf"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"udea63818"}},[s("span",{staticClass:"ne-text"},[t._v(" 排序是基本算法，理解冒泡法、选择法、插入法和快速排序的基本思想和时间效率；能使用algorithm库中的sort函数对数组进行快速排序，能自定义比较规则 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uaf408078"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/iz3dks#XPPV7",href:"ch3#XPPV7"}},[s("span",{staticClass:"ne-text"},[t._v(" T312 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u80699b14"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucaf0af93"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX511) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"e3uMh"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.7 动态规划* ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u4212ada1"}},[s("span",{staticClass:"ne-text"},[t._v(" 动态规划（Dynamic Programming, DP）是求解多阶段决策问题最优化的一种算法技术。为了解决复杂问题，它将大问题分解为相对简单的子问题，大问题的最优解取决于子问题的最优解。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u49f8e938"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果一个问题，能够把所有可能的答案穷举出来，并且穷举出来后，发现存在重叠子问题，就可以考虑使用动态规划。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 重叠子问题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是指求解大问题时需要多次重复求解小问题，它曾在 ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#XV2Mo",href:"#XV2Mo"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.7 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中被提及。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"链接f7"}},[s("span",{staticClass:"ne-text"},[t._v(" 下面以例题5.7为例，讲解使用动态规划解题的步骤。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u305d31e7"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第一步：穷举分析 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u28ee8075"}},[s("span",{staticClass:"ne-text"},[t._v(" 假设爬到第n级台阶共有f(n)种爬法。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ud056e690"}},[s("span",{staticClass:"ne-text"},[t._v(" 当台阶数n为1时，只有一种爬法，f(1) = 1。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u07eacb16"}},[s("span",{staticClass:"ne-text"},[t._v(" 当台阶数n为2时，有两种爬法。第一种是直接爬两级，第二种是先爬一级然后再爬一级。f(2) = 2。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u9069da46"}},[s("span",{staticClass:"ne-text"},[t._v(" 当台阶数n为3时，要么是先爬到第二级台阶然后再爬一级，要么是先爬到第一级台阶然后再直接爬两级。因此f(3) = f(2) + f(1) = 3。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u0c61c59e"}},[s("span",{staticClass:"ne-text"},[t._v(" 当台阶数n为4时，要么是先爬到第三级台阶然后再爬一级，要么是先爬到第二级台阶然后再直接爬两级。因此f(4) = f(3) + f(2) = 5。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ueaefc84f"}},[s("span",{staticClass:"ne-text"},[t._v(" 以此类推。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接ce"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第二步：确定边界 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue47ffc8c"}},[s("span",{staticClass:"ne-text"},[t._v(" 通过穷举分析，发现当台阶数n是1或2时，能够直接求得有多少种爬法，即f(1) = 1, f(2) = 2。当台阶数 ")]),s("span",{staticClass:"ne-math",attrs:{id:"m0HJe"}},[s("img",{attrs:{src:a(3544)}})]),s("span",{staticClass:"ne-text"},[t._v(" 时，已经呈现出规律：f(n) = f(n-1) + f(n-2)。因此f(1) = 1, f(2) = 2就是爬楼梯问题的边界。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc488b046"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第三步：找规律，确定最优子结构 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6a088195"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 最优子结构 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是指大问题的最优解可以由其子问题的最优解有效地构造出来。当台阶数 ")]),s("span",{staticClass:"ne-math",attrs:{id:"zqyTG"}},[s("img",{attrs:{src:a(3544)}})]),s("span",{staticClass:"ne-text"},[t._v(" 时，有f(n) = f(n-1) + f(n-2)，因此 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)"}},[t._v(" f(n-1)和f(n-2) 就是 f(n) 的最优子结构。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uedc6ea8c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第四步：写出状态转移方程 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u2a3e100f"}},[s("span",{staticClass:"ne-text"},[t._v(" 通过前面三个步骤，得到状态转移方程如下： ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ucdaa97fe"}},[s("span",{staticClass:"ne-math",attrs:{id:"Y9TEb"}},[s("img",{attrs:{src:a(3333)}})])]),s("p",{staticClass:"ne-p",attrs:{id:"u87b7a629"}},[s("span",{staticClass:"ne-text"},[t._v(" 使用动态规划解题的模板如下： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"ZtOXQ"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.22")]),t._v(" 动态规划解题的模板\n"),s("code",[t._v("// 动态规划解题的模板\n// dp[0][0][...] = 边界值;\n// for(状态1: 所有状态1的值){\n//     for(状态2: 所有状态2的值){\n//         for(...){\n//         \t状态转移方程;\n//         }\n//     }\n// }\n#include<iostream>\nusing namespace std;\nint main ()\n{\n    int n;\n    cin>>n;\n    int a[n] = {1,2};\t\t\t\t//设定边界值\n    for(int i=2;i<n;i++)\t\t\t//遍历所有状态1的值\n        a[i] = a[i-1]+a[i-2];\t\t//转移方程\n\tcout<<a[n-1];\n    return 0;\n}")])]),s("h3",{attrs:{id:"Eno2R"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.11 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u9cdbda59"}},[s("span",{staticClass:"ne-text"},[t._v(" 给你一个整数数组 nums ，找到其中最长严格递增子序列(Longest Increasing Subsequence, LIS)的长度。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ucfb6dd5a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 子序列 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" （ ")])]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://leetcode.cn/problems/longest-increasing-subsequence/",href:"https://leetcode.cn/problems/longest-increasing-subsequence/",target:"_blank"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 力扣300 ")])])]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" ） ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"udeba5c2d"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0b14e037"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一行，整数数组nums的元素个数。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub6c27511"}},[s("span",{staticClass:"ne-text"},[t._v(" 第二行，整数数组nums，整数之间用空格分隔。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc881a350"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 <= nums.length <= 2500，-10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])]),s("span",{staticClass:"ne-text"},[t._v(" <= nums[i] <= 10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"u0f375c92"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue32f320f"}},[s("span",{staticClass:"ne-text"},[t._v(" 最长严格递增子序列的长度。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"BVIhn"}},[s("tbody",[s("tr",{staticStyle:{height:"37px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub5129e9c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue2f82da3"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0cea57e7"}},[s("span",{staticClass:"ne-text"},[t._v(" 8 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u88312d24"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 9 2 5 3 7 101 18 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uddfcb250"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"uecf2e9f4"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目分析】 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"#DF2A3F"}})]),s("p",{staticClass:"ne-p",attrs:{id:"u20f8ff78"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第一步：穷举分析 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u5bdd8e5d"}},[s("span",{staticClass:"ne-text"},[t._v(" 以样例输入中的数组[10, 9, 2, 5, 3, 7, 101, 18]为例，进行穷举分析： ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u53e3eb72"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums只有一个元素10时，最长严格递增子序列是{10}，长度是1。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1c421c12"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums加入一个元素9时，最长严格递增子序列是{10}或{9}，长度是1。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uac517123"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums再加入一个元素2时，最长严格递增子序列是{10}或{9}或{2}，长度是1。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1936f4cc"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums再加入一个元素5时，最长严格递增子序列是{2, 5}，长度是2。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6f74c165"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums再加入一个元素3时，最长严格递增子序列是{2, 5}或{2, 3}，长度是2。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u66b7233e"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums再加入一个元素7时，最长严格递增子序列是{2, 5, 7}或{2, 3, 7}，长度是3。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u2d89dc87"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums再加入一个元素101时，最长严格递增子序列是{2, 5, 7, 101}或{2, 3, 7, 101}，长度是4。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u0151f581"}},[s("span",{staticClass:"ne-text"},[t._v(" 当nums再加入一个元素18时，最长严格递增子序列是{2, 5, 7, 101}或{2, 3, 7, 101}或{2, 5, 7, 18}或{2, 3, 7, 18}，长度是4。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u5aa4937b"}},[s("span",{staticClass:"ne-text"},[t._v(" 分析以上过程可得，在以数组每个元素结尾的最长严格递增子序列组成的集合中，元素最多的即为数组的最长严格递增子序列。因此原问题转化成先求出以每个元素结尾的最长严格递增子序列集合，再求最大长度。创建一个整型数组 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" dp ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" dp[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 表示以 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 结尾的最长严格递增子序列的长度，得到表5.3。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em","text-align":"center"},attrs:{id:"ubbacb82b"}},[s("span",{staticClass:"ne-text"},[t._v(" 表5.3 nums[i] 和 dp[i] 的取值 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"750px","text-align":"center"},attrs:{border:"1",id:"CCine",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6f45551d"}},[s("span",{staticClass:"ne-text"},[t._v(" 下标 i ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uec4af441"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uec269dea"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u354dd24d"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ue6fca119"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7dc86c51"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u330d7f3c"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2d943d3a"}},[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])])]),s("td",{attrs:{width:"86"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6627b259"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5e013219"}},[s("span",{staticClass:"ne-text"},[t._v(" nums[i] ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7123c9cd"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u16931e47"}},[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ue635fe3f"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6050f650"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf1c02bb7"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf6167094"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uad51f0cf"}},[s("span",{staticClass:"ne-text"},[t._v(" 101 ")])])]),s("td",{attrs:{width:"86"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5eb4f9ae"}},[s("span",{staticClass:"ne-text"},[t._v(" 18 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u52e601c5"}},[s("span",{staticClass:"ne-text"},[t._v(" dp[i] ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ue8d1cbdd"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ubcaac92c"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接36"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6fa4fa7d"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接18"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u91c56faf"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])]),s("td",{attrs:{width:"83"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud71bbc3e"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])])]),s("td",{attrs:{width:"86"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u27bdeff5"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])])])])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"udf0872ab"}},[s("span",{staticClass:"ne-text"},[t._v(" 事实上，只要在前面找到 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums[j]<nums[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，以 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums[j] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 结尾的严格递增子序列加上 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 即可得到以 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 结尾的严格递增子序列。显然，可能形成多种新的子序列，选择最长的子序列，即为以 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" nums[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 结尾的最长严格递增子序列。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u01f51cce"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第二步：确定边界 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u3cb1c1e4"}},[s("span",{staticClass:"ne-text"},[t._v(" 对于某个数组，dp[0] = 1，dp[1] = 2或1， 因此边界就是 dp[0] =1。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub081aa5a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第三步：找规律，确定最优子结构 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u19f13249"}},[s("span",{staticClass:"ne-text"},[t._v(" 根据穷举分析，发现如下规律： ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6b5dec73"}},[s("span",{staticClass:"ne-text"},[t._v(" 对于 ")]),s("span",{staticClass:"ne-math",attrs:{id:"TO8lP"}},[s("img",{attrs:{src:a(7246)}})]),s("span",{staticClass:"ne-text"},[t._v(" 并且 ")]),s("span",{staticClass:"ne-math",attrs:{id:"XTAS7"}},[s("img",{attrs:{src:a(222)}})]),s("span",{staticClass:"ne-text"},[t._v(" ，有 ")]),s("span",{staticClass:"ne-math",attrs:{id:"EUBFD"}},[s("img",{attrs:{src:a(4193)}})])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue59be560"}},[s("span",{staticClass:"ne-math",attrs:{id:"HX6WB"}},[s("img",{attrs:{src:a(1758)}})]),s("span",{staticClass:"ne-text"},[t._v(" 就是最优子结构。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ucd18944c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 第四步：写出状态转移方程 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u04aba16a"}},[s("span",{staticClass:"ne-text"},[t._v(" 通过前面三个步骤，得到状态转移方程如下： ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u8a69bc4a"}},[s("span",{staticClass:"ne-math",attrs:{id:"po02K"}},[s("img",{attrs:{src:a(7755)}})])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u69cea09f"}},[s("span",{staticClass:"ne-text"},[t._v(" 因此数组nums的最长严格递增子序列的长度为max(dp[i])。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"RWsDJ"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.23")]),t._v(" 动态规划求最长递增子序列的长度\n"),s("code",[t._v("# include<iostream>\nusing namespace std;\n\nint lengthOfLIS(int array[], int length){\n        if(length == 0) return 0;\n        int dp[length];\n        int ans = 1;\n        for(int i = 0; i < length; ++i){\n            dp[i] = 1;\n            for(int j = 0; j < i; ++j) \n                if(array[j] < array[i]) \n                    dp[i] = max(dp[i], dp[j] + 1);\n            ans = max(ans, dp[i]);\n        }\n        return ans;\n}\n\nint main(){\n    int length;\n    cin>>length;\n    int nums[length];\n    for(int i = 0; i < length; ++i)\n        cin>>nums[i];\n\tcout<<lengthOfLIS(nums, length);\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ua96001c8"}},[s("span",{staticClass:"ne-text"},[t._v(" 第4行，数组作为函数的参数时，必须同时传递数组地址和数组中元素的数量，否则无法知道数组的有效范围。详细内容见本章1.5小节。 ")])]),s("li",{attrs:{id:"u28b5e8a1"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11-12行，只有 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" array[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 大于 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" array[j] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，才能将 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" array[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 放在 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" array[j] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 后面以形成更长的严格递增子序列。 ")])]),s("li",{attrs:{id:"u06fd4a0a"}},[s("span",{staticClass:"ne-text"},[t._v(" 第12行用于计算 ")]),s("span",{staticClass:"ne-math",attrs:{id:"rhsFW"}},[s("img",{attrs:{src:a(595)}})]),s("span",{staticClass:"ne-text"},[t._v(" ，从而确定最终的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" dp[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，这与 ")]),s("span",{staticClass:"ne-math",attrs:{id:"CnZl6"}},[s("img",{attrs:{src:a(7597)}})]),s("span",{staticClass:"ne-text"},[t._v(" 是等价的。 ")])]),s("li",{attrs:{id:"u4eaed9ed"}},[s("span",{staticClass:"ne-text"},[t._v(" 第13行用于计算所有 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" dp[i] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中的最大值。 ")])]),s("li",{attrs:{id:"uc36e49c0"}},[s("span",{staticClass:"ne-text"},[t._v(" 分析lengthOfLIS函数可知，该函数先解决子问题再递推到大问题，具体过程为使用多个for循环填写数组，根据已计算的结果，逐步递推出大问题的解决方案。这便是动态规划的解题思路。 ")])])]),s("h3",{attrs:{id:"Km6tT"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T528 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"iMJcI"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5680fc5b"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7688ac58"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uabb9314e"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0af822ff"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u35f0bac4"}},[s("span",{staticClass:"ne-text"},[t._v(" T528 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7645f82d"}},[s("span",{staticClass:"ne-text"},[t._v(" 动态规划将大问题分解为子问题，求解时从子问题递推到大问题 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub51f8eb2"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#pNT2u",href:"#pNT2u"}},[s("span",{staticClass:"ne-text"},[t._v(" T513 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9e21fa1e"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#fakFb",href:"#fakFb"}},[s("span",{staticClass:"ne-text"},[t._v(" T525 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud8db5685"}},[s("br")])])])])]),s("h1",{attrs:{id:"rxqUf"}},[s("span",{staticClass:"ne-text"},[t._v(" 3. 二维数组 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ubec09511"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" C++ 支持多维数组。多维数组声明的一般形式如下： ")])]),s("details",{staticClass:"lake-collapse"},[s("summary",{attrs:{id:"ufb553712"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" type name ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" [ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" size1 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ][ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" size2 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ]...[ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" sizeN ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ]; ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uf2bc85f4"}},[s("span",{staticClass:"ne-text"},[t._v(" type 可以是任意有效的 C++ 数据类型，arrayName 是一个有效的 C++ 标识符。 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)"}},[t._v(" 例如，下面的声明创建了一个三维 5X10X4 整型数组： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4153bb41"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 136)"}},[t._v(" int ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" threedim ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" [ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 5 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ][ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 10 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ][ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 4 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ]; ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1600e452"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)"}},[t._v(" 一个二维数组可以被认为是一个带有 x 行和 y 列的表格。下面是一个二维数组，包含 3 行和 4 列： ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u285e514b"}},[s("img",{staticClass:"ne-image",attrs:{id:"M8GwC",src:a(7720),width:"427"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u10fe7d60"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.7 二维数组的示意图 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u51b03844"}},[s("span",{staticClass:"ne-text"},[t._v(" 多维数组可以通过在括号内为每行指定值来进行初始化。下面是一个带有 3 行 4 列的数组。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud873fac2"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 136)"}},[t._v(" int ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" a ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" [ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 3 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ][ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 4 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ] ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" = ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" { ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" { ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 0 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 1 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 2 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 3 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" } ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(136, 0, 0)"}},[t._v(" /* 初始化索引号为 0 的行 */ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}})])]),s("p",{staticClass:"ne-p",staticStyle:{"margin-left":"6em"},attrs:{id:"u7d5b1997"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}}),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" { ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 4 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 5 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 6 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 7 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" } ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(136, 0, 0)"}},[t._v(" /* 初始化索引号为 1 的行 */ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}})])]),s("p",{staticClass:"ne-p",staticStyle:{"margin-left":"6em"},attrs:{id:"u67c79983"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}}),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" { ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 8 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 9 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 10 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 11 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" } ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(136, 0, 0)"}},[t._v(" /* 初始化索引号为 2 的行 */ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" }; ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue7d88871"}},[s("span",{staticClass:"ne-text"},[t._v(" 内部嵌套的括号是可选的，下面的初始化与上面是等同的： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4b6ad1c0"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 136)"}},[t._v(" int ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}},[t._v(" a ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" [ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 3 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ][ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 4 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" ] ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" = ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)"}}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" { ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 0 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 1 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 2 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 3 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 4 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 5 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 6 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 7 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 8 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 9 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 10 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 102, 102)"}},[t._v(" 11 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(102, 102, 0)"}},[t._v(" }; ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ubce31078"}},[s("span",{staticClass:"ne-text"},[t._v(" 多维数组如果被进行初始化，或作为函数参数时，紧挨变量名的第一个维度的长度可以省略，其余的元素数量必须明确定义。否则编译器无法获知每个维度的长度。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6b4b00ff"}},[s("span",{staticClass:"ne-text"},[t._v(" 编程时，无论是输入输出还是遍历，多维数组通常是和嵌套循环搭配使用的。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"qaU4R"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.24")]),t._v(" 二维数组遍历\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\n\nint main ()\n{\n    int a[2][5] = { {3,5,7,6,8}, {1,8,2,5,3}};\n    cout<<\"行\\\\列\";\n    for ( int j = 0; j < 5; j++ )\n        cout<<'\\t'<<j;\n    cout<<endl;\n    for ( int i = 0; i < 2; i++ ){\n        cout<<i;\n        for ( int j = 0; j < 5; j++ ){\n            cout <<'\\t'<< a[i][j];\n        }\n        cout<<endl;\n    }\n    return 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"lB0jP"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ueef96383"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc7c9c639"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub8accd82"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u32adee92"}},[s("span",{staticClass:"ne-text"},[t._v(" 行\\列 0 1 2 3 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0c39d4d2"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 3 5 7 6 8 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u14b48965"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 1 8 2 5 3 ")])])])])])]),s("h3",{attrs:{id:"uiPXq"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.12 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ub4c4ed69"}},[s("span",{staticClass:"ne-text"},[t._v(" 旋转是图像处理的基本操作，在这个问题中，你需要将一个图像逆时针旋转90 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。计算机中的图像可以用一个矩阵来表示。为了旋转一个图像，只需要旋转对应的矩阵即可。 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" （CSP2015年3月真题） ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"u2a9c27cb"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6a4550a1"}},[s("span",{staticClass:"ne-text"},[t._v(" 输入的第一行包含两个整数 n、m,分别表示图像矩阵的行数和列数。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2614b15e"}},[s("span",{staticClass:"ne-text"},[t._v(" 接下来n行，每行包含m个整数，表示输入的图像。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2b201bd7"}},[s("span",{staticClass:"ne-text"},[t._v(" 1≤n,m≤1000， 矩阵中的数都是不超过1000的非负整数。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接8d"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uef65a8ce"}},[s("span",{staticClass:"ne-text"},[t._v(" 输出m行，每行包含n个整数，表示原始矩阵逆时针旋转90° 后的矩阵。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"KXcFh"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubaec865d"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1b5c4907"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uac2722f4"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub28eb368"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 5 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ubf3ade96"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 2 4 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua127b29b"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4c1a9eb9"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接fe"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 3 ")])])])])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"Utgvz"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.25")]),t._v(" 旋转矩阵\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\nint a[1005][1005];\nint main ()\n{\n    int n,m;\n    cin>>n>>m;\n    for ( int i = 0; i < n; i++ ){\n        for ( int j = 0; j < m; j++ ){\n            cin>>a[i][j];\n        }\n    }\n    for ( int j = m-1; j >=0; j-- ){\n        for ( int i = 0; i < n; i++ ){\n            cout<<a[i][j]<<' ';\n        }\n        cout<<endl;\n    }\n    return 0;\n}")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ufab44283"}},[s("span",{staticClass:"ne-text"},[t._v(" 在二维数组中，最重要的是对角线、上三角和下三角的概念。对角线上行列坐标相等，上三角中的行坐标小于列坐标，下三角中列坐标小于行坐标。 ")])]),s("div",{staticStyle:{display:"flex","justify-content":"center","align-items":"center"}},[s("img",{staticStyle:{display:"block",width:"30%"},attrs:{id:"WyisE",src:a(6509)}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub096f195"}},[s("span",{staticClass:"ne-text"},[t._v(" 图5.8 二维数组的主对角线和上三角、下三角 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"aN3VP"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.26")]),t._v(" 对角线图案\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\n\nint main ()\n{\n    int n;\n    cin>>n;\n    int a[n][n];\n    for ( int i = 0; i < n; i++ ){\n        for ( int j = 0; j < n; j++ ){\n            a[i][j]=abs(i-j);\n            cout<<a[i][j]<<' ';\n        }\n        cout<<endl;\n    }\n    return 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"Ralfh"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u04cda78a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u03261e32"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2177d376"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf39f0907"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 1 2 3 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub32124db"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 0 1 2 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud3198c2e"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 1 0 1 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u62ab26cd"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 2 1 0 1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u78d4ff60"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 3 2 1 0 ")])])])])])]),s("h3",{attrs:{id:"D8kyt"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T531 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"j8JCx"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5085b907"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ufd179469"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u16ecd914"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u69dd8e6c"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2beb1e10"}},[s("span",{staticClass:"ne-text"},[t._v(" T531 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc4085f83"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握二维数组的基本使用方法，掌握主对角线、上三角、下三角的概念 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue6d00adb"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#sDNu2",href:"#sDNu2"}},[s("span",{staticClass:"ne-text"},[t._v(" T511 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接22"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/qvzagc#WC0X9",href:"ch6#WC0X9"}},[s("span",{staticClass:"ne-text"},[t._v(" T623 ")])])])])])])]),s("h1",{attrs:{id:"JEgY6"}},[s("span",{staticClass:"ne-text"},[t._v(" 4. C++的字符串 ")])]),s("h2",{attrs:{id:"gItBo"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.1 字符串的基本操作 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ude345260"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串是常见的基本类型，在C++中提供了string类型进行字符串处理。可以将字符串理解成一个数组，其中每个元素都是一个字符，可以按照数组的形式进行访问。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"jHFGi"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.27")]),t._v(" 以数组的形式访问字符串\n"),s("code",[t._v('#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n    string s = "1234567890";\n    for(int i=0,len=s.length(); i<len; i++){//采用数组形式进行遍历\n        cout<<s[i]<<" ";\n    }\n    cout<<endl;\n    s[5] = \'a\';\t\t\t//修改字符串中某个字符\n    cout<<s<<endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"YliaL"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6d4e95c2"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u705cceb8"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8acd97ad"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u31b98cee"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 3 4 5 6 7 8 9 0 "),s("br")]),s("span",{staticClass:"ne-text"},[t._v(" 12345a7890 ")])])])])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u95fefb43"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串在C语言中是用'\\0'结尾的字符数组进行表达的，但是操作和理解上都比较复杂，按照数组的基本规定，不能进行整体赋值，不能进行整体比较。因此在在C++中将字符数组封装成了一个类string，通过成员函数和操作符重载等一系列面向对象的处理，string类在处理上变得非常简单。例如当需要将两个字符串进行拼接时，只需要用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" + ")])]),s("span",{staticClass:"ne-text"},[t._v(" 进行完成。此外string还提供了增删改查等基本操作： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"eaCxb"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.28")]),t._v(" string类提供的基本操作\n"),s("code",[t._v('#include <iostream>\nusing namespace std;\n\nint main(){\n    cout<<"字符串拼接："<<endl;\n    string s1 = "first ";\n    string s2 = "second ";\n    cout<<s1+s2<<endl<<s1+"third"<<endl;\n    cout<<"插入子字符串："<<endl;\n    s1.insert(3,"aaa");\n    cout<<s1<<endl;\n    cout<<"删除子字符串："<<endl;\n    s1.erase(3);\n    s2.erase(3,2);\n    cout<<s1<<endl<<s2<<endl;\n    cout<<"抽取子字符串："<<endl;\n    s1 = "first third second";\n    s2 = s1.substr(6, 5);\n    cout<<s2<<endl;\n    cout<<"字符串查找："<<endl;\n    s1 = "first second third second";\n    s2 = "second";\n    size_t index = s1.find(s2,7);\n    if(index < s1.length())\n        cout<<"Found at index : "<< index <<endl;\n    else\n        cout<<"Not found"<<endl;\n    index = s1.rfind(s2,7);\n    if(index < s1.length())\n        cout<<"Found at index : "<< index <<endl;\n    else\n        cout<<"Not found"<<endl;\n    cout<<"查找子字符串任意字符在字符串中首次出现的位置："<<endl;\n    index = s1.find_first_of(s2);\n    if(index < s1.length())\n        cout<<"Found at index : "<< index <<endl;\n    else\n        cout<<"Not found"<<endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"h46DV"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u825d0821"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4e997850"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接61"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucc226c1a"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串拼接： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接36"}},[s("span",{staticClass:"ne-text"},[t._v(" first second ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u25c2e7fb"}},[s("span",{staticClass:"ne-text"},[t._v(" first third ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u60325d9c"}},[s("span",{staticClass:"ne-text"},[t._v(" 插入子字符串： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8de432ca"}},[s("span",{staticClass:"ne-text"},[t._v(" firaaast ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue472f3bd"}},[s("span",{staticClass:"ne-text"},[t._v(" 删除子字符串： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uf955d9b4"}},[s("span",{staticClass:"ne-text"},[t._v(" fir ")])]),s("p",{staticClass:"ne-p",attrs:{id:"链接af"}},[s("span",{staticClass:"ne-text"},[t._v(" secd ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u70f6851f"}},[s("span",{staticClass:"ne-text"},[t._v(" 抽取子字符串： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue3267cc6"}},[s("span",{staticClass:"ne-text"},[t._v(" third ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua62c9ecb"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串查找： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9d2fb2c5"}},[s("span",{staticClass:"ne-text"},[t._v(" Found at index : 19 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6bc0543e"}},[s("span",{staticClass:"ne-text"},[t._v(" Found at index : 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2e4bf8a7"}},[s("span",{staticClass:"ne-text"},[t._v(" 查找子字符串任意字符在字符串中首次出现的位置： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u945d951c"}},[s("span",{staticClass:"ne-text"},[t._v(" Found at index : 3 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ubaf6ee95"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" insert() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数可以在 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" string ")])]),s("span",{staticClass:"ne-text"},[t._v(' 字符串中指定的位置插入另一个字符串，第一个参数表示要插入的位置，也就是下标；第二个参数表示要插入的字符串。第10行在下标为3的位置插入了一个子串"aaa"。 ')])]),s("li",{attrs:{id:"u2714a4f3"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","background-color":"rgb(238, 238, 238)","font-size":"14px"}},[t._v(" erase() ")]),s("span",{staticClass:"ne-text"},[t._v(" 函数可以删除 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" string ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中的一个子字符串。第一个参数表示要删除子字符串的起始下标，第二个参数表示要删除子字符串的长度。如果没有第二个参数，那么直接删除到字符串结束处的所有字符。 ")])]),s("li",{attrs:{id:"u811f72d7"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","background-color":"rgb(238, 238, 238)","font-size":"14px"}},[t._v(" substr() ")]),s("span",{staticClass:"ne-text"},[t._v(" 函数用于从 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" string ")])]),s("span",{staticClass:"ne-text"},[t._v(" 字符串中提取子字符串。第一个参数为要提取的子字符串的起始下标，第二个参数为要提取的子字符串的长度。 ")])]),s("li",{attrs:{id:"u2a53ad25"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" find() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数用于在 string字符串中查找子字符串出现的位置。第一个参数为待查找的子字符串，第二个参数为开始查找的位置（下标）；如果不指明，则从第0个字符开始查找。最终返回的是子字符串第一次出现在字符串中的起始下标。如果没有查找到子字符串，那么会返回一个无穷大值。第23行的查找从下标7开始，因此找到的是第二个second出现的位置19。 ")])]),s("li",{attrs:{id:"u02e08b73"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" rfind() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数与 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" find() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 类似，但是它最多查找到第二个参数处，如果到了第二个参数所指定的下标还没有找到子字符串，则返回一个无穷大值。 ")])]),s("li",{attrs:{id:"u2926ca9f"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" find_first_of() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数不把子串作为一个整体，而是查找子串中任意字符在字符串中第一次出现的位置。第34行进行查找时，'s'出现在second中，并且它在s1中的下标为3，因此返回结果为3，并不是second的6。 ")])]),s("li",{attrs:{id:"链接43"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" 在string的众多函数中，涉及位置、长度信息时，使用的数据类型都是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" size_t ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" ，在64位系统中 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" size_t ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" 定义为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" long long unsigned int ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" ，在32位系统中定义为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" unsigned int ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" ，也就是一个无符号的整型。 ")])])]),s("h3",{attrs:{id:"eRcMx"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T541 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"oCLEW"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接0c"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"461"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u44a295c4"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc93f9fc6"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"105"}},[s("p",{staticClass:"ne-p",attrs:{id:"udd375b4b"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"udb43b1e7"}},[s("span",{staticClass:"ne-text"},[t._v(" T541 ")])])]),s("td",{attrs:{width:"461"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue50bb5f1"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握string字符串增删改查的基本操作和对应的函数 ")])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u29d1a12b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/afrstd#LBVF5",href:"ch2#LBVF5"}},[s("span",{staticClass:"ne-text"},[t._v(" T243 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#sDNu2",href:"#sDNu2"}},[s("span",{staticClass:"ne-text"},[t._v(" T511 ")])])])]),s("td",{attrs:{width:"105"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接aa"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#ucMFa",href:"ch8#ucMFa"}},[s("span",{staticClass:"ne-text"},[t._v(" T832 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#kYcFw",href:"ch8#kYcFw"}},[s("span",{staticClass:"ne-text"},[t._v(" T842 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"660"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf034c48d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX513) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX514) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"AUfOt"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.2 字符串的容量和长度* ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uc310ba21"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 字符串的长度和存储容量是两个概念，二者并不一致。长度指字符串中实际有效的字符数量，而存储容量是指对该字符串分配的存储空间大小。长度可以用size()或length()函数获取，两个函数是完全等价的；存储容量用capacity()获取。长度和容量为什么会不相等呢？因为字符串本质上是一个字符构成的数组，数组中所有元素在内存中必须连续分配。当字符串长度发生变化，已有空间不能满足需求时，就需要重新分配空间，而为了保证空间的连续性，只能进行全部存储空间的重新分配。字符串作为常用数据类型，其基本操作增删改都会涉及到长度变化，如果每次都全部重新分配内存空间，运行效率将会变得非常低。因此通常字符串的容量都要大于有效字符的长度，这样当字符串长度进行小范围变化时，不需要重新分配空间。而当出现空间不足的情况时，重新分配的新空间还是会有一定的冗余度。至于新空间具体是多少，是由操作系统提供的策略进行保障的，用户不需要过多了解。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"vFA73"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.29")]),t._v(" 字符串的容量和长度\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\n\nint main(){\n    string s;\n    cout<<s.empty()<<endl;\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    s=\"abcdefghijklmnopqrstuvwxyz\";\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    s=\"abcdefghijklmnopqrstuvwxyzabcdefg\";\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    s.resize(20);\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    s.resize(70);\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    s.reserve(80);\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    s.reserve(50);//或s.reserve()\n    cout<<s.size()<<'\\t'<<s.capacity()<<endl;\n    return 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"v67O8"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"udf465b03"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9be33970"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua46e4da5"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc6fccaf1"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u59f65a8b"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 15 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uf2d70a4d"}},[s("span",{staticClass:"ne-text"},[t._v(" 26 30 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uce58d709"}},[s("span",{staticClass:"ne-text"},[t._v(" 33 60 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub9e82173"}},[s("span",{staticClass:"ne-text"},[t._v(" 20 60 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua77f0941"}},[s("span",{staticClass:"ne-text"},[t._v(" 70 120 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue772ac33"}},[s("span",{staticClass:"ne-text"},[t._v(" 70 80 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"udef5bd7e"}},[s("span",{staticClass:"ne-text"},[t._v(" 70 70 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ufd4cde6d"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 实际输出结果与执行环境有关，可能会有所差异，但是原理上相同。 ")])]),s("li",{attrs:{id:"u99ef2917"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 可以通过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" resize() ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 函数调整字符串的长度(size)，通过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" reserve() ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 函数调整字符串的容量(capacity)。size调整时会导致capacity跟随发生变化，但是capacity调整时，size不会发生变化。 ")])]),s("li",{attrs:{id:"u4e88e11b"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" empty ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 可以判断一个字符串是否为空，其效率比 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" size() ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 函数要高。 ")])]),s("li",{attrs:{id:"u8689a38f"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 第7行看到空字符的size为0，但是其容量并非为0，也就是说，当字符数量小于15时，不需要为该字符串重新分配空间。 ")])]),s("li",{attrs:{id:"ue7c2cf7b"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 第8行因为新字符串长度超过15，size变为实际长度26，但是capacity=30>26，第10行再次打破capacity的限制变成33后，capacity被调整为60。第12行通过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" resize ")])]),s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 函数将size变小后，capacity不会发生变化，但第14行将size变大后超过了当前的capacity，capacity被再次扩容。可以确定，capacity会一直大于等于size，但具体的值是根据操作系统的策略进行动态调整的。 ")])]),s("li",{attrs:{id:"ua1725432"}},[s("span",{staticClass:"ne-text"},[t._v(" string可以调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" reserve() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 缩减实际容量。但用一个“小于现有容量”的参数调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" reserve() ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，是一种非强制性请求。也就是说可能想要缩减容量至某个目标，但不保证一定达成。string的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" reserve() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 参数默认值为0，所以调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" reserve() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 并且不给参数，就是一种“非强制性适度缩减请求”。第18行缩放目标小于size的值，但新的capacity变为70，并没有按照目标指示变成50或0。 ")])])]),s("h3",{attrs:{id:"MuqMr"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.13 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u99810e85"}},[s("span",{staticClass:"ne-text"},[t._v(" 完成函数string str_remove(string s, char ch)，从s中删除指定的字符ch，并将剩余字符串作为返回值。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"evXWR"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub59cfe6a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u909b8f93"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2a488e3b"}},[s("span",{staticClass:"ne-text"},[t._v(" s=\"abbce\", ch='b' ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5d3dd7fa"}},[s("span",{staticClass:"ne-text"},[t._v(" ace ")])])])])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"s01yL"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.30")]),t._v(" 删除指定字符\n"),s("code",[t._v("string str_remove(string s, char ch)\n{\n    size_t j=0;\n    for(size_t i=0; i<s.size(); i++)\n        if(s[i]!=ch)\n            s[j++]=s[i];\n    s.resize(j);\n    return s; \n}")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ub287144e"}},[s("span",{staticClass:"ne-text"},[t._v(" string在本质上是由字符组成的数组。不能做物理删除，只能形成逻辑删除。比较自然的思路是，每次遇到指定字符时，都进行前移操作，形成逻辑上的删除效果。但这种方法需要嵌套循环，算法复杂度为O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )。代码5.30中，借助了复制形成新字符串的想法，将留存的字符形成新的字符串。因为删除后的字符串长度一定小于或等于原字符串，即 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i>=j ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，因此可以在原字符串的空间上完成复制操作。j只有在找到符合要求的字符后，才执行加1操作。这种想法将算法复杂度降为O(n)，并且不需要开辟新的空间。 ")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u52c4cdbe"}},[s("span",{staticClass:"ne-text"},[t._v(" 第3-4行中 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" j ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的数据类型定义为size_t，无论是size()还是length()返回的数据类型都是size_t，保证数据类型的兼容性。size_t依赖于编译器，在32位编译器下等同于unsigned int，在64位编译器下等同于unsigned long long，其值永远非负。 ")])]),s("li",{attrs:{id:"u69755ee1"}},[s("span",{staticClass:"ne-text"},[t._v(" 第7行中用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" resize() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 重新调整了s的长度，否则删除处理后s的长度保持不变。 ")])])]),s("h3",{attrs:{id:"zTfai"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T542 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"XqduF"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc1cdf6cf"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u61e65e71"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6f07bdca"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6b55ad32"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接5f"}},[s("span",{staticClass:"ne-text"},[t._v(" T542 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9c7fc21"}},[s("span",{staticClass:"ne-text"},[t._v(" 明确区分字符串的物理空间和逻辑上的有效空间，新建立的字符串一定要重新resize，否则逻辑空间长度不正确 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u78637a5d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#pNT2u",href:"#pNT2u"}},[s("span",{staticClass:"ne-text"},[t._v(" T513 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucea8028d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#BPKTU",href:"ch8#BPKTU"}},[s("span",{staticClass:"ne-text"},[t._v(" T825 ")])])])])])])]),s("h2",{attrs:{id:"Vfxnc"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.3 字符串与整型的相互转换 ")])]),s("h3",{attrs:{id:"Stkta"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.3.1 字符串转数值 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u5923d9d8"}},[s("span",{staticClass:"ne-text"},[t._v(" cin可以从标准输入流中读取整型或其他类型的数据，因此可以将字符串首先转换为流数据，然后从流中读取相应类型的数据，这就是转换的第一种方法；此外，C语言的库函数中存在字符串转换其他标准数据类型的函数，例如：字符串转整型atoi，字符串转浮点数atof等，但C语言中不存在string类型，需要先调用string的c_str()函数将string转换为C风格字符串，才能得到正确的结果。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"ER6fd"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.31")]),t._v(" 字符串转数值\n"),s("code",[t._v('#include<iostream>\n#include<cstdlib>      //atoi,atof\n#include<sstream>       //istringstream\nusing namespace std;\n\nint main()\n{\n    string a="1234";\n    //使用字符串流将字符串转换为整型\n    istringstream is(a); //构造输入字符串流，流的内容初始化为“12”的字符串\n    int i;\n    is >> i; //从is流中读入一个int整数存入i中\n    cout<<i+1<<endl;  //i已经是整型，可以进行数学运算\n    //atoi和atof的使用方式\n    cout<<atoi(a.c_str())-1<<endl;     //注意一定要使用c_str函数将string转换为C风格字符串\n    cout<<atof("1212.34")+1<<endl;     //双引号构成的字符串是C风格字符串\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"Uelpq"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8c832ce9"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1e9f8a6b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uba51633b"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4ea75a3f"}},[s("span",{staticClass:"ne-text"},[t._v(" 1235 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0af9fec1"}},[s("span",{staticClass:"ne-text"},[t._v(" 1233 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue2d0c03c"}},[s("span",{staticClass:"ne-text"},[t._v(" 1213.34 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ua1c1e480"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" atoi ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" atof ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是C语言函数，只支持C语言风格字符串，即以 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" \\0 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 结尾的字符数组。如果用到 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" string ")])]),s("span",{staticClass:"ne-text"},[t._v(" 类型，必须通过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" c_str ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数转换为C风格字符串。 ")])])]),s("h3",{attrs:{id:"AhO5J"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T543-T544 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"kKhdp"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubcaad7e8"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uad510df1"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u84b54ee1"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u58e4bad2"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u30993e50"}},[s("span",{staticClass:"ne-text"},[t._v(" T543 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2aeb5c91"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握字符串转数值的常用方法。istringstream虽然使用上比较繁琐，但是好用 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc0b89462"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FpCPw",href:"ch4#FpCPw"}},[s("span",{staticClass:"ne-text"},[t._v(" T484 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u519f65b0"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u590b48d5"}},[s("span",{staticClass:"ne-text"},[t._v(" T544 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue2ff300e"}},[s("span",{staticClass:"ne-text"},[t._v(" 了解string与C风格字符串不同，以及通过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" c_str ")])]),s("span",{staticClass:"ne-text"},[t._v(" 完成转换 ")])])]),s("td",{attrs:{width:"70"}}),s("td",{attrs:{width:"67"}})])])]),s("h3",{attrs:{id:"JeULu"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.3.2 数值转字符串 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u4ebfe2da"}},[s("span",{staticClass:"ne-text"},[t._v(" C++中的std提供了标准的函数to_string()可以将基础数据类型转换为字符串，不需要任何头文件。函数to_string()可以满足绝大多数情况下的转换需求，但是如果有精度和宽度限制，或其他特殊需求时，处理比较繁琐。这时可以使用sprintf函数将需要的内容转换为C风格字符串，然后再将C风格字符串转换为string类型。sprintf函数与函数printf的使用方法几乎完全类似，只是printf将结果打印到标准输出中，而sprintf将结果打印到一个C风格的字符串中。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"H9HcS"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.32")]),t._v(" 数值转字符串\n"),s("code",[t._v('#include<iostream>\n#include<sstream>\t\t//ostringstream的头文件\nusing namespace std;\n\nint main()\n{\n    //to_string方式\n    cout<<to_string(1234)<<endl;\n    cout<<to_string(1234.56)<<endl;\n    //sprintf方式转换为C风格字符串\n    char str[1000];\t\t//C风格的字符数组用来存储C风格的字符串\n    sprintf(str,"%.2f",1.2345);\n    //C风格字符串转换为string类型\n    string s=str;\t\t//初始化\n    string s1(str);\t\t//构造函数\n    string s2 {str};\t//初始化\n    cout<<s<<endl;\n    cout<<s1<<endl;\n    cout<<s2<<endl;\n    ostringstream oss;\n    oss<<3.14;\n    oss<<" ";\n    oss<<55555555;\n    cout<<oss.str();\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"k34j7"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接44"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5ef407bd"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u82c7b1b9"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1529fbca"}},[s("span",{staticClass:"ne-text"},[t._v(" 1234 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ubbe18caa"}},[s("span",{staticClass:"ne-text"},[t._v(" 1234.560000 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u74cb39d1"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.23 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u81f79acc"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.23 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7ead3c76"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.23 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue1d78aa1"}},[s("span",{staticClass:"ne-text"},[t._v(" 3.14 55555555 ")])])])])])]),s("h3",{attrs:{id:"ADJJr"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T545 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"FndsP"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufb180b32"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua18200e5"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u77e0b94f"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub053fbcd"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua9c80eb7"}},[s("span",{staticClass:"ne-text"},[t._v(" T545 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8550f575"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握数值转字符串的基本方法，最重要的方法是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" to_string ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"udbeed6ae"}},[s("span",{staticClass:"ne-text"},[t._v(" ostringstream是C++中拼接字符串的重要方法 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u67ab53a5"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubc255612"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#CUEPT",href:"#CUEPT"}},[s("span",{staticClass:"ne-text"},[t._v(" T546 ")])])])])])])]),s("h2",{attrs:{id:"ROwVJ"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.4 字符串分割 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue26beeb1"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串分割是常见操作，在Python，Java等语言中，可以通过简单的调用split完成分割，但是C/C++中不存在这样的函数。C语言中可以采用“循环+strtok”的方式完成分割，但代码比较繁琐。本节提供两种基于字符串数据流的方法，简单有效地完成分割操作。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"XFh3o"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.33")]),t._v(" 字符串分割\n"),s("code",[t._v("#include <iostream>\n#include <sstream>\nusing namespace std;\nint main()\n{\n    string str = \"good good study day day up\";\n    istringstream in(str);\t\t\t\t\t\t//将字符串转换为数据流\n// 方法1：借助数据流以空白符分割的特性，形成字符串的分割\n    string s;\n    while (in >> s){\n        cout<<s<<' ';\n    }\n    cout<<endl;\n\n    str = \"good,good,study,day,day,up\";\n    istringstream in2(str);\t\t\t\t\t\t//将字符串转换为数据流\n// 方法2：利用自定义分割符的getline函数，达到采用任意字符分割的效果\n    while (getline(in2, s, ',')){  \t//这里单引号要注意，第3个参数可以是任意字符\n        cout<<s<<' ';\n    }\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"G9Zvy"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接3d"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue8c28edd"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2d1063c7"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u079dbb94"}},[s("span",{staticClass:"ne-text"},[t._v(" good good study day day up ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u871dd33f"}},[s("span",{staticClass:"ne-text"},[t._v(" good good study day day up ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"链接90"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果分割符为空白符，采用方法1更加简单；如果分割符为任意字符，只能采用方法2。 ")])]),s("li",{attrs:{id:"u60711e1f"}},[s("span",{staticClass:"ne-text"},[t._v(" 采用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" ostringstream ")])]),s("span",{staticClass:"ne-text"},[t._v(" 对字符串进行拼接，采用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" istringstream ")])]),s("span",{staticClass:"ne-text"},[t._v(" 对字符串进行分割。 ")])])]),s("h3",{attrs:{id:"CUEPT"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T546 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"uP0mE"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ube9fef26"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u23b655ea"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"132"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua45d6998"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucf0a1e39"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"37px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc48f8683"}},[s("span",{staticClass:"ne-text"},[t._v(" T546 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接f8"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握用数据流对字符串进行分割的方法 ")])])]),s("td",{attrs:{width:"132"}},[s("p",{staticClass:"ne-p",attrs:{id:"u81eeb202"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/afrstd#ri2d9",href:"ch2#ri2d9"}},[s("span",{staticClass:"ne-text"},[t._v(" T271 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FpCPw",href:"ch4#FpCPw"}},[s("span",{staticClass:"ne-text"},[t._v(" T484 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#ADJJr",href:"#ADJJr"}},[s("span",{staticClass:"ne-text"},[t._v(" T545 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf94e1411"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#K2mZX",href:"#K2mZX"}},[s("span",{staticClass:"ne-text"},[t._v(" T547 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"684"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua347047d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX514) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX515) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"o43D1"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.5 子串问题 ")])]),s("h3",{attrs:{id:"nES6r"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.14 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"u66d2ea1d"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 昕哥有一串很长的英文字母，可能包含大写和小写。在这串字母中，有很多连续的是重复的。昕哥想了一个办法将这串字母表达得更短：将连续的几个相同字母写成字母+出现次数的形式。例如，连续的5个a，即 aaaaa，简写成 a5。对于这个例子：aaaaaCCeeelHH，昕哥可以简写成 a5C2e3lH2。为了方便表达，昕哥不会将连续的超过9个相同的字符写成简写的形式。请帮助昕哥完成简写。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua621594f"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"u6a9ffb01"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输入一行为一个由大写字母和小写字符构成的字符串，长度不超过100000。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2f3e916d"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"ua54693d8"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输出为一行字符串，表示简写后的字符串。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"iJmhe"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.34")]),t._v(" 子串问题\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\nvoid print(const string& s){\n    if(s.size()==1||s.size()>9)\n        cout<<s;\n    else\n        cout<<s[0]<<s.size();\n}\nint main() {\n\tstring a;\n\tcin>>a;\n\tsize_t left=0;\n    a += '$';\n\tfor(size_t j=1;j<a.size();j++){\n        if(a[j]^a[left]){\t\t\t\t\t//或写成if(a[j]!=a[left])\n            print(a.substr(left,j-left));\n            left = j;\n        }\n    }\n\treturn 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"KNf10"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接92"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接39"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc894fc48"}},[s("span",{staticClass:"ne-text"},[t._v(" aaaaaCCeeelHH ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u39bece20"}},[s("span",{staticClass:"ne-text"},[t._v(" a5C2e3lH2 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u643ad9e5"}},[s("span",{staticClass:"ne-text"},[t._v(" 对于每个子串的缩写，是一个相对比较独立的过程。以上代码中将其独立成一个函数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" print ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，这样能有效降低程序的复杂度，强烈建议使用。 ")])]),s("li",{attrs:{id:"u8defc159"}},[s("span",{staticClass:"ne-text"},[t._v(" 用变量 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" left ")])]),s("span",{staticClass:"ne-text"},[t._v(" 记录每个子串的起点，然后用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" substr ")])]),s("span",{staticClass:"ne-text"},[t._v(" 截取每个子串，分别送到 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" print ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中去进行缩写。这是子串拆分的经典方法。其本质上就是采用尺取法的同向扫描，利用快慢指针形成字符完全相同的“移动窗口”，然后对移动窗口做出相应的简写处理。尺取法是处理子串分隔的一种基本方法。 ")])]),s("li",{attrs:{id:"uff3ac3f5"}},[s("span",{staticClass:"ne-text"},[t._v(" 第15行用异或操作判断两个元素不相等，它与直接书写不等于是等价的。 ")])]),s("li",{attrs:{id:"ucfbefef7"}},[s("span",{staticClass:"ne-text"},[t._v(" 特别注意第13行的操作。因为循环是对有效部分进行操作，当第14行循环结束时，最后一个子串并未得到相应的处理。因此在第13行中插入一个原有字符串中不可能出现的字符，保证原字符串中的最后一个子串被处理，又对题目要求的结果没有任何影响。这种方法也称为 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 边界填充法 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。这是一个非常便捷的技巧。如果没有这行处理，必须在循环结束时对最后一个子串进行处理。这也是一个非常容易产生错误的地方。 ")])])]),s("h3",{attrs:{id:"K2mZX"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T547-T548 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"ejdjy"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u93757bb4"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6c8eb9a2"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9caa0abe"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2cfcec7d"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue4cdfe26"}},[s("span",{staticClass:"ne-text"},[t._v(" T547 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9cb37961"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握使用尺取法进行子串分隔，特别注意最后一个子串的处理，掌握边界填充法 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucc69dd49"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#o8Kxq",href:"#o8Kxq"}},[s("span",{staticClass:"ne-text"},[t._v(" T524 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#CUEPT",href:"#CUEPT"}},[s("span",{staticClass:"ne-text"},[t._v(" T546 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u51f8eb20"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"677"}},[s("p",{staticClass:"ne-p",attrs:{id:"u558a493b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX516) ")])]),s("span",{staticClass:"ne-text"})])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucec4ad73"}},[s("span",{staticClass:"ne-text"},[t._v(" T548 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",attrs:{id:"u75d60bab"}},[s("span",{staticClass:"ne-text"},[t._v(" 将相对独立的功能抽取为函数，将极大减轻程序书写逻辑 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8f58cdd8"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/iz3dks#VKSK4",href:"ch3#VKSK4"}},[s("span",{staticClass:"ne-text"},[t._v(" T331 ")])])])]),s("td",{attrs:{width:"67"}})])])]),s("h2",{attrs:{id:"F1rgU"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.6 高精度计算 ")])]),s("h3",{attrs:{id:"JkiCi"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.15 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"u5a7801fe"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输入两个不超过100位的位数相等的正整数，求其和。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u938fca7b"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目分析】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"u8d7e38fb"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" C++中提供的最大整数类型为long long，为64位，大概表示 ")]),s("span",{staticClass:"ne-math",staticStyle:{color:"rgb(64, 64, 64)"},attrs:{id:"e1aok"}},[s("img",{attrs:{src:a(6450)}})]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 量级，显然无法表示题目所述的整数。因此需要用字符串表达这两个100位的整数，通过小学所学的逐位计算的方法计算加法。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"fBFW8"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.35")]),t._v(" 大数计算\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\nstring plus(const string& s1,const string& s2){\n    string r=s1;\n    int carry = 0;\n    for(size_t i=r.size()-1;i<r.size();i--){\n        int temp = s1[i]-'0'+s2[i]-'0'+carry;\n        r[i] = temp%10+'0';\n        carry = temp/10;\n    }\n    return carry?\"1\"+r:r;\n}\nint main() {\n\tstring s1,s2;\n\tcin>>s1>>s2;\n\tcout<<plus(s1,s2)<<endl;\n\treturn 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"N6lTE"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u61ab441b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u057d528f"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u11526eea"}},[s("span",{staticClass:"ne-text"},[t._v(" 686897979708804564328634 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2a311c95"}},[s("span",{staticClass:"ne-text"},[t._v(" 475825687845753588322687 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u36838e1f"}},[s("span",{staticClass:"ne-text"},[t._v(" 1162723667554558152651321 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u0dc33f76"}},[s("span",{staticClass:"ne-text"},[t._v(" 这是一个模拟加法计算过程的算法，第4行让结果 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" r ")])]),s("span",{staticClass:"ne-text"},[t._v(" 有一个初始长度，然后第6行的循环逐位执行加法操作。注意循环条件有点不合常规，这是因为size_t是unsigned类型，-1是该类型的最大值，一定大于字符串长度。 ")])]),s("li",{attrs:{id:"u5b245d30"}},[s("span",{staticClass:"ne-text"},[t._v(" 按照加法计算规则，每位的结果都是对应两位相加，并且加上进位。设置初始进位为0。 ")])]),s("li",{attrs:{id:"u416a909d"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11行是为了防止最高位有进位，根据加法规则，进位只能是1。 ")])])]),s("h3",{attrs:{id:"bKBAL"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习5.4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2e7b8ee5"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果两个大数相加，且位数不相等，应该如何处理？ ")])]),s("h3",{attrs:{id:"TSGz6"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T549 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"ZnNPV"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue76c4a8e"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u47043fa0"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufb759d17"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub2d26512"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6a0a2153"}},[s("span",{staticClass:"ne-text"},[t._v(" T549 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub26ab69d"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握大数计算的基本方法 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"uba96efc5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/afrstd#wG8i3",href:"ch2#wG8i3"}},[s("span",{staticClass:"ne-text"},[t._v(" T242 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接b5"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"677"}},[s("p",{staticClass:"ne-p",attrs:{id:"u651d7b63"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX517) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h1",{attrs:{id:"NrvLX"}},[s("span",{staticClass:"ne-text"},[t._v(" 5. C风格的字符串 ")])]),s("h2",{attrs:{id:"Y4dUN"}},[s("span",{staticClass:"ne-text"},[t._v(" 5.1 C风格字符串的定义和初始化 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue60eec28"}},[s("span",{staticClass:"ne-text"},[t._v(" C语言并没有提供“字符串”这种复杂数据类型，它借助字符类型的数组来存储一个串的内容，以特殊字符'\\0'作为串的结束标志。从存储结构上来说，C语言的字符串就是“以'\\0'结尾的字符数组”，长度指串中位于'\\0'之前的字符个数。字符串一定是一个字符数组，但字符数组未必是字符串，关键看是否包含'\\0'。一个字符数组可以存储多个'\\0'，但它存储的字符串内容到第一个'\\0'出现的位置就结束了。字符串的查找、求长度、复制、比较等常见算法都是紧紧围绕“以'\\0'结尾”这一特性，对字符数组进行操作。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u6250a3ad"}},[s("span",{staticClass:"ne-text"},[t._v(" 定义字符串类型的变量其实就是定义字符数组类型的变量，必须保证数组大小足够容纳末尾的'\\0'。例如： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"JQHpX"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.36")]),t._v("  C风格字符串的定义和初始化\n"),s("code",[t._v("#include <iostream>\nusing namespace std;\nint main ()\n{\n    char s1[10]; //数组s1是一维数组，它可以存放10个字符，或者一个长度不大于9的字符串\n    char s2[6]=\"China\"; \t\t\t\t\t\t\t\t\t//用字符串常量赋值\n    char s3[6]= {'C', 'h', 'i', 'n', 'a', '\\0'};\t\t\t//用字符常量赋值\n    char name[3][10];\t\t//数组name是二维数组，存放3个长度不大于9的字符串\n    char w_day[ ][10]={\"Sunday\",\"Monday\", \"Tuesday\",\n            \"Wednesday\",\"Thursday\",\"Friday\", \"Saturday\" };\t//二维字符串初始化\n    int num;\n    cin>>num;\n    cout<<s2<<' '<<s3<<endl;\n    s2[3]='\\0';\n    cout<<s2<<' '<<w_day[num]<<endl;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"ir2ht"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u287c8f8c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u77fde59b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1f046a8e"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4122f694"}},[s("span",{staticClass:"ne-text"},[t._v(" China China ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u50cd5577"}},[s("span",{staticClass:"ne-text"},[t._v(" Chi Wednesday ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"链接e7"}},[s("span",{staticClass:"ne-text"},[t._v(" C风格字符串分为两个长度：物理长度和逻辑长度。定义时字符数组的长度为其物理长度，表示了该字符数组能够存储字符的数量。而字符串要求至少有一个'\\0'，第一个'\\0'前的字符数量为其逻辑长度，也是字符串的长度。物理长度至少要比逻辑长度大1，用于存储'\\0'。 ")])]),s("li",{attrs:{id:"uee3e13d0"}},[s("span",{staticClass:"ne-text"},[t._v(" 第6行和第9行用字符串常量进行初始化，会自动在尾部添加一个'\\0'，表示字符串的结束。 ")])]),s("li",{attrs:{id:"u23bfd64b"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14行将字符串 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" s2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的第3个字符设置为'\\0'，因此其逻辑长度修改为3，第15行只输出Chi三个字符。 ")])]),s("li",{attrs:{id:"ud5e9d9c2"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8-9行定义了两个二维字符串，用于存储多个字符串，每个字符串都要以'\\0'结束。 ")])])]),s("h3",{attrs:{id:"vSfer"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T551 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"dTV9o"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud90d743d"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u20d8623b"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf934b21b"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u179f7133"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3b47cce6"}},[s("span",{staticClass:"ne-text"},[t._v(" T551 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0ae240bc"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握C风格字符串的定义和初始化，理解物理长度和逻辑长度 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2746b4f9"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue9d1212c"}},[s("br")])])])])]),s("h2",{attrs:{id:"poKOJ"}},[s("span",{staticClass:"ne-text"},[t._v(" 5.2 C风格字符串的基本操作 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uabd779ce"}},[s("span",{staticClass:"ne-text"},[t._v(" C风格字符串本质上是字符数组，因此不能整体赋值和整体比较。对于字符串的常见操作，都存放在头文件<cstring>中，求长度函数strlen，赋值函数strcpy，比较函数strcmp，连接函数为strcat。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"wAIma"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.37")]),t._v("  C风格字符串的常见函数\n"),s("code",[t._v("#include<iostream>\n#include<cstring>\nusing namespace std;\nint main ()\n{\n    char source[30] = \"Why always me?\",target[20];\n    cout<<strlen(source)<<' '<<sizeof(source)<<endl;\n    strcpy(target, source);\n    cout<<strlen(target)<<' '<<target<<endl;\n    char other[] = \"Why not he?\";\n    cout<<strcmp(source,other)<<endl;\n    cout<<strcat(source,other)<<endl;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"PHNo9"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3b370339"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9ac00455"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufa94edcc"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接3f"}},[s("span",{staticClass:"ne-text"},[t._v(" 14 30 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u76f2f948"}},[s("span",{staticClass:"ne-text"},[t._v(" 14 Why always me? ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4186dc8f"}},[s("span",{staticClass:"ne-text"},[t._v(" -1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub7337be7"}},[s("span",{staticClass:"ne-text"},[t._v(" Why always me?Why not he? ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u6d6b4360"}},[s("span",{staticClass:"ne-text"},[t._v(" 第7行输出结果显示， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" source ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的逻辑长度为14，物理长度为30，strlen的返回结果为字符串的逻辑长度。 ")])]),s("li",{attrs:{id:"ua94f5b04"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行将 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" source ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的内容赋值给 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" target ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，这里特别注意C风格字符串是数组，不能进行整体赋值，因此绝对不能写成 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" target=source ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，只能采用strcpy对字符串进行赋值。 ")])]),s("li",{attrs:{id:"u1f80a011"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11行进行字符串的大小比较，采用结果为：0（相等），正数（第一个字符串大），负数（第二个字符串大）。这里的大小指字典序，即单词在字典中的排列顺序。从左到右依次遍历字符，当遇到第一个不相同的字符时，该字符的ASCII码比较结果就是两个字符串的大小关系。例如： ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(' strcmp("abcd","abck")<0 ')])]),s("span",{staticClass:"ne-text"},[t._v(" ， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(' strcmp("abc","ab")>0 ')])]),s("span",{staticClass:"ne-text"},[t._v(" ， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(' strcmp("abc","b")<0 ')])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])]),s("li",{attrs:{id:"u28fbc478"}},[s("span",{staticClass:"ne-text"},[t._v(" 第12行对两个字符串进行了连接，并将连接的结果放在第一个字符串 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" source ")])]),s("span",{staticClass:"ne-text"},[t._v(" 中，函数的返回值也是连接的结果。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u91b7c10a"}},[s("span",{staticClass:"ne-text"},[t._v(" 以下内容将C风格字符串中的常见操作进行了具体的代码实现。使用时可以采用库函数，以下实现是为了更好地从基础操作中理解C风格字符串的使用。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"KitS2"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.38")]),t._v("  字符串串长\n"),s("code",[t._v("int my_strlen(char s[])\n{\n    int len=0; //len计算串长\n    while (s[len]!='\\0') len++; //统计'\\0'前的字符数\n    return len;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ue2ff687d"}},[s("span",{staticClass:"ne-text"},[t._v(" 根据C风格字符串的特点，求串长就是统计'\\0'前的字符数。 ")])]),s("li",{attrs:{id:"u22d80871"}},[s("span",{staticClass:"ne-text"},[t._v(" 第4行用while循环实现，这使得代码的可读性更强；在熟练使用for循环后也可以写成 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" for (len = 0; s[len]!='\\0'; len++); ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，注意不要遗漏了末尾的分号，这表示循环条件成立时执行空语句，仅改变计数变量 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" len ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的值。 ")])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"AlPNW"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.39")]),t._v("  字符串复制\n"),s("code",[t._v("void my_strcpy(char target[], char source[])\n{\n    int i=0; //两个字符串从首位开始复制\n    while((target[i++]=source[i])); //将source字符串中'\\0'及之前的字符复制给target\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uc5810002"}},[s("span",{staticClass:"ne-text"},[t._v(" 根据C风格字符串的特点，字符串复制就是将source字符串中'\\0'及之前的字符复制给target。常规的写法有很多种，这里采用了尽量简洁的写法。 ")])]),s("li",{attrs:{id:"u1d26c5e4"}},[s("span",{staticClass:"ne-text"},[t._v(" 该函数使用时注意一定要保证target数组的大小足够保存source字符串，必要的话可以在上面函数中添加一段长度验证程序（略）。 ")])]),s("li",{attrs:{id:"u12bf5c98"}},[s("span",{staticClass:"ne-text"},[t._v(" 第4行用到了几个知识点：①C语言用0代表“false”，非0代表“true”；②赋值表达式的终值是赋值符左边的数值；③变量i的自加运算符'++'在后，先取i的值进行运算，然后自增1。因此整个执行过程为：先将source[i]赋值给target[i]，然后i自增1，然后判断条件表达式结果是否为“true”，当source[i]为'\\0'时结束循环。 ")])]),s("li",{attrs:{id:"ufefcabfe"}},[s("span",{staticClass:"ne-text"},[t._v(" 特别注意，source字符串末尾的'\\0'一定也要复制过来，或者手动添加。 ")])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"MfJO4"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.40")]),t._v("  字符串比较\n"),s("code",[t._v("int my_strcmp(char str1[], char str2[])\n{\n    int res,i=0 ; //res保存第一个出现的不同字符的ASCII码差值。\n    while((res = str1[i] - str2[i]) == 0 && str1[i]) i++; //字符相同且str1未到末尾时i下移。\n    return res;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ua596483f"}},[s("span",{staticClass:"ne-text"},[t._v(" 根据C风格字符串的特点，字符串比较就是依次对比str1和str2的同位置字符的ASCII码数值，直到不同为止，结果为：0（相等），正数（str1大），负数（str2大）。常规的写法有很多种，这里采用了尽量简洁的写法。 ")])]),s("li",{attrs:{id:"udd56ebd5"}},[s("span",{staticClass:"ne-text"},[t._v(" 第4行的条件逻辑是str1未到末尾（不是'\\0'），且同位置字符不相同时，位移变量i下移一位；不用判断str2是否到末尾，因为如果str1长度大于str2，str2先到末尾，那么此处字符是'\\0'，必然小于str1同位置字符。 ")])]),s("li",{attrs:{id:"udf68cf53"}},[s("span",{staticClass:"ne-text"},[t._v(" res返回的结果是str1和str2首次出现不同字符时，两个字符的ASCII码差值。 ")])]),s("li",{attrs:{id:"ub2acd85d"}},[s("span",{staticClass:"ne-text"},[t._v(" 后面的练习题期望结果为：0（相等），1（str1大），-1（str2大），即：将任意正值变成1，任意负值变成-1。这里提供一个解法：将上述代码第5行改为return (res>0)-((-res)>0)。 ")])])]),s("h3",{attrs:{id:"uBitN"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习5.5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua109e5d9"}},[s("span",{staticClass:"ne-text"},[t._v(" 如何让my_strcmp的返回值为-1,0,1，即正数返回1，负数返回-1。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6e7c297e"}},[s("span",{staticClass:"ne-text"},[t._v(" 提示：知识点 ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.yuque.com/upcxailixin/ua125n/afrstd#MIXWN",href:"ch2#MIXWN"}},[s("span",{staticClass:"ne-text"},[t._v(" T267 ")])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"v4pKy"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.41")]),t._v("  字符串串联\n"),s("code",[t._v("void my_strcat(char target[], char source[])\n{\n    int lt=strlen(target),i=0; //lt保存target串长，i标记source串下标\n    while((target[lt++]=source[i++])); //将source字符串中'\\0'及之前的字符串联到target末尾\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ue0f8874b"}},[s("span",{staticClass:"ne-text"},[t._v(" 该函数实现思想类似于字符串复制，只是运算位置从target末尾的'\\0'处开始。 ")])]),s("li",{attrs:{id:"udf06269d"}},[s("span",{staticClass:"ne-text"},[t._v(" 该函数使用时注意一定要保证target数组的大小足够保存串联后的字符串，必要的话可以在上面函数中添加一段长度验证程序（略）。 ")])]),s("li",{attrs:{id:"u138e7c2c"}},[s("span",{staticClass:"ne-text"},[t._v(" 第3行求target串长时用到了strlen函数，也可以自己写个循环代替，参考求串长代码。上述算法考虑到运算效率，不希望每次调用strlen函数重新计算target串长，因此用了临时变量lt记录target初始长度，这也是空间换时间的思想体现。 ")])]),s("li",{attrs:{id:"u41c66120"}},[s("span",{staticClass:"ne-text"},[t._v(" 其他知识点参考my_strcpy的实现，第4行代码在复制source的'\\0'后结束循环。 ")])]),s("li",{attrs:{id:"ua18fe737"}},[s("span",{staticClass:"ne-text"},[t._v(" 特别注意，source字符串末尾的'\\0'一定也要复制过来，或者手动添加。 ")])])]),s("h3",{attrs:{id:"hoc5F"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T552 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"KrEpt"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"链接29"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u83acebae"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue4385963"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud76b678c"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9003e9be"}},[s("span",{staticClass:"ne-text"},[t._v(" T552 ")])])]),s("td",{attrs:{width:"485"}},[s("p",{staticClass:"ne-p",attrs:{id:"uef1b3251"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握C风格字符串的基本操作以及实现方式，通过代码示例掌握C风格字符串的基本操作，掌握字典序 ")])])]),s("td",{attrs:{width:"125"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubea73b17"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4de7a682"}},[s("br")])])])])]),s("h2",{attrs:{id:"TGdg3"}},[s("span",{staticClass:"ne-text"},[t._v(" 5.3 C风格字符的应用 ")])]),s("h3",{attrs:{id:"Spxl1"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.16 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"ua8467dcb"}},[s("span",{staticClass:"ne-text"},[t._v(" 从字符串str中查找某个字符ch第一次出现的位置 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u66fe7eb5"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"ue22856da"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输入一个字符串str和一个字符ch，以空格分隔。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uf3c2c990"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"uc6f9bf1d"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输出 ")]),s("span",{staticClass:"ne-text"},[t._v(" ch在str中第一次出现的位置 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"RZsRb"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.42")]),t._v("  查找字符\n"),s("code",[t._v('#include <iostream>\nusing namespace std;\nint main()\n{\n    char str[100],ch;\n    int i=0;\n    cin.getline(str,100); //读入字符串str\n    cin.get(ch); //读入要查找的字符ch\n    while(str[i]!=\'\\0\' && str[i]!=ch) i++; //未到串尾且未找到ch时，下标下移\n    //找到则输出位置，否则提示未找到\n    str[i] == ch ? cout<<"at position: "<<i<<endl : cout<<"not found!"<<endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"nX70t"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u24fb26e9"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud3c91951"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uda89279a"}},[s("span",{staticClass:"ne-text"},[t._v(" asdsf1234567 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"udb759bbf"}},[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u00fb2d51"}},[s("span",{staticClass:"ne-text"},[t._v(" at position: 10 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u047e3b75"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行将找到/找不到的条件合并在一起。 ")])]),s("li",{attrs:{id:"u14e6bc03"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11行用了条件运算符输出结果，注意不要遗漏了找不到的情况。 ")])])]),s("h3",{attrs:{id:"gHWBk"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.17 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"u86f705fb"}},[s("span",{staticClass:"ne-text"},[t._v(' 从字符串str中查找第一个只出现一次的字符，如果没有找到，输出"-1"。 ')])]),s("p",{staticClass:"ne-p",attrs:{id:"u99643e49"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"uf317567a"}},[s("span",{staticClass:"ne-text"},[t._v(" 输入一个字符串str，可能包含空格。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u17838a3f"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"uc6c327c0"}},[s("span",{staticClass:"ne-text"},[t._v(' 如果找到符合条件的字符则输出，否则输出"-1"。 ')])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"yO3dU"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.43")]),t._v("  查找第一个只出现一次的字符\n"),s("code",[t._v('#include<iostream>\n#include<cstring>\nusing namespace std;\nint main()\n{\n    char str[100];\n    int a[128] = {0};//记录字符串str中每个字符的出现次数\n    cin.getline(str,100); //读入字符串str\n    int len = strlen(str); //保存字符串长度\n    int i;\n    for(i=0; i<len; i++) //统计字符串str中每个字符的出现次数\n        a[str[i]] ++;\n    for(i=0; i<len; i++) //按出现顺序查找只出现一次的字符\n        if (1 == a[str[i]]) break;\n    i<len ? cout<<str[i]<<endl : cout<<"-1"<<endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"tvuH8"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3c40d20e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud4c58efd"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucc826bf7"}},[s("span",{staticClass:"ne-text"},[t._v(" asdf fdsa 123 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ueb271e7b"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u84647cc9"}},[s("span",{staticClass:"ne-text"},[t._v(" 该程序也是一个比较经典的以空间换时间的操作，比较自然的思路是对每个字符统计出现次数，这需要用到嵌套循环，算法复杂度比本程序高。 ")])]),s("li",{attrs:{id:"uec38df38"}},[s("span",{staticClass:"ne-text"},[t._v(" 第7行定义的数组a记录字符串str中每个字符的出现次数，因为ASCII表有128个字符，因此数组大小至少定义为128。 ")])]),s("li",{attrs:{id:"ua960b8a7"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行变量len保存字符串str的长度，因为要多次使用，所以用变量保存下来，节约调用strlen函数的次数。 ")])]),s("li",{attrs:{id:"u95c0b13c"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14行将常量1放在'=='左边，这是一个良好的习惯，当粗心将'=='误写为'='时编译器会报错。 ")])]),s("li",{attrs:{id:"u19d24a0d"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果查找到，str字符串中i的位置就是符合条件的字符；查找不到则最终i的值等于len。 ")])])]),s("h3",{attrs:{id:"ZnDf4"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题5.18 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"链接53"}},[s("span",{staticClass:"ne-text"},[t._v(" 输入若干单词，将它们从小到大排列后输出。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u5c308729"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"ub2fd622d"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 第一个输入数字n，然后n行，每行输入一个单词，每个单词无空格。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uef9460ac"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"uf0a9b93b"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输出 ")]),s("span",{staticClass:"ne-text"},[t._v(" 排序后的单词，每行一个单词 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"P0mNY"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码5.44")]),t._v("  单词排序\n"),s("code",[t._v("#include<iostream>\n#include<cstring>\nusing namespace std;\nint main()\n{\n    int n;\n    cin>>n;//首先读入第一行的整数，即单词数\n    cin.ignore();//清除残留的回车符\n    char str[n][100], t[100];//str保存读取的n个单词\n    for (int i=0; i<n; i++) cin.getline(str[i],100);\n    for(int i=0; i<n-1; i++)//交换法排序\n        for (int j=i+1; j<n; j++)\n            if (strcmp( str[i], str[j]) > 0 )\n            {\n                strcpy ( t, str[i]);\n                strcpy (str[i], str[j]);\n                strcpy(str[j], t);\n            }\n    for (int i=0; i<n; i++)  cout<<str[i]<<endl;\n    return 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"y1lWw"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5ff80fb8"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uaa5b8dee"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud6e87821"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua068a994"}},[s("span",{staticClass:"ne-text"},[t._v(" word ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue57a45e3"}},[s("span",{staticClass:"ne-text"},[t._v(" work ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc2887b26"}},[s("span",{staticClass:"ne-text"},[t._v(" homework ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3adbcc6e"}},[s("span",{staticClass:"ne-text"},[t._v(" job ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u100d20b4"}},[s("span",{staticClass:"ne-text"},[t._v(" good ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0840ed92"}},[s("span",{staticClass:"ne-text"},[t._v(" good ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4a47ac94"}},[s("span",{staticClass:"ne-text"},[t._v(" homework ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ueff98189"}},[s("span",{staticClass:"ne-text"},[t._v(" job ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc90942aa"}},[s("span",{staticClass:"ne-text"},[t._v(" word ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uf803a470"}},[s("span",{staticClass:"ne-text"},[t._v(" work ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u656ce580"}},[s("span",{staticClass:"ne-text"},[t._v(" 程序用一个字符串数组保存单词，在C语言中存储结构用二维字符数组描述。 ")])]),s("li",{attrs:{id:"链接25"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行不要忘了用cin.ignore()清除读走整数后缓冲区中残留的回车符，否则接下来读到的第一个单词是空串。当然也有其他解决方法，例如用cin.get()读走单个字符、用getline读走空行等等。 ")])]),s("li",{attrs:{id:"u752fc9ef"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11-18行是交换法排序，需要注意的是，字符串的比较、赋值要用专用的处理函数strcmp、strcpy，而不是用于简单变量的运算符。 ")])])]),s("h1",{attrs:{id:"dHWol"}},[s("span",{staticClass:"ne-text"},[t._v(" 题单 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"Pbqom"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud3f4f331"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 序号 ")])])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua5bc6756"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 题目名称 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接f7"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 知识点 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uac19ee35"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 序号 ")])])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5008ef0c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 题目名称 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u3e749bf0"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 知识点 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5bf275a1"}},[s("span",{staticClass:"ne-text"},[t._v(" LX501 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ubb3c77c6"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 逆序输出数组 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub1fb718f"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#sDNu2",href:"#sDNu2"}},[s("span",{staticClass:"ne-text"},[t._v(" T511 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u3ec9922b"}},[s("span",{staticClass:"ne-text"},[t._v(" LX502 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u23f6521b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组求和 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc6537786"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#wVcOg",href:"#wVcOg"}},[s("span",{staticClass:"ne-text"},[t._v(" T514 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub2b3855b"}},[s("span",{staticClass:"ne-text"},[t._v(" LX503 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u198c854f"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 昨天 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接22"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#Dr2WK",href:"#Dr2WK"}},[s("span",{staticClass:"ne-text"},[t._v(" T512 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf283bf9a"}},[s("span",{staticClass:"ne-text"},[t._v(" LX504 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u39cbc626"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 求最值 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u472d9719"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#wVcOg",href:"#wVcOg"}},[s("span",{staticClass:"ne-text"},[t._v(" T514 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2f40170b"}},[s("span",{staticClass:"ne-text"},[t._v(" LX505 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u3ee51409"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 平均之上 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ucd2e11e4"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#wVcOg",href:"#wVcOg"}},[s("span",{staticClass:"ne-text"},[t._v(" T514 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u293e2aaa"}},[s("span",{staticClass:"ne-text"},[t._v(" LX506 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u73a2b0a8"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 编程团体赛 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf3092b24"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#s7C1R",href:"#s7C1R"}},[s("span",{staticClass:"ne-text"},[t._v(" T516 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5569af40"}},[s("span",{staticClass:"ne-text"},[t._v(" LX507 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub2b3d382"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 光棍串 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7373d7ad"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#qQ3m1",href:"#qQ3m1"}},[s("span",{staticClass:"ne-text"},[t._v(" T522 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接8c"}},[s("span",{staticClass:"ne-text"},[t._v(" LX508 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc90ecfca"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 小写数转大写 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf4a581de"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#qQ3m1",href:"#qQ3m1"}},[s("span",{staticClass:"ne-text"},[t._v(" T522 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"链接d8"}},[s("span",{staticClass:"ne-text"},[t._v(" LX509 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc003dd01"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 最小正整数 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud0d371e7"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#KKCom",href:"#KKCom"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u79bd3c70"}},[s("span",{staticClass:"ne-text"},[t._v(" LX510 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud07d8e8e"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 建国的难题 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf2b05e25"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#KKCom",href:"#KKCom"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ubaea98c7"}},[s("span",{staticClass:"ne-text"},[t._v(" LX511 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uaea82665"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 排序 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ued38cbc2"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#Tpq9G",href:"#Tpq9G"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6bc47215"}},[s("span",{staticClass:"ne-text"},[t._v(" LX512 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u9a413cd5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 矩阵运算 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua600fa9d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#rxqUf",href:"#rxqUf"}},[s("span",{staticClass:"ne-text"},[t._v(" T515 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc19f34b2"}},[s("span",{staticClass:"ne-text"},[t._v(" LX513 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u04f7645c"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串测试 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5d308137"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#gItBo",href:"#gItBo"}},[s("span",{staticClass:"ne-text"},[t._v(" T541 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u0b361db0"}},[s("span",{staticClass:"ne-text"},[t._v(" LX514 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc7558304"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符串跨距 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uce597bb3"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#gItBo",href:"#gItBo"}},[s("span",{staticClass:"ne-text"},[t._v(" T541 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#CUEPT",href:"#CUEPT"}},[s("span",{staticClass:"ne-text"},[t._v(" T546 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u38912f4f"}},[s("span",{staticClass:"ne-text"},[t._v(" LX515 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u72d02d62"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 首字母大写 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u3e5c85b1"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#ROwVJ",href:"#ROwVJ"}},[s("span",{staticClass:"ne-text"},[t._v(" T546 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u19ea83f2"}},[s("span",{staticClass:"ne-text"},[t._v(" LX516 ")])])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u89ccbb14"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 交替01串 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u24029c44"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#o43D1",href:"#o43D1"}},[s("span",{staticClass:"ne-text"},[t._v(" T547 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uee22cb6e"}},[s("span",{staticClass:"ne-text"},[t._v(" LX517 ")])])]),s("td",{attrs:{width:"117"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u93197e95"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 大数加1 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc4f3bfca"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#TSGz6",href:"#TSGz6"}},[s("span",{staticClass:"ne-text"},[t._v(" T549 ")])])])]),s("td",{attrs:{width:"93"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7671f783"}},[s("br")])]),s("td",{attrs:{width:"121"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u86fd8e38"}},[s("br")])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2737e2b0"}},[s("br")])])])])])])])}],n={mounted(){this.$nextTick((()=>{this.goAnchor(window.location.hash)})),hljs.initHighlightingOnLoad(),hljs.initLineNumbersOnLoad({singleLine:!0})},methods:{goAnchor(t){if(t){console.log(t);let s=document.getElementById(t.replace("#",""));s.scrollIntoView(!0)}}}},c=n,l=a(1001),p=(0,l.Z)(c,e,i,!1,null,null,null),r=p.exports},2327:function(t,s,a){t.exports=a.p+"img/057b59460eee88aad289b71782d747e2.3ff0c7a8.svg"},2901:function(t,s,a){t.exports=a.p+"img/09842c90e02b38248f6f9bca3bba2979.cc10ef2c.svg"},5497:function(t,s,a){t.exports=a.p+"img/120f6e4d5da3fdac818f17632cc4f475.a5b58a1d.svg"},3333:function(t,s,a){t.exports=a.p+"img/2265b1d76248c03dc23a0239619d08dc.e775bae0.svg"},1075:function(t,s,a){t.exports=a.p+"img/2d1ce477ad43aec77a0cf4b5d550f3f8.42580005.svg"},222:function(t,s,a){t.exports=a.p+"img/64739660eac42c9283467327709c9699.f002459a.svg"},3544:function(t,s,a){t.exports=a.p+"img/6cfed3df29ab5de9a8803963ff06dcd0.58523ccf.svg"},4193:function(t,s,a){t.exports=a.p+"img/6f0ea4852110e17bda5840375cc33f90.971c28d4.svg"},7597:function(t,s,a){t.exports=a.p+"img/7124203268a26612b2a44250dfc91d17.0acf6af7.svg"},7755:function(t,s,a){t.exports=a.p+"img/7ebb873bdac3d4b6b21b7846c426e04d.1199ce4f.svg"},595:function(t,s,a){t.exports=a.p+"img/7f452a3568af766a0838b1c9d8dee2a3.cd558c2e.svg"},5651:function(t,s,a){t.exports=a.p+"img/a2006f1ac61cb1902beacb3e29fff089.12337990.svg"},4823:function(t,s,a){t.exports=a.p+"img/b4d3ac356aef6e64c1c425155c81b9d8.7870648e.svg"},2646:function(t,s,a){t.exports=a.p+"img/c7022ea2f7be44ce2b2cc27bef201f60.2cd36b94.svg"},9898:function(t,s,a){t.exports=a.p+"img/cc25c72f0ea4026e2d48746dc93d855d.2eb3a152.svg"},1790:function(t,s,a){t.exports=a.p+"img/cd40280cdc832013a593b2df92ed2275.01a9c13e.svg"},7002:function(t,s,a){t.exports=a.p+"img/e65a67ac353abeeff44c359310d05c02.42ab8935.svg"},7246:function(t,s,a){t.exports=a.p+"img/f027975f2de3791a604840f12c6665eb.fc6a04c3.svg"},1758:function(t,s,a){t.exports=a.p+"img/f212db0d8037d680672b6dcf97bbcccd.bfff1aa3.svg"},2555:function(t,s,a){t.exports=a.p+"img/f2d5f588234eb61a559ff90c41511b85.fcf7fc86.svg"},6450:function(t,s,a){t.exports=a.p+"img/fccc9702a18cbf05973072ab08a6c8d4.e680b976.svg"},8337:function(t,s,a){t.exports=a.p+"img/1658920317330-459be34e-07e0-4642-b243-de5fffd8bd98.84efa2df.gif"},8932:function(t,s,a){t.exports=a.p+"img/1658920445648-234a4e23-9637-405d-91e1-88f3b016d0c5.c2a6a024.gif"},2835:function(t,s,a){t.exports=a.p+"img/1658920575968-02c2b058-9ea0-494e-a51c-045b28306f0f.04ed9987.gif"},5229:function(t,s,a){t.exports=a.p+"img/1658920721916-5732318c-b1ad-40f9-bee8-d957776ba801.1346d0b3.gif"},7720:function(t,s,a){t.exports=a.p+"img/1658992813726-9373dc7b-e339-4b3f-8985-85e8923a0f8f.0749dfe2.jpeg"},6509:function(t,s,a){t.exports=a.p+"img/1672278331640-e88682f1-c4d1-407c-8494-2f6ef7177fc2.def80ac8.jpeg"},5663:function(t,s,a){t.exports=a.p+"img/1675564329857-752bcb8b-e6a5-40d0-8d7e-d4d03a4f12dd.8f665a9f.png"},3273:function(t,s,a){t.exports=a.p+"img/1676858457207-e52af739-7027-4ed0-9978-d25f7452d5f4.8d0755cc.jpeg"}}]);
//# sourceMappingURL=857.61399bf7.js.map