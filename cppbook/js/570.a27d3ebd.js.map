{"version":3,"file":"js/570.a27d3ebd.js","mappings":"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","sources":["webpack://cpp_book/./src/views/Ch8.vue","webpack://cpp_book/src/views/Ch8.vue","webpack://cpp_book/./src/views/Ch8.vue?7193","webpack://cpp_book/./src/views/Ch8.vue?2c63"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" 第八章 模板和容器 \")]),_c('div',{staticClass:\"lake-content\",attrs:{\"typography\":\"classic\"}},[_c('h1',{attrs:{\"id\":\"hai4M\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1. 泛型编程 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"justify\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u88d7dbb7\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\",\"font-size\":\"16px\"}},[_vm._v(\" 泛型编程指在书写代码时，不考虑具体数据类型，而模板是泛型编程的基础。C++中的泛型编程主要分为模板函数和模板类。 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 面向对象和泛型编程的目的就是提升复用性， \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\",\"font-size\":\"16px\"}},[_vm._v(\" C++的 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 标准模板库（Standard Template Library，STL） \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\",\"font-size\":\"16px\"}},[_vm._v(\" 提供了 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 大体分为六大组件，分别是：容器、算法、迭代器、仿函数、适配器（配接器）、空间配置器 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\",\"font-size\":\"16px\"}},[_vm._v(\" 。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"600px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"fx1sM\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"98\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1c17859f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 容器 \")])])]),_c('td',{attrs:{\"width\":\"502\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud5189aeb\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 各种数据结构，如vector、list、deque、set、map等,用来存放数据。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"98\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u41863121\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 算法 \")])])]),_c('td',{attrs:{\"width\":\"502\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub0af2466\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 各种常用的算法，如sort、find、copy、for_each等。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"98\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u00d5f0f9\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 迭代器 \")])])]),_c('td',{attrs:{\"width\":\"502\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7464e424\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 扮演了容器与算法之间的胶合剂。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"98\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud8ff3924\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 仿函数 \")])])]),_c('td',{attrs:{\"width\":\"502\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ued6f78c6\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 行为类似函数，可作为算法的某种策略。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"98\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1d1606a2\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 适配器 \")])])]),_c('td',{attrs:{\"width\":\"502\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u80c1c37f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 用来修饰容器或者仿函数或迭代器接口。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"98\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u85328bfe\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 空间配置器 \")])])]),_c('td',{attrs:{\"width\":\"502\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub0b77536\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" 负责空间的配置与管理。 \")])])])])])]),_c('h2',{attrs:{\"id\":\"twuaD\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.1 模板函数 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"justify\",\"text-indent\":\"2em\"},attrs:{\"id\":\"udce3d890\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 模板函数提供一个抽象的函数，并不具体指定其中数据的类型，而是某个虚拟类型代替。只提供基本的功能。其具体的数据类型，只在其被调用时视具体情况实例化。以下是一个具体样例： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"f8Yhz\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.1\")]),_vm._v(\" 最大值模板函数\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <string>\\nusing namespace std;\\n\\ntemplate <typename T>\\t\\t\\t\\t\\t//模板函数声明与定义\\nT const& Max (T const& a, T const& b)\\n{\\n    return a < b ? b:a;\\n}\\nint main ()\\n{\\n    int i = 39, j = 20;\\n    cout << \\\"Max(i, j): \\\" << Max(i, j) << endl;\\n    double f1 = 13.5, f2 = 20.7;\\n    cout << \\\"Max(f1, f2): \\\" << Max(f1, f2) << endl;\\n    string s1 = \\\"Hello\\\", s2 = \\\"World\\\";\\n    cout << \\\"Max(s1, s2): \\\" << Max(s1, s2) << endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"hnUwD\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub1709532\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uada2e8aa\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u64f29732\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u668ecdd4\"}},[_c('br')])]),_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8e197031\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Max(i, j): 39 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u58aad45a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Max(i, j): 20.7 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u09356994\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Max(i, j): World \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}}),_c('tr',{staticStyle:{\"height\":\"33px\"}})])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u74b70b9d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第5-9行定义了一个模板函数Max，实现了求两个数据最大值的操作； \")])]),_c('li',{attrs:{\"id\":\"u22eb9628\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第5行template表明以下定义的是一个模板，typename指明T是一个虚拟类型，在第13,15,17行Max被调用时，根据传入数据的具体类型被具体化为实际的类型。也可以把T理解为一个类型的占位符； \")])]),_c('li',{attrs:{\"id\":\"u9e1165ec\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第6行使用T定义了形参的类型和返回值的类型，const表示为常量，不可被修改； \")])]),_c('li',{attrs:{\"id\":\"u0277a1f8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 交换模板 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" swap \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的函数定义为： \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" template <class T> void swap(T& a, T& b) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。可以看到，与目标函数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Max \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的定义非常相似，只是因为要修改参数的值，没有加 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" const \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 常量约束。对于任意两个类型相同的变量，都可以调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" swap \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 模板函数进行交换。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u3032745d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 虚拟类型可以有多个，以下是另外一个样例： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"usHtn\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.2\")]),_vm._v(\" 求和模板函数\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\ntemplate <typename T1, typename T2>\\t//模板函数声明与定义\\nT2 test(T1 tmp1, T2 tmp2) {\\n    T2 tmp = tmp1 + tmp2;\\n    return tmp;\\n}\\nint main(void) {\\n    cout << \\\"test(10,5)=\\\" << test(10,5) << endl;\\n    cout << \\\"test(5,'A')=\\\" << test(5,'A') << endl ;\\n    cout << \\\"test(10,5.5) =\\\" << test(10,5.5) << endl;\\n    cout << \\\"test(5.5,10) =\\\" << test(5.5,10) << endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"xxADp\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u76da1262\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uef556706\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u703f1017\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u38d82f89\"}},[_c('br')])]),_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22cd6ec7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" test(10,5)=15 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua4c8fe56\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" test(5,'A')=F \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2cd27cd4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" test(10,5.5) =15.5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u73533be3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" test(5.5,10) =15 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}}),_c('tr',{staticStyle:{\"height\":\"33px\"}})])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u1e4cb3ac\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 因为返回类型为T2，因此第10行的结果为字符类型，第11行结果为浮点类型，第12行结果被取整。 \")])])]),_c('h3',{attrs:{\"id\":\"e79I0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T811 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"eFJhg\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u56ce1ed6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"538\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2c41a7c2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud4559b13\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u02fb6a76\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9c6bf16\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T811 \")])])]),_c('td',{attrs:{\"width\":\"538\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2ea69c53\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握模板函数，能够自定义简单的模板函数 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9d6361a\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#panTK\",\"href\":\"ch2#panTK\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T26B \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3fe49083\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#qwRMs\",\"href\":\"#qwRMs\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T812 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"LutwA\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.2 模板类* \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u4456e505\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 与模板函数类似，可以构建模板类，不指定具体数据类型。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"NQr53\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.3\")]),_vm._v(\" 模板类\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\ntemplate<class type> class Container {\\nprivate:\\n    type data;\\npublic:\\n    Container(type d) { this->data = d; }\\n    type operator+(const Container<type>& t){\\n        return this->data + t.data;\\n    }\\n};\\nint main() {\\n    Container<int> ia(3), ib(5);\\n    cout << ia + ib << endl;\\n    Container<string> as(\\\"abc\\\"), bs(\\\"def\\\");\\n    cout << as + bs << endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"DiolX\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf53ad80d\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc0823ac8\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue1afd547\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u57595848\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 8 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0fad1ad6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 15 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u433a9a03\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第3行定义了一个模板类，在第13行调用时，将数据类型指定的为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，第15行调用时，数据类型指定为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。具体执行时，就会显示不同的类型的具体操作，见第14行和第16行的输出结果。 \")])]),_c('li',{attrs:{\"id\":\"u0f235f97\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在第4-11行类的具体定义中，与 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" data \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的数据类型关联时，都用指定的虚拟类型 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" type \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 代替。 \")])]),_c('li',{attrs:{\"id\":\"uc1240df7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在1.2中使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" class \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 指定虚拟类型，而在1.1中使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" typename \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 指定虚拟类型， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" class \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" typename \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在指定模板的虚拟类型时，是完全相同的。 \")])])]),_c('h3',{attrs:{\"id\":\"qwRMs\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T812 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"Yllmf\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub7589410\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"538\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub55df1f0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf32ee5ca\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf2a4db28\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uda76e410\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T812 \")])])]),_c('td',{attrs:{\"width\":\"538\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ube37ae85\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 理解模板类，会用模板类执行基本操作。 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucf2029ac\"}},[_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#e79I0\",\"href\":\"ch8#e79I0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T811 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7b6fd344\"}},[_c('br')])])])])]),_c('h1',{attrs:{\"id\":\"x7JiO\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2. STL容器 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u8f43e238\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 参考文档链接： \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://cplusplus.com/reference/stl/\",\"href\":\"https://cplusplus.com/reference/stl/\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" https://cplusplus.com/reference/stl/ \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"udaebc3a6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" STL容器就是将运用最广泛的一些数据结构实现出来，常用的数据结构：数组, 链表,树, 栈, 队列, 集合, 映射表 等。这些容器分为序列式容器和关联式容器两种。C++11新加入4种容器，主要结构采用哈希函数，因此也称为无序容器。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\",\"margin-left\":\"2em\",\"text-align\":\"justify\"},attrs:{\"id\":\"uda37c2d1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表8.1 STL容器种类 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"753px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"BQDA3\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue485a413\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 容器种类 \")])])]),_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"645\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uac7a3c82\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 功能 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1b183c7d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 序列容器 \")])])]),_c('td',{attrs:{\"width\":\"645\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1060f7ca\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 主要包括 vector 向量容器、list 列表容器以及 deque 双端队列容器。之所以被称为序列容器，是因为元素在容器中的位置同元素的值无关，即容器不是排序的。将元素插入容器时，指定在什么位置，元素就会位于什么位置。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udb235111\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 关联式容器（排序容器） \")])])]),_c('td',{attrs:{\"width\":\"645\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8ce4a594\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 包括 set 集合容器、multiset多重集合容器、map映射容器以及 multimap 多重映射容器。排序容器中的元素默认是由小到大排序好的，即便是插入元素，元素也会插入到适当位置。所以关联容器在查找时具有非常好的性能。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub1cc14d0\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 哈希容器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3a348a69\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" （无序容器） \")])])]),_c('td',{attrs:{\"width\":\"645\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue89b5ccd\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 分别是 unordered_set 哈希集合、unordered_multiset 哈希多重集合、unordered_map 哈希映射以及 unordered_multimap 哈希多重映射。和排序容器不同，哈希容器中的元素是未排序的，元素的位置由哈希函数确定。 \")])])])])])]),_c('h2',{attrs:{\"id\":\"woi9U\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.1 容器的分类 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5bf217fc\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 序列容器： \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ube76f63b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 所谓序列容器，即以线性排列（类似普通数组的存储方式）来存储某一指定类型（例如 int、double 等）的数据，每个元素均有固定的位置。需要特殊说明的是，该类容器并不会自动对存储的元素按照值的大小进行排序。需要注意，序列容器只是一类容器的统称，并不指具体的某个容器。序列容器大致包含以下几类容器，其对应的头文件与容器名相同。前三种容器可以进行随机访问，意味着底层存储结构为数组，存储空间连续；后面三种容器不可以随机访问，意味着每个节点都是独立存储，在空间上不具有连续性。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1de86c77\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表8.2 序列容器 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"756px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"C8aZn\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7e501b9a\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"14px\"}},[_vm._v(\" 容器 \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u44b19196\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 描述 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u419482d1\"}},[_c('span',{staticClass:\"ne-text\"}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 增加或删除元素 \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf63975da\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随机访问 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3b6eaedb\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 数组容器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua75c7a74\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" array<T,N> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u91f3fdc9\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 表示可以存储 N 个 T 类型的元素，是 \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"http://c.biancheng.net/cplus/\",\"href\":\"http://c.biancheng.net/cplus/\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C++ \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 本身提供的一种容器。 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3fc3b074\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 长度固定，不能增加或删除元素 \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub3b3f993\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Y \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u247140e2\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 向量容器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3519a885\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" vector<T> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua7fa52b6\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 长度可变，即在存储空间不足时，会自动申请更多的内存。 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3d143d96\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 尾部增删效率O(1) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u815ea9f8\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 其他位置增删效率O(n) \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue53db899\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Y \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1b0b94ce\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 双端队列容器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9f473518\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" deque<T> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u87c79e04\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 和 vector 相似，头部和尾部插入和删除元素都非常高效。 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u79829722\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 头部尾部增删效率O(1) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2eaa0daa\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 其他位置增删效率O(n) \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud93a3a09\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Y \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uae0000fa\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 链表容器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1792c506\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" list<T> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u619b5f61\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 长度可变，由 T 类型元素组成的序列，以双向链表形式组织元素 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue6253ea6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 任意位置增删效率O(1) \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uae987944\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" N \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u54b45609\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 正向链表容器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4377b343\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" forward_list<T> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9428c36\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 以单链表的形式组织元素，它内部的元素只能从第一个元素开始访问，比链表容器快、更节省内存。 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8db8a2f2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 任意位置增删效率O(1) \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc1c906a4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" N \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf301a83b\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 堆栈 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u343d84ac\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" stack<T> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub372b29d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在deque<T>的基础上形成，只能在尾部进行增加删除，实现先进后出 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub0928928\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 尾部增删效率O(1) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub124f6fd\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 其他位置不能增删 \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udf4c3335\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" N \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"130\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc6a9f39c\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" 单向队列 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6e7f6397\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 128, 0)\",\"font-size\":\"14px\"}},[_vm._v(\" queue<T> \")])])]),_c('td',{attrs:{\"width\":\"330\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u33c06797\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在deque<T>的基础上形成，只能在尾部新增，头部弹出，实现先进先出 \")])])]),_c('td',{attrs:{\"width\":\"216\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u65a06606\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 尾部增加效率O(1)，头部弹出效率O(1)，其他位置不能增删 \")])])]),_c('td',{attrs:{\"width\":\"80\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u86cab139\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" N \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u24db5402\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 关联式容器： \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue22ff3e9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 关联式容器底层采用二叉树结构，更确切的说是红黑树结构，各元素之间没有严格的物理顺序关系。与序列容器不同，关联式容器在存储元素值的同时，还会为各元素额外再配备一个值（又称为“键”，其本质也是一个 C++ 基础数据类型或自定义类型的元素），它的功能是在使用关联式容器的过程中，如果已知目标元素的键的值，则直接通过该键就可以找到目标元素，而无需再通过遍历整个容器的方式。关联式容器可以快速查找、读取或者删除所存储的元素，同时该类型容器插入元素的效率也比序列式容器高。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u4728f068\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 也就是说，使用关联式容器存储的元素，都是“键值对”（ <key,value> ），这是和序列式容器最大的不同。除此之外，序列式容器中存储的元素默认都是未经过排序的，而使用关联式容器存储的元素，默认会根据各元素的键值的大小做升序排序。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u10088f9a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表8.3 关联式容器 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"744px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"w1Snf\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"122\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6d937590\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 关联式容器名称 \")])])]),_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"622\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u689baef3\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 特点 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"122\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u03610cee\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" map \")])])]),_c('td',{attrs:{\"width\":\"622\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u73d95f72\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 定义在 <map> 头文件中，使用该容器存储的数据，其各个元素的键必须是唯一的（即不能重复），该容器会根据各元素键的大小，默认进行升序排序（调用 std::less<T>）。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"122\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue17aa354\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" set \")])])]),_c('td',{attrs:{\"width\":\"622\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9dde3e32\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 定义在 <set> 头文件中，使用该容器存储的数据，各个元素键和值完全相同，且各个元素的值不能重复（保证了各元素键的唯一性）。该容器会自动根据各个元素的键（其实也就是元素值）的大小进行升序排序（调用 std::less<T>）。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"122\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud99c44a2\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" multimap \")])])]),_c('td',{attrs:{\"width\":\"622\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua4de79f5\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 定义在 <map> 头文件中，和 map 容器唯一的不同在于，multimap 容器中存储元素的键可以重复。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"122\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22e1bf33\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" multiset \")])])]),_c('td',{attrs:{\"width\":\"622\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u36e8b6ef\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 定义在 <set> 头文件中，和 set 容器唯一的不同在于，multiset 容器中存储元素的值可以重复（一旦值重复，则意味着键也是重复的）。 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u26a95070\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 无序容器： \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u0c04f977\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 无序容器只是一类容器的统称，仅是在前面提到的 4 种关联式容器名称的基础上，添加了 \\\"unordered_\\\"。关联式容器会对存储的键值进行排序，但是无序容器不会。如果涉及大量遍历容器的操作，建议首选关联式容器；反之，如果更多的操作是通过键获取对应的值，则应首选无序容器。因为无序容器底层采用hash结构，其随机获取键值对的性能为常量级，即O(1)。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ufa3f2d9f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表8.4 无序容器 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"754px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"DrdE7\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"166\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9157a888\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 无序容器 \")])])]),_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"588\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u10900812\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 功能 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"166\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u093823a9\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" unordered_map \")])])]),_c('td',{attrs:{\"width\":\"588\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u359868f5\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 存储键值对 <key, value> 类型的元素，其中各个键值对键的值不允许重复，且该容器中存储的键值对是无序的。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"166\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u34149751\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" unordered_multimap \")])])]),_c('td',{attrs:{\"width\":\"588\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udb2241e6\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 和 unordered_map 唯一的区别在于，该容器允许存储多个键相同的键值对。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"166\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufe579de8\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" unordered_set \")])])]),_c('td',{attrs:{\"width\":\"588\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9eff5ec\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 不再以键值对的形式存储数据，而是直接存储数据元素本身（当然也可以理解为，该容器存储的全部都是键 key 和值 value 相等的键值对，正因为它们相等，因此只存储 value 即可）。另外，该容器存储的元素不能重复，且容器内部存储的元素也是无序的。 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"166\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1aca7a02\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" unordered_multiset \")])])]),_c('td',{attrs:{\"width\":\"588\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud1eb1656\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 和 unordered_set 唯一的区别在于，该容器允许存储值相同的元素。 \")])])])])])]),_c('h3',{attrs:{\"id\":\"Y0XZc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T821 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"hjl5u\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua7e4b6a0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6925104c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7bd55a69\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf50417a5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2cbe880c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T821 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua90c705e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 了解STL容器的分类 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u273a53a2\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1201e6fb\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#BPKTU\",\"href\":\"#BPKTU\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T823 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"LQGUv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.2 迭代器 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u291e3c76\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如前所述，不同容器内部结构各不相同，但它们都是用于存储大量数据。因此也都需要对数据进行大量的遍历操作。为了满足排序、查找、求和等通用算法的需求，需要将遍历操作与具体的存储结构分离开，因此就产生了迭代器。迭代器隐藏了不同存储结构的内部差异，具备对容器进行遍历读写数据的能力。迭代器是 C++ 程序中常用的一种设计模式，它最重要的作用是为访问容器提供了统一的接口。 \"),_c('br')]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 迭代器的底层实际就是一个指针，通过迭代器可以指向容器中的某个元素。 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" *迭代器名 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 就表示迭代器指向的元素。通过非常量迭代器还能修改其指向的元素。但很多迭代器对指针进行了封装，其功能与原生指针相比受一定限制，不同容器的迭代器功能强弱程度也有所不同。主要分为前向迭代器、双向迭代器和随机访问迭代器。 \")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u18084171\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 前向迭代器的功能被所有类型迭代器兼容，包括++操作，即一次前向移动一个位置；复制或赋值；还可以用 == 和 != 运算符进行比较。C++中采用begin()指向首元素，用end()指向尾后元素，即最后一个有效元素后面的元素。 \")])]),_c('li',{attrs:{\"id\":\"uc3e83706\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 双向迭代器比正向迭代器多支持一个 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" -- \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 操作，即一次后向移动一个位置。 \")])]),_c('li',{attrs:{\"id\":\"u18a42b7c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随机访问迭代器支持的功能最多，除了以上提到的功能，它还支持加上任意偏移量并得到新的迭代器；通过下标形式访问元素；用 <、>、<=、>= 运算符进行比较；另外，两个迭代器的减法操作表示二者所指向元素的序号之差。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udfcecb69\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表8.5 各容器支持的迭代器类型 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"750px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"KLd8C\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub3e70387\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 容器 \")])])]),_c('td',{staticStyle:{\"background-color\":\"rgb(237, 237, 237)\"},attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u64ece421\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 对应的迭代器类型 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uefbecc30\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" array \")])])]),_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8264d89d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7a3056bd\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 随机访问迭代器 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ube0f2e2f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" vector \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf835d85a\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" deque \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u449e7240\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" list \")])])]),_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uaa2ed112\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u779e29f9\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 双向迭代器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udab2670e\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}})])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udfbbc933\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" set / multiset \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9d5b659f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" map / multimap \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u56a3cfc3\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" forward_list \")])])]),_c('td',{attrs:{\"rowspan\":\"3\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u914484fb\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u561764a1\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 前向迭代器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5ca057ef\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}})])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u61dfb781\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" unordered_map / unordered_multimap \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udd9fd883\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" unordered_set / unordered_multiset \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1816b1d0\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" stack \")])])]),_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5c2938b4\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" 不支持迭代器 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u734449ab\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}})])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5f15b61f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\",\"font-size\":\"14px\"}},[_vm._v(\" queue \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u46fc7f04\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" array, vector和deque由于其存储的顺序性，可以将所有的指针存在在一个数组中，因此可以采用随机访问迭代器，其实就是具备了数组的通过偏移访问元素的能力，同时也就具备了指针间的减法操作和大小比较等功能； \")])]),_c('li',{attrs:{\"id\":\"u4e81046b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" list, set和map等容器的元素存储不具有顺序性，因此只能通过迭代方式进行访问，所以是双向迭代器； \")])]),_c('li',{attrs:{\"id\":\"u6848773e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" forward_list顾名思义，通过封装限制了反向遍历的能力，是为了保障特定算法的实现；哈希容器也支持了前向指针，单向迭代访问各个元素，无法通过偏移实现跳跃访问。 \")])]),_c('li',{attrs:{\"id\":\"u0d21d333\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" stack的先进后出和queue的先进先出机制，只能访问栈顶或队列头部的元素，不允许出现遍历操作，因此不能支持迭代器，否则会破坏其固有的机制。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u594ce644\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 迭代器从本质上就是一个指针，但是根据不同容器的特点，采用类封装的方式，对功能进行了限制。随机访问迭代器支持底层结构为数组的容器，借助数组空间连续分配，可以随机访问的特性，因此功能最全面。而双向迭代器和前向迭代器所支持的容器，每个元素的存储空间是不连续的，在一个元素中，通过指针间接访问下一个元素，因此只能依次遍历。也是因为其空间不连续性，因此迭代器的值和元素的顺序没有关系，不具有大小关系，也就是说，不能采用小于尾结点的方式进行终止判断，只能采用不等于尾结点的方式。这些功能都是通过类封装（知识点： \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#dNdcQ\",\"href\":\"ch7#dNdcQ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T751 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ）和函数重载（知识点： \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#WLtg1\",\"href\":\"ch7#WLtg1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T771 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ）实现的。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u5c8b3dae\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要特别注意，迭代器可能存在失效问题。失效的本质就是迭代器底层对应指针所指向的空间被销毁了，而使用一块被释放的空间会造成程序崩溃。任何底层空间改变的操作，都有可能导致迭代器失效，比如：resize, reserve, insert, erase, assign, push_back等。换句话说，这些操作都有可能导致容器空间的重新分配，因此原来的迭代器就会失效。解决的方式是在执行以上操作后，需要对迭代器进行重新赋值。 \")])]),_c('h3',{attrs:{\"id\":\"BPKTU\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T822-T825 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"R2bkO\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9e33fae3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5b48a073\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u31619472\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2701646e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u396f0f1b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T822 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u66e4e40d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 迭代器是容器访问的主要方式，其本质就是通过类封装进行功能限定的指针 \")])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue160ad2d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#VjX61\",\"href\":\"ch7#VjX61\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T791 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8a532aa1\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#i9a97\",\"href\":\"#i9a97\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T831 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u83c253d8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T823 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc4717747\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 能够清晰掌握不同类型迭代器和不同类型容器直接的对应关系，并理解造成这些异同的原因 \")])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud84d1b76\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#IS3uW\",\"href\":\"ch6#IS3uW\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T621 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Y0XZc\",\"href\":\"#Y0XZc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T821 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}})]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4359b417\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T824 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufaecc25c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 双向迭代器和前向迭代器只能逐个遍历元素，终止判断只能采用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" != \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 运算 \")])])]),_c('td',{attrs:{\"width\":\"65\"}}),_c('td',{attrs:{\"width\":\"67\"}})]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0b9684fe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T825 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9fa46516\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" resize, reserve, insert, erase, assign, push_back等底层空间操作都会造成空间重新分配，进而导致迭代器的失效，因此要对迭代器进行重新赋值 \")])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u437518a1\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#zTfai\",\"href\":\"ch5#zTfai\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T542 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('h1',{attrs:{\"id\":\"nCV7z\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3. 向量vector \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u86d3da24\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" STL中提供了模板数组array，用于优化原生数组的使用。与原生数组相比，模板数组更安全、更便利，这主要是因为array是一个类，通过重载操作符和一些访问控制函数，满足了更多的需求。例如在进行随机范围时，除了重载操作符[]通过下标访问之外，还提供了函数at进行下标访问，at在进行访问时会进行越界判断，使访问操作更加安全；此外，array还重载了赋值运算符和关系判断运算符，达成了原始数组无法达到的整体赋值和整体比较。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u8c13e110\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u3a19ce7d\",\"src\":require(\"../assets/images/1676860900025-3f218d18-c64d-4f81-991e-bd2c6cb266e8.png\"),\"width\":\"334\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u5c6a85e5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.1 模板数组array示例 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u8d2c9050\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组的空间大小是固定的，很难按需申请，会造成空间的浪费。即使采用动态数组，当数据增长超过预留空间上限时，也需要重新全部申请空间。STL提供了向量vector类型，由头文件<vector>引入，其工作方式与数组类似，但是容量可以根据需要自动伸缩。与模板类array比较，vector更加灵活，但array的执行效率更高。在绝大部分情况下，vector和array的效率差可以被忽略，因此在需要使用array的场合，完全可以使用vector代替，array很少被使用。 \")])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u974ef82a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" vector在进行扩展时，并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u0a1552f7\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u085b3598\",\"src\":require(\"../assets/images/1676860934880-d997877f-83fb-4d5c-9afc-4fd160ade211.png\"),\"width\":\"399.3333333333333\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ude89ae9a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.2 向量vector示例 \")])]),_c('h2',{attrs:{\"id\":\"yhhga\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3.1 遍历 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ub6498a60\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 以下的遍历方式适用于所有使用随机访问迭代器的容器，例如：vector, string等。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"rj8l8\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.4\")]),_vm._v(\" vector的遍历方式\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <vector> //需要引入 vector 头文件\\nusing namespace std;\\nint main()\\n{\\n    vector<int> v1(4);\\t\\t\\t\\t\\t\\t\\t//创建长度为4的vector\\n    for (size_t i = 0; i < v1.size(); i++)      //设定 values 容器为 {0,1,2,3}\\n        v1.at(i) = i;\\n    auto v2 = v1;\\n    v2[2] = 1;\\n    if (!v1.empty()) {      //如果容器不为空，则输出容器中所有的元素\\n        for (auto it = v1.begin(); it < v1.end(); it++)\\n            cout << *it << \\\" \\\";\\n    }\\n    cout << endl;\\n    for(auto e:v2)\\n        cout << e << \\\" \\\";\\n    cout << endl;\\n    for (auto it = v1.rbegin(); it < v1.rend(); it++) //使用反向迭代器遍历容器\\n        cout << *it << \\\" \\\";\\n    cout << endl << boolalpha;\\n    cout << (v1 == v2) << '\\\\t' << (v1 != v2)<< endl;\\n    cout << (v1 > v2) << '\\\\t' << (v1 < v2)<< endl;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"gq20e\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u62d6f17a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc128d1b6\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u27bf0ed7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u519b979d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 1 2 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2eab4be0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 1 1 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9629f86f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 2 1 0 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufbf0eba9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false true \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uca18f638\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true false \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"udfe2f923\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第6行定义了一个 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" vector \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 容器，长度为4，初始化为全0。默认初始化为0的操作是原生数组不具备的。 \")])]),_c('li',{attrs:{\"id\":\"u77f7879b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第7行用传统的下标形式访问 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" vector \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 容器，注意这里下标数据类型为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" size_t \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，它在64位系统中为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" long unsigned int \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （占用8字节的内存空间），在需要通过数组下标来访问数组时，通常建议将下标定义 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" size_t \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类型。 \")])]),_c('li',{attrs:{\"id\":\"u62458d4f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" at \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数进行下标访问，与 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" v1[i]=i; \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 功能相同，但是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" at() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数进行下标越界判定，更加安全。第10行采用了操作符 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 形式访问元素。 \")])])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub7a33a23\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 虽然at()函数更加安全，但是毕竟有代价消耗。对于能确保访问不发生越界的情况，使用操作符 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 效率更高。 \")])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uf7357c98\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行实现了数组的整体赋值，这是原生数组无法完成的。 \")])]),_c('li',{attrs:{\"id\":\"u1957a8fb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11行用判定容器是否为空，它与 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" v1.size()==0 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 功能相同，但 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" empty() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数的效率更高，优先使用。 \")])]),_c('li',{attrs:{\"id\":\"u53f11a8a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第12-13行用迭代器的方式遍历容器。由于每种容器的遍历方式都不相同，但是迭代器可以封装遍历过程，统一了遍历操作，进一步可以将容器和算法进行粘合。变量it就是一个迭代器，设定为auto类型，根据begin()函数的返回值自动设定为迭代器类型。begin()返回第一个元素的指针，end()返回最后一个元素的下一个指针，注意不是最后一个元素的指针，因此迭代器构建了一个左闭右开的区间，即包括begin()指向的元素，但是不包括end()指向的元素。因为迭代器返回的是指针，所以第13行用迭代器访问元素时用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" * \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 获取对应位置的值。vector采用随机访问迭代器，可以使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ++ \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 或 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" -- \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 操作进行前向或后向遍历。 \")])]),_c('li',{attrs:{\"id\":\"ude93f63b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第16-17行展示了遍历容器的第三种方式。 \")])]),_c('li',{attrs:{\"id\":\"u6372c6b7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第19-20行通过反向迭代器从尾部向头部依次遍历所有元素，注意反向迭代器中 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ++ \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表示向前移动。begin()和end()表示正向迭代，rbegin()和rend()表示反向迭代，cbegin(),cend()，crbegin()和crend()表示迭代的元素是const，不可修改。 \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue3c60208\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"cVOJg\",\"src\":require(\"../assets/images/1660379324357-53fff7a7-d418-409d-b996-c6d80365c924.gif\"),\"width\":\"821\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u60a3a522\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.3 正向迭代器和反向迭代器 \")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u83685be1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第21行的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" boolalpha \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是为了让下面两行的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" bool \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类型输出结果显示 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true/false \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，而不是1/0。 \")])]),_c('li',{attrs:{\"id\":\"u234982b2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第22-23行验证了 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" vector \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 容器可以进行整体比较。比较采用字典序，从第0个元素开始比较，如果对应元素相等，进行下一个位置元素的比较，如果不相等，两个对应元素的大小关系就直接作为两个容器的大小关系。 \")])])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uefecb6bf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" STL的容器在很多操作上都是统一的，因此以上代码中的很多部分都可以使用到其他容器上。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u396caae7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string类型原始的获取长度函数为length()，就是为了和STL的其他容器兼容，因此添加了完全相同功能的size()函数，确保string类型也能采用STL的算法完成。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2626e18b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在实际使用时，array很少被使用，常用vector代替，因为vector和array性能相近，而且更加灵活。 \")])])]),_c('h3',{attrs:{\"id\":\"i9a97\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T831 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"UFYdm\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1f76ad26\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4b93bb61\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u24030393\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u00adba13\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1a8b9c84\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T831 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8565cfd5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握容器遍历的方式，empty是最高效的容器判定为空的方法 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1bc8d401\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#BPKTU\",\"href\":\"#BPKTU\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T822 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u29662a11\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8054633a\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （LX822） \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"L4SnJ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3.2 vector的典型操作 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"YOftZ\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.5\")]),_vm._v(\" vector基本操作\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<vector>\\n#include<algorithm>                  //for_each和copy\\n#include<iterator>                   //ostream_iterator\\nusing namespace std;\\nint main()\\n{\\n    vector<char> v;                  //初始化一个空vector容量\\n    string s = \\\"LTSA\\\";\\n    for(auto e:string(\\\"LTSA\\\")) v.emplace_back(e);     //或 v.assign(s.begin(), s.end());\\n    cout << v.size() << endl;       //容器中的元素个数\\n    v.pop_back();\\n    for (auto it = v.rbegin(); it < v.rend(); it++) //使用反向迭代器遍历容器\\n        cout << *it << \\\" \\\";\\n    cout << endl;\\n    cout << v.at(0) <<'\\\\t'<<v.front()<<'\\\\t'<<v.back()<< endl;\\n    v.emplace(v.begin()+1, 'C');    //在距离首元素偏移为1的位置插入新字符，也可以使用insert\\n    for_each(v.begin(), v.end(), [](auto &elem) { cout << elem << ' '; });\\n    cout << endl;\\n    v.erase(v.begin() + 2);          //删除距离首元素偏移为2的元素\\n    copy(v.begin(), v.end(), ostream_iterator<char>(cout, \\\" \\\"));\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"WOlbO\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u34542709\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufbdab275\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uedb0837d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9ccf4971\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3a26c57d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" S T L \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8f3f3c23\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L L S \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u588bfc69\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L C T S \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u128188f8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L C S \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u5c0e2315\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行构建了一个向量vector容器，第10行依次将4个字符插入到容器的尾部，也可以采用assign的方式，直接将字符串转换为vector。第12行从尾部移除一个元素。 \")])])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2df35d69\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注意这里使用string类型，如果直接使用字符串“LTSA”，是C风格字符串，该字符串以字符'\\\\0'结尾，将会是5个字符。string类型不存在字符'\\\\0'。 \")])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u1a197366\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第16行通过at(0)或front()函数访问首元素，用back()访问尾元素。 \")])]),_c('li',{attrs:{\"id\":\"ue27c6d54\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第17行在距离首元素偏移为1的位置插入新字符，第20行删除距离首元素偏移为2的元素。 \")])]),_c('li',{attrs:{\"id\":\"u2eb48b10\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第18行调用了算法for_each，它包含在头文件<algorithm>中，原型为for_each(iter1,iter2,op)，iter1和iter2指定了迭代器的开始和结束范围，op是一个函数，其作用是将迭代器中遍历的每个元素作为参数输入并进行处理。第18行中的op是一个匿名函数，将每个元素进行输出。当需要对一个容器某个区域的所有元素做相同的函数处理时，就可以使用for_each函数完成。 \")])]),_c('li',{attrs:{\"id\":\"uabfae266\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第20行调用erase函数删除指定位置上的字符，它还有一个函数原型 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" iterator erase (const_iterator first, const_iterator last) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，用于删除指定范围内的所有字符。在头文件<algorithm>中，还有一个删除函数remove，用于删除指定范围内特定的字符。需要特别说明的是，erase在删除后容器的长度会发生改变，但remove只是逻辑删除，容器的长度不变。 \")])]),_c('li',{attrs:{\"id\":\"u01ef6567\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第21行使用了输出流迭代器ostream_iterator，它包含在头文件<iterator>中，第一个参数指定输出流，第二个参数指定分隔符，第21行指定的分隔符是空格。 \")])]),_c('li',{attrs:{\"id\":\"u86972236\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第21行调用了算法copy，它的前两个参数指出被复制的元素的区间范围，第三个参数指出复制到的目标区间起始位置。当需要将一个容器的某个区域的元素复制到另外一个容器的指定区域时，即可以调用copy函数完成。第21行将v从begin()到end()的所有元素复制到标准输出流cout构建的迭代器中，并且以空格分隔，这样就将全部元素显示出来。 \")])]),_c('li',{attrs:{\"id\":\"u9ec88147\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第17行的emplace可以替换为insert，第10行的emplace_back可以替换为push_back。emplace方法是C++11新提出来的用法。无论是insert还是push_back都是先创建对象，再将对象移动到指定位置，而emplace方法直接在指定位置创建对象，因此效率较高。 \")])])]),_c('h3',{attrs:{\"id\":\"eOdZZ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习8.1 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u16e1a9de\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输入一个超大的正整数n，n≤10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 30 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，将n逐位保存到一个整型vector中。 \")])]),_c('h3',{attrs:{\"id\":\"ucMFa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T832 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"SAeZj\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue758a52b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud00aa365\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8edff308\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf9e62442\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc2b3fcdc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T832 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uceb41216\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握向量vector的典型操作，这是STL中最常用的容器 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue3d93adc\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#eRcMx\",\"href\":\"#eRcMx\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T541 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueefab684\"}},[_c('br')])])])])]),_c('h2',{attrs:{\"id\":\"HhNID\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3.3 查找重复元素 \")])]),_c('h3',{attrs:{\"id\":\"MIQlr\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题 8.1 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u18adb985\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" 找出数组中重复的数字。在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （剑指offer） \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"mqC2X\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u904c55e3\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucc6302cc\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufd8d0139\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1af45c75\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 5 4 5 3 4 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua5a72bf4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue542babf\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" 【题目解析】可以 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sort排序后，遍历数组，前面的值和后面的值相等即为答案。排序的时间复杂度为O(nLog \")]),_c('sub',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n)。可以采用打表法，将时间复杂度降为O(n)。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"O5y2f\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.6\")]),_vm._v(\" 查找重复元素\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <vector>\\nusing namespace std;\\nclass Solution {\\npublic:\\n    int findRepeatNumber(vector<int>& nums) {\\n        vector<int> ret(nums.size(),0);\\n        for(auto e:nums)\\n        {\\n            if(ret[e]!=0)  return e;\\n            ret[e]++;\\n        }\\n        return 0;\\n    }\\n};\\n\\nint main ()\\n{\\n    Solution s;\\n    size_t n;\\n    cin >> n;\\n    vector<int> nums(n);\\n    for (size_t i = 0;i<n;++i){\\n        cin >> nums[i];\\n    }\\n    cout << s.findRepeatNumber(nums) << endl;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ubdf2ecc8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目中保证输入的每个数字都小于n，因此第7行建立了一个vector，用来记录每个数出现的次数。初始化长度与nums相同，初始值全部为0。与原始数组相比，vector可以将初始值设定为任意值。由这个题目可以看出，vector的使用比原始数组更方便，掌握STL后，完全可以用vector代替原始数组。 \")])]),_c('li',{attrs:{\"id\":\"u2f251f97\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第22行初始化时，使用小括号定义长度为n，这是在调用vector的构造函数。注意这里不能使用中括号，使用时要区分与原始数组的机理不同。 \")])])]),_c('h3',{attrs:{\"id\":\"cOtOt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T833 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"J7YEh\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u33154f86\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"527\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2db718e0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"102\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua13ef823\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uad8cc17e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua37d119c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T833 \")])])]),_c('td',{attrs:{\"width\":\"527\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3a61bb19\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握使用vector代替原生数组，理解vector比原生数组的易用性 \")])])]),_c('td',{attrs:{\"width\":\"102\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u52663764\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#bDkij\",\"href\":\"ch5#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1f3a15c2\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u481ada2d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX801) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX814) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h1',{attrs:{\"id\":\"EZsP7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4. 高级应用 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u31ed2a1f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 向量vector和字符串string是最常见的两种容器，结合迭代器和算法，可以形成一些非常方便的应用。 \")])]),_c('h2',{attrs:{\"id\":\"NTR6E\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.1 降序排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ud4490176\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sort函数默认是采用升序排序，第五章提到可以将升序排序的结果调用reverse函数，形成降序。结合迭代器或仿函数，可以直接进行降序排序。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"Gwiaa\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.7\")]),_vm._v(\" 降序排序\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<vector>\\n#include<algorithm>\\nusing namespace std;\\n\\nint main ()\\n{\\n   size_t n;\\n    cin>>n;\\n    vector<int> nums(n);\\n    for (size_t i = 0;i<n;++i){\\n        cin>>nums[i];\\n    }\\n    sort(nums.rbegin(),nums.rend());//或sort(nums.begin(),nums.end(),greater<int>());\\n    for (size_t i = 0;i<n;++i){\\n        cout<<nums[i]<<' ';\\n    }\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"co9iT\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u064ad3d4\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3268b6f8\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u82b5756f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u80d6868c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 5 1 7 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u10e4d70d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 5 3 1 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u850147da\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 排序时采用反向迭代器，利用rbegin和rend两个函数，其中的大小比较与前向迭代正好相反，因此可以形成逆序效果。 \")])]),_c('li',{attrs:{\"id\":\"u62418745\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14行注释的结果，是将仿函数greater作为比较器，大的元素在前，因此也可以达到降序的目的。 \")])])]),_c('h3',{attrs:{\"id\":\"j6bkK\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T841 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"SKHj5\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u39c64533\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u3735b40c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4dc602f5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2444ed3f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u66666496\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T841 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4b44cf70\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握逆序排序的方法 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uca2a7998\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#i9a97\",\"href\":\"#i9a97\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T831 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0b40e6ec\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua90bb163\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX823) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX818) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"j8VkO\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.2 全部删除指定元素 \")])]),_c('h3',{attrs:{\"id\":\"LNdNn\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.2 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u4e589748\"}},[_c('span',{staticClass:\"ne-text\"}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 据说2011年11月11日是百年光棍节。这个日期写成字符串是“20111111”，有6个1连续出现，小明把这样的字符串（有6个1连续出现，但可以在1之间有空格间隔）叫做光棍串，即“2011 11 11”也是光棍串。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u299d9e94\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"uee00027f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输入数据的第一行为一个正整数T，表示测试数据的组数。然后是T组测试数据，每组测试输入1个字符串S（其中只包含空格与数字字符，长度不超过50个字符）。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5c226690\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"u1309f09d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 对于每组测试，若S是光棍串，则输出“Yes”，否则输出“No”。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"zLx5J\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u139627f2\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u536d75de\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udaf31639\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3a3309ac\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" 2011111 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u75ad4352\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" 2011 11 11 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ued08d11f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" No \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u73b4434e\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" Yes \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uda35951e\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uee65dfbd\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 简单分析题目，就是在字符串中查找是否存在6个1的子串，通过find就可以完成。题目的难度在于可能存在干扰的空格。将所有的空格去除掉，题目就变得简单了。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"wWC0E\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.8\")]),_vm._v(\" 删除所有空格\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <bits/stdc++.h>\\n\\nusing namespace std;\\nint main()\\n{\\n    int n;\\n    cin >> n;\\n    cin.ignore();\\n    string s;\\n    while(n--){\\n        getline(cin,s);   \\n        auto it = remove(s.begin(),s.end(),' ');\\n        s.resize(it-s.begin());\\n        //s.erase(remove(s.begin(),s.end(),' '),s.end());\\n        size_t pos = s.find(\\\"111111\\\");\\n        cout<<(pos==-1?\\\"No\\\":\\\"Yes\\\")<<endl;\\n    }\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ued4b0f61\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" remove \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的前两个参数指定删除范围，第三个参数为希望删除的字符。特别注意它的返回值，是一个迭代器，指向所有保留元素后的下一个位置。 \")])]),_c('li',{attrs:{\"id\":\"u122c05c3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第13行调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" remove \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 后，返回第一个无效字符位置。用这个位置减去 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" begin \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，就得到了有效字符的长度。第14行 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" resize \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 只保留有效字符，达到了删除的目的。 \")])]),_c('li',{attrs:{\"id\":\"u02c472f3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 同样道理，第15行将无效部分删除，也达到了目的，函数嵌套的写法请仔细观察。其中 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" erase \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的第一个参数不是函数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" remove \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，而是函数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" remove \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的返回值。 \")])]),_c('li',{attrs:{\"id\":\"ub882d033\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果不是删除无效元素，而是将无效元素全部置为空格，可以采用如下语句 \")])])]),_c('ul',{staticClass:\"ne-list-wrap\"},[_c('ul',{staticClass:\"ne-ul\",attrs:{\"ne-level\":\"1\"}},[_c('li',{attrs:{\"id\":\"u661e32a5\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" fill(remove(s.begin(),s.end(),' '),s.end(),' '); \")])])])])]),_c('h3',{attrs:{\"id\":\"kYcFw\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T842 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"j2rk9\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2f36249e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udcf9683c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u11800f6b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uca1718d2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udfb7a90d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T842 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5a2d513b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握全部删除指定元素的方法 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u54a743f2\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#eRcMx\",\"href\":\"#eRcMx\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T541 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3a1ae55b\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u488783d5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX804) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX6) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"Hf7IG\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.3 for_each算法* \")])]),_c('h3',{attrs:{\"id\":\"YRWmj\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.3 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u0da74a38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要求编写程序，将英文字母替换加密。为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。例如，字母a->B、b->C、…、z->A、A->b、B->c、…、Z->a。输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"xaEal\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2acfb77b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9dc788fe\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u573a0665\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Reold Z123? \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3509b3c6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sFPME a123? \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6d4d9827\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1bb31e1f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 采用简单循环可以达成目标。使用<algorithm>库中 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" for_each \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 算法，可以对容器中的每个元素做相同的处理。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"RYPog\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.9\")]),_vm._v(\" 英文字母加密\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <algorithm>\\nusing namespace std;\\n\\nvoid encode(char& ch)\\n{\\n    if(ch=='Z')\\n        ch='a';\\n    else if(ch=='z')\\n        ch='A';\\n    else if(islower(ch))\\n        ch=char(toupper(ch)+1);\\n    else if(isupper(ch))\\n        ch=char(tolower(ch)+1);\\n}\\nint main()\\n{\\n    string s;\\n    getline(cin,s);\\n    for_each(s.begin(),s.end(),encode);\\n    cout<<s;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u582fd26f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第20行采用for_each函数，将容器指定范围内的所有元素都调用encode函数进行处理。为了得到处理后的结果，第5行的形参是采用引用形式。 \")])]),_c('li',{attrs:{\"id\":\"uf11b9881\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 这种把函数做为另一个函数参数的形式，是一种高级调用形式。本质上传递是函数的指针。sort的第三个参数比较函数，也是采用相同的方法。这样函数不仅能把数据进行抽象，还能把行为进行抽象。这种形式在Python等语言中非常常见。 \")])])]),_c('h3',{attrs:{\"id\":\"zKGII\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T843 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"CqS0A\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0ea0aa47\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4cd23e30\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua9a0f337\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u38b29581\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uff731383\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T843 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufb7814a4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握for_each算法，了解把一个函数作为另外一个函数参数的形式 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6e66b9f6\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u67a3a9db\"}},[_c('br')])])])])]),_c('h1',{attrs:{\"id\":\"bUYYy\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5. 堆栈stack \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1298da54\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 堆栈stack是先进后出的数据结构，在程序设计时使用比较广泛。它只能在尾部添加或删除，其他位置的元素不能进行增删操作。栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为。与queue类似，只有简单的push(), pop(), top(), empty(), size()对外接口。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud7e9b8ae\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u87681a0a\",\"src\":require(\"../assets/images/1676860982277-3344c2ac-537d-42f3-8a6f-af0a98ae300a.png\"),\"width\":\"324.65625\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u031b876a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.4堆栈示例 \")])]),_c('h3',{attrs:{\"id\":\"AouR5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u412610b9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。有效字符串需满足：1）左括号必须用相同类型的右括号闭合。2）左括号必须以正确的顺序闭合。（ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣20题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"FKUat\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc73c7da1\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc00c42f7\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue2d265d9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ()[]{} \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7f36c871\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u328bcb94\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ([)] \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud3e93eac\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false \")])])])])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"yL9xc\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.10\")]),_vm._v(\" 判断括号是否匹配\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <stack>\\nusing namespace std;\\nclass Solution {\\npublic:\\n    bool isValid(string s) {\\n        stack<char> st;\\n        for(auto e:s){\\n            if(e=='('||e=='['||e=='{')\\n                st.push(e);\\n            else if(!st.empty()&&abs(e-st.top())<=2)\\t//有效括号对的ASCII码值不超过2\\n                st.pop();\\n            else\\n                return false;\\n        }\\n        return st.empty();      \\t\\t\\t\\t\\t\\t//左括号有残留\\n   } \\n};\\nint main ()\\n{\\n    Solution s;\\n    string str;\\n    cin >> str;\\n    cout <<boolalpha<< s.isValid(str) << endl;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ub2d7521c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 遍历字符串，当遇到左括号时，将其压入堆栈。当遇到有括号时，堆栈的顶部应该正好与其匹配，如果不匹配或者堆栈为空，则括号序列错误。 \")])]),_c('li',{attrs:{\"id\":\"uec71fa19\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当字符串遍历结束时，堆栈应该为空，否则意味着有残留的左括号未找到匹配的右括号。 \")])])]),_c('h3',{attrs:{\"id\":\"BlTTv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T851 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"wFDUi\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u722579f9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"515\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u1d7d2709\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u982997cf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue3f43a27\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8e6024b3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T851 \")])])]),_c('td',{attrs:{\"width\":\"515\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u02cdb11f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握堆栈stack的用法，学会堆栈增删元素的特点，主要解决匹配问题 \")])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u58834ca6\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#wG8i3\",\"href\":\"ch2#wG8i3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T241 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#QAfJZ\",\"href\":\"ch3#QAfJZ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T341 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u47ff1fdb\"}},[_c('br')])])])])]),_c('h1',{attrs:{\"id\":\"YXtaV\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6. 其他典型序列容器* \")])]),_c('h2',{attrs:{\"id\":\"ZmQjd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6.1 双向队列deque \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u76f31686\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 双向队列deque的绝大部分操作都与vector相同，但是可以在两端进行增删操作。vector对于头部的插入删除效率低，数据量越大，效率越低。deque相对而言，对头部的插入删除速度比vector快。vector访问元素时的速度会比deque快,这和两者内部实现有关。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7ca2e824\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"Gg63D\",\"src\":require(\"../assets/images/1660388751603-9f34660c-c0cf-47ad-b0c6-b99415e2fc42.jpeg\"),\"width\":\"510\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"justify\"},attrs:{\"id\":\"uf76789a2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.5 双向队列示例 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u7931f9ab\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" deque内部有个中控器，维护每段缓冲区中的内容，缓冲区中存放真实数据。中控器维护的是每个缓冲区的地址，使得使用deque时像一片连续的内存空间。deque支持随机访问。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u570b258d\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u93de3889\",\"src\":require(\"../assets/images/1660456972321-5a8dc67d-6587-4428-a5d3-a182eff2d7f2.jpeg\"),\"width\":\"486\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubce2ad6e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.6 deque中控器和缓冲器 \")])]),_c('h3',{attrs:{\"id\":\"pW8UQ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.5 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ua53e8baf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。返回滑动窗口中的最大值 。（ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://leetcode.cn/problems/sliding-window-maximum/\",\"href\":\"https://leetcode.cn/problems/sliding-window-maximum/\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣239题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"Sv0pP\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub0942b10\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf681d8c5\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue022313b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [1,3,-1,-3,5,3,6,7], k = 3 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9917f270\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [3,3,5,5,6,7] \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"2\",\"width\":\"750\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uff3d8c95\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例解释 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"2\",\"width\":\"750\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uffb959f5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 滑动窗口的位置 最大值 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uad53568f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [1 3 -1] -3 5 3 6 7 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua459e823\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 [3 -1 -3] 5 3 6 7 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u440e6aa1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 3 [-1 -3 5] 3 6 7 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22090e76\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 3 -1 [-3 5 3] 6 7 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7b53d836\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 3 -1 -3 [5 3 6] 7 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc39dd709\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 3 -1 -3 5 [3 6 7] 7 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua4d05753\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2d0aef08\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1）建立一个滑动窗口，将窗口内最大值的下标保存在窗口最前端，并忽略数组中滑动窗口范围内左侧的所有值，因为这些值在窗口继续滑动中不可能成为最大值。每次用O(1)的时间获取这个最大值。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22d55bcd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2）窗口中要保留下标，而不是具体的值，因为值会 \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 失效 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。用i表示当前元素下标，用sub表示窗口首部的下标，当i-sub>=k时，sub就不再当前窗口之中了，移出队列。 这一步保证了窗口内的所有值都处于同一窗口。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua2d88d61\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3）当有新元素来的时候，如果新元素大于窗尾的值，则利用循环，将所有小于这个数的值pop出去，因为所有值都处于同一窗口，小于当前元素的值已经失效，这一步保证了窗口的值最大。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u85dd774f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4）当滑动窗口装满时，才能计算最大值。 当 i+1>=k时表示正好装满，在此之后才能开始计算。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"bkm5a\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.11\")]),_vm._v(\" 滑动窗口的最大值\"),_c('code',[_vm._v(\"class Solution {\\npublic:\\n    vector<int> maxSlidingWindow(vector<int>& nums, size_t k) {\\n        vector<int> ret;\\n        deque<int> qe;\\n        if(nums.empty())     return ret;\\n        for(size_t i=0;i<nums.size();i++) {\\n            //新来的元素>队列之中的元素，说明最大值发生了变化\\n            while(!qe.empty()&&nums[i]>=nums[qe.back()])\\n                qe.pop_back();\\n            //窗口之中保存的是下标\\n            //i-qe.front()>=k，说明这个元素不在窗口之中了\\n            while(!qe.empty()&&i-qe.front()>=k)\\n                qe.pop_front();\\n            qe.push_back(i);//将下标存入数组中，因为要比较元素是否\\\"过期\\\"\\n            if(i+1>=k)//经过的元素可以满足一个窗口了\\n                ret.push_back(nums[qe.front()]);\\n        }\\n        return ret;\\n    }\\n};\")])]),_c('h3',{attrs:{\"id\":\"pyqMT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T861 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"bF9cQ\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9211d3a7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u9a2df881\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u53f1b3d3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1b4216af\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufab59e09\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T861 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua8704f4d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握双向队列deque的用法，主要解决在算法中需要设定滑动窗口的问题 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua3724efe\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u94122fca\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#z5syf\",\"href\":\"#z5syf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T862 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"rzfqq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6.2 单向队列queue \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u87b4029b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 单向队列queue是在双向队列deque基础上完成的，如果只需要一端增加，另一端删除时，建议采用queue。队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为。只有简单的push(), pop(), back(), front(), empty(), size()对外接口。如果没有特殊要求，也可以使用deque代替queue。 \")])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf87d79eb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注意queue的在尾部添加函数为push()，在头部删除函为pop()，因为它只有一个push和一个pop操作，这与deque需要区分头部和尾部不同。 \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua2e73846\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"cDom5\",\"src\":require(\"../assets/images/1660388854927-9c3e4482-5f3c-46c6-b3ff-a1bd5515c5eb.jpeg\"),\"width\":\"431\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8a9fd237\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.7 单向队列示例 \")])]),_c('h3',{attrs:{\"id\":\"aE9F5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u20f80c90\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个字符串 s ，请你找出其中不含有重复字符的最长子串的长度。（ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/\",\"href\":\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣3题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"SMJSc\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6bbe8379\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2bfa6ead\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u04b582c8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" akgekwelkrjlkjfkasdfashdfkladfald \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u84b0eda8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub71c15fd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】给定一个滑动窗口和标记数组，利用标记数组确定字符是否在窗口中出现过。如果字符没有出现过则添加到滑动窗口之中；如果出现了，则将已出现的字符左侧的所有字符移出滑动窗口。重复这个过程，记录能找到的滑动窗口的最大长度。从样例输入中可以看到，ashdfkl是最长不包含重复字符的子字符串。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"HGNXE\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.12\")]),_vm._v(\" 不含有重复字符的最长子串的长度\"),_c('code',[_vm._v(\"class Solution {\\npublic:\\n    int lengthOfLongestSubstring(string s) {\\n        queue<char>de;//滑动窗口\\n        vector<bool> arr(200,false);      //统计数组\\n        size_t maxsize=0;                       //记录最长的长度\\n        for(size_t i=0;i<s.size();i++){\\n            if(arr[s[i]]){                      //表示不是第一次出现    \\n                maxsize=max(maxsize,de.size()); //先将最长的长度保存下来\\n                while(arr[s[i]]){               //不为false说明还有重复字符\\n                    arr[de.front()]=false;      //标记数组对应的字符为清除状态\\n                    de.pop();     \\t\\t\\t\\t//删掉\\n                }\\n            }\\n            //此时说明删掉了开始部分重复的字符串，或新出现的字符没有出现过，直接进入滑动窗口\\n            de.push(s[i]);\\n            arr[s[i]]=true;                  \\t//标记数组，表示出现过\\n        }\\n        maxsize=max(maxsize,de.size());\\n        return maxsize;\\n    }\\n};\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u5ac9f736\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第10-13行的循环，将滑动窗口中已存在的重复字符的左侧的所有字符移出滑动窗口。从滑动窗口构建的队列的队首开始移除，移除后第10行的循环重新开始判断，是否存在重复，如果存在重复则继续移除，直到全部移除，开始添加新的字符。 \")])])]),_c('h3',{attrs:{\"id\":\"z5syf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T862 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"MWt2X\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufbbbcbc8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua9768a5e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u81a58afc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u77869162\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf772a23c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T862 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uab7afb96\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握单向队列deque的用法，主要解决在算法中需要设定滑动窗口的问题 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue3cf9958\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#pyqMT\",\"href\":\"#pyqMT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T861 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u506509d6\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u63aba985\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX819) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX824) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"agupy\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6.3 链表list \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u66ea456c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 链表list是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现。由一系列结点组成。每个节点包含两个域：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。STL中的链表是一个双向循环链表，正向链表容器forward_list是单向链表，只能从前向后访问。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2a82027b\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"udfd1e15a\",\"src\":require(\"../assets/images/1660388907957-654add39-4d5b-42fc-9234-bb417537b693.jpeg\"),\"width\":\"554\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ube1165bf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图8.8 链表示例 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u4520fa57\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 由于链表的存储方式并不是连续的内存空间，因此链表list中的迭代器只支持前移和后移，属于双向迭代器。优点：1）采用动态存储分配，不会造成内存浪费和溢出；2）链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素。缺点：1）链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大；2）List有一个重要的性质，插入操作和删除操作都不会造成原有list迭代器的失效，这在vector是不成立的。 \")])]),_c('h3',{attrs:{\"id\":\"MwRYt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.7 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u70a786ce\"}},[_c('em',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" 个人围成一圈，从第一个人开始报数,数到 m 的人出列，再由下一个人重新从1开始报数，数到 m \")]),_c('em',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}})]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" 的人再出圈，依次类推，直到所有的人都出圈，请输出依次出圈人的编号。（洛谷 \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.luogu.com.cn/problem/P1996\",\"href\":\"https://www.luogu.com.cn/problem/P1996\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" P1996 \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" ） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8293c9e9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uff57374a\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" 输入两个整数 n,m。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u41674062\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uade24e05\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" 输出一行 n \")]),_c('em',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}})]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(0, 0, 0, 0.75)\",\"font-size\":\"16px\"}},[_vm._v(\" 个整数，按顺序输出每个出圈人的编号。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"wzBsD\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucfe8da39\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u44e6169e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u01b5d555\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 3 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1b63a23c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 6 9 2 7 1 8 5 10 4 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8ce5d390\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua6d97770\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最重要的是形成一个环，然后能在任意位置形成高效的删除操作。list正好符合这样的要求。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"AJH9V\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.13\")]),_vm._v(\" 约瑟夫环问题\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<list>\\nusing namespace std;\\nint main(){\\n    int m,n;\\n    cin>>m>>n;\\n    list<int> ls;\\n    for(int i=0;i<m;i++)\\n        ls.push_back(i+1);\\t\\t\\t//构建初始的list\\n    auto it=ls.begin();\\n    int i=0;\\n    while(!ls.empty()){\\n        i = (i+1)%n;\\n        auto next=++it;\\t\\t\\t\\t//备份下一个节点的迭代器\\n        if(!i) {\\n            cout<<*(--it)<<' ';\\t\\t//返回要删除的节点并输出\\n            ls.erase(it);\\t\\t\\t//删除节点，迭代器it失效\\n        }\\n        it = next;\\t\\t\\t\\t\\t//返回到下一个节点\\n        if(it==ls.end())\\t\\t\\t//形成循环访问\\n            it=ls.begin();\\n    }\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u4920e578\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第13行以n为循环进行叠加，第15行判断找到符合要求的数据，则进行删除。 \")])]),_c('li',{attrs:{\"id\":\"u9fc9cf8a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 特别注意在第14行对it进行了备份，因为一旦在第17行执行了删除操作，将会造成迭代器 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" it \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的失效， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" it \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 不再具有遍历能力。 \")])]),_c('li',{attrs:{\"id\":\"u8a245559\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14行不能写成 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" next=it+1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，因为list不支持随机访问迭代器，即不支持偏移功能，只支持++操作。因此在第14行进行++，找到下一个节点，然后在第16行执行--操作，回到要删除的节点。 \")])]),_c('li',{attrs:{\"id\":\"u89fc2125\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14行与第19行配合，相当与执行了++操作，然后在第20-21行，判定如果执行到了尾部，重新回到头部，形成循环访问。 \")])]),_c('li',{attrs:{\"id\":\"u77a52821\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 这是一个典型的list访问案例，展示了list的遍历和删除节点操作，同时要特别注意迭代器失效问题。 \")])])]),_c('h3',{attrs:{\"id\":\"GquqL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.8 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0d9a3ccc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 写一个程序完成以下命令： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc930f91b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" new id ——新建一个指定编号为id的序列(id<10000) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u00a6e292\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add id num——向编号为id的序列加入整数num \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u124f645c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" merge id1 id2——合并序列id1和id2中的数，并将id2清空 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u33058aa0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" unique id——去掉序列id中重复的元素 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1b073dcf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" out id ——从小到大输出编号为id的序列中的元素，以空格隔开。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc43a92e7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入描述】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8728236c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一行一个数n，表示有多少个命令( n≤200000)。以后n行每行一个命令。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uac4971f8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出描述】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u026dd17f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 按题目要求输出。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0362e60d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://blog.csdn.net/qq_44116998/article/details/104419169\",\"href\":\"https://blog.csdn.net/qq_44116998/article/details/104419169\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 北大程序设计与算法（三）测验题汇总(2020春季) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"H8OhL\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2398f599\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua63243de\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uca0dfeb3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 16 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc69a31cd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" new 1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u677de113\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" new 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4810d9d1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 1 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud5321a38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 1 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1a28dac9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 1 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u69038a11\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 2 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub6e42d8d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 2 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9dbe4119\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 2 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u127bc8ac\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" add 2 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u94631091\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" out 1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uccc3ed52\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" out 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc7d3f210\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" merge 1 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8fe33106\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" out 1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u53eb51f8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" out 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue8e64e8b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" unique 1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2e1508ea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" out 1 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u876ed06e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 3 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u36456cf4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 3 4 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua6a19c1a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 2 3 3 4 4 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue35efe1d\"}},[_c('span',{staticClass:\"ne-text\"})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u79cc5e12\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 3 4 5 \")])])])])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"DCoCq\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.14\")]),_vm._v(\" 链表执行命令\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<list>\\n#include<algorithm>     //find_if\\n#include<iterator>      //ostream_iterator\\nusing namespace std;\\n\\nint main()\\n{\\n\\tlist<int> ls[10005];\\n\\tint n,id1,id2, num;\\n\\tcin >> n;\\n\\tchar str[100];\\n\\twhile(n--){\\n\\t\\tcin >> str;\\n        if(str[0]=='a'){\\n            cin >> id1 >> num;\\n            auto it=find_if(ls[id1].begin(),ls[id1].end(),[&num](int v) {return v>num;});\\n            ls[id1].insert(it,num);\\n        }else if(str[0]=='n'){\\n            cin >> id1; \\n        }else if(str[0]=='m'){\\n\\t\\t\\tcin >> id1 >> id2;\\n\\t\\t\\tls[id1].merge(ls[id2]);         //合并的两个序列必须有序\\n        }else if(str[0]=='u'){\\n\\t\\t\\tcin >>id1;\\n\\t\\t\\tls[id1].unique ();               //唯一化处理前，list必须有序\\n        }else if(str[0]=='o'){\\n\\t\\t\\tcin >> id1;\\n            copy(ls[id1].begin(), ls[id1].end(), ostream_iterator<int>(cout,\\\" \\\"));\\n\\t\\t\\tcout << endl;\\n        }\\n    }\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u3f7300a7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第17-18行先找到插入位置，然后进行插入，实际上实现了插入法排序。find_if是STL的<algorithm>头文件中提供的一个算法，它在指定容器的范围内（前两个参数决定），查找满足第三个参数规定条件的元素迭代器位置。第18行在该位置插入元素。匿名函数从指定范围内第一个大于输入值的元素，保证了指定序列的递增性。 \")])]),_c('li',{attrs:{\"id\":\"u0ae7da38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注意第17行的匿名函数中，使用了 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [&num] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，表示引用局部变量 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" num \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。也可也使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [&] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表示引用当前范围内的任何变量， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [num] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 通过传值方式使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" num \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [=] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 通过传值方式使用当前范围内的任意变量。 \")])]),_c('li',{attrs:{\"id\":\"uf1fc5b1e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" list的合并函数merge()和去重函数unique()都要求list是有序的，因为在添加新元素时保证了有序性，因此在这两步操作之前都不需要排序。 \")])]),_c('li',{attrs:{\"id\":\"u27fd2375\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在进行命令判断时，因为每个命令的第一个字符正好不同，字符判断的效率要高于字符串，因此只取了首字符进行判断。 \")])]),_c('li',{attrs:{\"id\":\"u6bb93e92\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行创建了list的数组，数组中的每个元素都是一个list。 \")])]),_c('li',{attrs:{\"id\":\"ub64647b9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" insert(),merge()和unique()都需要对中间元素进行插入和删除操作，list用其特有的数据结构保证了算法的有效性。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u9b702e16\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在STL中，算法大量的使用了仿函数，仿函数（Functor）又称为函数对象（Function Object）是一个能行使函数功能的类。仿函数本质上就是通过重载运算符()，将一个类对象按照函数形式进行访问，其使用方法与普通函数相同。以下定义了一个仿函数comp： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"k2Wy1\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.15\")]),_vm._v(\" 仿函数示例\"),_c('code',[_vm._v(\"class comp\\n{\\npublic:\\n    comp(int t):num(t){}//显式构造函数\\n    //const放前面表示这个函数的返回值是不可修改的，放后面表示这个函数不修改当前对象的成员。\\n    bool operator()(int v) const{\\n        return v>num;\\n    }\\nprivate:\\n    const int num;\\n};\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u0869d4e0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第4行的num(t)表示用形参t对成员属性num进行初始化。 \")])]),_c('li',{attrs:{\"id\":\"uf1368274\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第6-8行重载了操作符()，使comp的对象能够像函数一样被调用。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u3e9c9b10\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有了这个仿函数之后，代码8.TODO的第17行就可以修改为： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"uN9cQ\"}},[_vm._v(\"auto it=find_if(ls[id1].begin(),ls[id1].end(),comp(num));\")]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uc5c3200d\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" find_if() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的第三个参数应该是一个函数，对前两个参数指定范围内的每个元素进行判定。这里传入了一个仿函数对象，并将成员属性进行初始化。 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" find_if() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数对其进行使用时，实际上是调用了仿函数重载的操作符 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" () \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，从而达到了调用函数的效果。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uf9856935\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从这个例子中也可以看到仿函数的作用，如果不使用匿名函数，而是使用普遍函数，由于 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" find_if() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的要求，该函数只能有一个参数，约束变量num无法传入，可以将num设定为全局变量，这样会导致数据的组织混乱。而仿函数通过构造函数将额外使用的数据通过构造函数传递给成员属性，操作符 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" () \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的函数体中就可以更加灵活的设置，而成员属性被约束在类的使用范围内，不会导致数据的组织混乱。 \")])]),_c('h3',{attrs:{\"id\":\"mM2Dg\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T863 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"jfnK0\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udacd434b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc2f01194\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uef7db88a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u774500d9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u44673f5d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T863 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u61c8a8c2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握链表list的用法，这是一个典型的节点空间不连续容器，迭代器终止判断不能用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" > \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 或 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" < \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，只能用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" != \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubfb99afa\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#VjX61\",\"href\":\"ch7#VjX61\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T791 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u54d55755\"}},[_c('br')])])])])]),_c('h1',{attrs:{\"id\":\"wJ10H\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 字典 \")])]),_c('h2',{attrs:{\"id\":\"SGdMn\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7.1 关联容器字典map \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ua1a73e6e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字典map是关联容器的典型代表，所有元素都是键值对，在C++中用pair实现。pair中第一个元素是first，作为key（键值），起到索引作用，第二个元素为second，作为value（实值），所有元素都会根据元素的键值自动排序，可以根据key值快速找到value值。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ua99babd7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" map属于关联式容器，底层结构是用红黑树实现，查找复杂度为O( \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"SOEhZ\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cd40280cdc832013a593b2df92ed2275.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )，其中nbison元素的数量。 \")])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uabccb829\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在数组一章获知，打表法是一种高效方法，用空间换时间，快速定位，减少搜索。打表法相当于用下标做键进行快速定位，但是如果使用的有效下标是稀疏的（即在一个较大范围里，只有少量下标被使用），或者所需要的键不是整型时，可以采用map实现打表法。只有有效的键才会出现在map中，减少了空间的浪费。并且map是按照键自动排序的，对有顺序要求的题目非常有用。 \")])])]),_c('h3',{attrs:{\"id\":\"ZAq0N\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.9 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4067a641\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 根可以忽视粗细的棒子。第 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 棒的长度是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")]),_c('sub',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 有人想从这些棒子中选出4个棒子，用这些棒子做1个矩形(包括正方形)。 求最大可以制作的矩形面积。（2022年青岛市程序设计竞赛试题小学组真题） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u777fe1c3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入格式 】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7e0c9615\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一行数量n。 第二行n个棒子的长度。4≤n≤10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ,1≤a \")]),_c('sub',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ≤10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4bbf5b9c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出格式】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u59bd0eb4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最大矩形面积，如果无法组成矩形，输出0。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"y1jXP\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4e6c0e9c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u954fa9df\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u40940cb6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua772b949\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 1 2 4 2 1 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7470a536\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8069faad\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub8fd6ec6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 3 3 3 4 4 4 5 5 5 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u67939961\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 20 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uba479891\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1d8ee60c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 3 4 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uad682aed\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8f2fd023\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】从题目描述看，最佳方案应该是打表法，列出每种长度的棒子的数量，然后从大到小，找到最佳符合要求的棒子组成举行。但是题目给定的棒子长度的数值访问过大，容易造成内存不足，而且遍历所有长度的耗时也非常巨大。进一步查看题目，因为棒子的总数量相对比较小，可以采用map记录存在的棒子，这样键的总量就会大幅减少，map是按照键值从小到大排序的，因此从尾部寻找符合要求的棒子组成矩形即可。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"NXA6n\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.16\")]),_vm._v(\" 求最大可以制作的矩形面积\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <map>\\nusing namespace std;\\nint main ()\\n{\\n    map<int,int> a;\\n    int n;\\n    cin>>n;\\n    for(int i=0;i<n;++i){\\n        int val;\\n        cin>>val;\\n        if(a.count(val))\\n        {   if(a[val]<4)   a[val]++; }\\n        else\\n            a[val]=1;\\t\\t\\t\\t//或写为a.insert(pair<int,int>(val,1));\\n    }\\n    int l1=0;\\n    for(auto rit=a.rbegin();rit!=a.rend();rit++){\\n        if(rit->second>=2 && l1>0){              //当前棒子数量大于2，并且找到过一对棒子\\n            cout<<l1*rit->first<<endl;\\n            return 0;\\n        }else if(rit->second>=4)                 //当前棒子数量大于4，直接构建方形\\n        {\\n            cout<<rit->first*rit->first<<endl;\\n            return 0;\\n        }else if(rit->second>=2 && l1==0){       //找到一对棒子，记录并寻找下一对棒子\\n            l1 = rit->first;\\n        }\\n    }\\n    cout<<0<<endl;                               //没有找到合适的棒子构成矩形\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uf8eb855e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第12行首先通过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" count() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数判断键是否存在，返回1或0。如果存在则加1，否则设置为初值1。根据题目描述，棒子数量超过4即可满足要求，因此当大于4时没有必须继续累加。 \")])]),_c('li',{attrs:{\"id\":\"u4d039be3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第18行的循环逆序遍历map，因为迭代器书写比较复杂，所以auto自动构建数据类型书写更方便，而且可以减少语法关键词的记忆。 \")])])]),_c('h3',{attrs:{\"id\":\"cR2Bd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T871 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"ep52y\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u289ec800\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc7a4716b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua6ce4b85\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1602e60b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue12809df\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T871 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2630dcef\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握关联容器字典map的用法。可以认为这是打表法的高级用法，当数据量比较大但是比较稀疏时，可以用字典代替打表法 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6904c6de\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注意map的键是从小到大天然排序的 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc77abb6d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#bDkij\",\"href\":\"ch5#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6bc68414\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7d0255f4\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX801) \")])]),_c('span',{staticClass:\"ne-text\"})])]),_c('td',{attrs:{\"width\":\"70\"}}),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('h2',{attrs:{\"id\":\"IOOHN\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7.2 无序容器字典unordered_map \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ucf7a680e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 无序容器与关联容器的最大区别在于：关联容器底层采用红黑树，其所有元素按照键进行排序，当需要进行有序遍历时，非常用用；无序容器底层采用的是哈希表，当需要进行随机访问某个键时，访问速度为常量级，即O(1)，当需要频繁进行快速定位时，无序容器就显示出了它的效率优势。 \")])]),_c('h3',{attrs:{\"id\":\"hpXsy\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.10 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8e33739d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target的那两个整数，并返回它们的数组下标。假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。可以按任意顺序返回答案。（ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣1题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0e256143\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【接口声明】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uee9b1a18\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" vector<int> twoSum(vector<int>& nums, int target) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua00fcefd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【数据范围】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8ad30d3d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 ≤ nums.length ≤10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，-10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ≤nums[i] ≤10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，-10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ≤target ≤10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u97a04722\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 只会存在一个有效答案 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"n9j3b\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u313e9502\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua9536d91\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5d64ab70\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [2,7,11,15], target = 9 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf319e3d1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [0,1] \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uab9d92b6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [3,2,4], target = 6 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u44dad994\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [1,2] \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9fbce5a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [3,3], target = 6 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1d52dacb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [0,1] \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0e2dc613\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】这是力扣的第1题，看似非常简单。用嵌套循环遍历所有组合的可能性，找到符合要求的答案进行输出即可，时间复杂度为O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )。实际上对于任意给定的值v，需要快速确定target-v是否存在，即v对于target的互补数是否存在。打表法可以完成这个任务需求。但2*10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的数值范围否决了开辟如此大空间的数组可行性。基于哈希表的unordered_map就发挥了它的作用。nums.length的数值范围决定了键的数量不会太多，哈希map既可以类似打表法中数组的快速定位，也可以避免无效空间的浪费。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"wp2aF\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.17\")]),_vm._v(\" 找出和为目标的整数\"),_c('code',[_vm._v(\"class Solution {\\npublic:\\n    vector<int> twoSum(vector<int>& nums, int target) {\\n        unordered_map<int,size_t> m;\\n        for (size_t i = 0; i < nums.size();++i)\\n            m[nums[i]] = i;\\t\\t\\t\\t\\t\\t//反向记录第i个数值对应的下标\\n        for (auto it1 = nums.begin(); it1 < nums.end() - 1; it1++)\\n        {\\n            if (m.count(target - *it1))\\t\\t\\t//若存在互补数\\n            {\\n                int first = it1 - nums.begin();\\t//当前数的序号\\n                int second = m[target - *it1];\\t//互补数的序号\\n                if(first!=second){\\t\\t\\t\\t//如果不是同一个元素\\n                    return {first,second};\\t\\t//用两个元素初始化构建一个列表\\n                }\\n            }\\n        }\\n        return vector<int>();//返回一个空的vector，保证语法正确，本题保证不会执行到这里\\n    }\\n};\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ubd12bbcc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从力扣的解题记录中可以可以看到，基于暴力穷举的方法耗时为92ms，而基于unordered_map的方法耗时为8ms，十几倍的速度差显示了unordered_map在快速定位上的效率优势。利用哈希表的特点，第9行的快速定位的时间复杂度为O(1)，这样就将暴力穷举的时间复杂度O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )降为O(n)O(1)=O(n)。 \")])]),_c('li',{attrs:{\"id\":\"u188e22ca\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第5-6行以vector的值为键，以下标为值反向构建unordered_map，第9行判定目标值是否存在，利用了unordered_map的快速定位功能。如果找到目标值且不是同一个元素（第13行），则返回答案。 \")])]),_c('li',{attrs:{\"id\":\"u24ad1fcf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11行是将迭代器指针转换为序号的常用方法。 \")])]),_c('li',{attrs:{\"id\":\"ufcb5d654\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14行的大括号是对vector进行初始化的方式，借助这种方式，与返回类型搭配使用，构建一个新的vector返回。 \")])]),_c('li',{attrs:{\"id\":\"ucc719b1f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 因为题目保证了一定有解，因此第18行是不会被执行的。但是从程序设计的角度，所有路径都必须有返回值，因此第18行必须存在。这一行也可以简写为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" return {}; \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufa2b9c62\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 很多文献上使用哈希map时使用头文件<hash_map>中的hash_map，这是一个非标准库，正确方式应该使用头文件<unordered_map>中的unordered_map。 \")])])]),_c('h3',{attrs:{\"id\":\"jxNPL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T872 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"g6dTs\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uefa19cb8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u9f1be56e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u72a19960\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5598679c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6d98c1c2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T872 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7330e0d3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握无序容器的用法，重点掌握利用unordered_map构建大且稀疏数据的打表法 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua0f7978a\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#bDkij\",\"href\":\"ch5#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub517b6c1\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3defd62d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX801) \")])]),_c('span',{staticClass:\"ne-text\"})])]),_c('td',{attrs:{\"width\":\"70\"}}),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('h2',{attrs:{\"id\":\"EdSqb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7.3 无序容器字典unordered_set \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ua9600562\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 可以认为字典是一种下标为任意类型的特殊数组，因为字典可以遍历，因此可以和循环联动，简化书写。 \")])]),_c('h3',{attrs:{\"id\":\"FO3kF\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.11 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uabc3ef9c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个 不同的索引 i 和 j ，满足 nums[i] == nums[j] 且 abs(i - j) <= k 。如果存在，返回 true ；否则，返回 false 。（ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣219题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf60d4b14\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【接口声明】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub669db11\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" bool containsNearbyDuplicate(vector<int>& nums, int k) \")])]),_c('span',{staticClass:\"ne-text\"})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u850472a8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【数据范围】 \")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"udf50c237\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"13px\"}},[_vm._v(\" 1 <= nums.length <= 10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"12px\"}},[_vm._v(\" 5 \")])])]),_c('li',{attrs:{\"id\":\"u1f87ee0a\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"13px\"}},[_vm._v(\" -10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"12px\"}},[_vm._v(\" 9 \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"13px\"}},[_vm._v(\" <= nums[i] <= 10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"12px\"}},[_vm._v(\" 9 \")])])]),_c('li',{attrs:{\"id\":\"u92609df4\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"13px\"}},[_vm._v(\" 0 <= k <= 10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgba(var(--grey-7-rgb),1)\",\"font-size\":\"12px\"}},[_vm._v(\" 5 \")])])])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"FHxMd\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucb4cd583\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5f999755\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u13e6f7f7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [1,2,3,1], k = 3 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uda772353\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueb160759\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [1,0,1,1], k = 1 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueed98c9f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf94d1141\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums = [1,2,3,1,2,3], k = 2 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u795dab5b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22d81690\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】这是力扣的第219题，可以通过暴力解决，但效率比较低。以下引入滑动窗口的概念，只在长度为k的范围内进行查找，并且利用哈希表查找复杂度为O(1)的特点，加快查找的效率。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"okF7N\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.18\")]),_vm._v(\" 多重判断解决方案\"),_c('code',[_vm._v(\"class Solution {\\npublic:\\n    bool containsNearbyDuplicate(vector<int>& nums, int k) {\\n        unordered_set<int> s;\\n        for (int i = 0; i < nums.size(); i++) {\\n            if (i > k) {\\n                s.erase(nums[i - k - 1]);\\t\\t//删除超过距离k的元素\\n            }\\n            if (s.count(nums[i])) {\\t\\t\\t\\t//哈希查找\\n                return true;\\n            }\\n            s.emplace(nums[i]);\\t\\t\\t\\t\\t//添加新元素\\n        }\\n        return false;\\n    }\\n};\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u04b29c11\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 这是一个非常奇妙并且高效的解法。建立了一个 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" unordered_set \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对象，其中只保留 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" k \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 个元素，相当于一个 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 滑动窗口 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。当距离超过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" k \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时，将元素从窗口中删除，第12行将新元素添加到窗口中。第9行利用哈希O(1)的复杂度进行判断是否存在。如果存在则返回 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。整个算法的时间复杂度为O(n)。 \")])])]),_c('h3',{attrs:{\"id\":\"Yve1p\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T873 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"VQLtQ\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u53831e8d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u370e0693\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4a33de2a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud85d8824\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0e1dec2a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T873 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uff46b348\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 重点掌握利用unordered_set构建滑动窗口，理解哈希表查找复杂度为O(1)的特性，利用这一特性，可以代替数组的打表法，尤其对稀疏或非数值数据具有良好的效果。 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8f5d44b5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#bDkij\",\"href\":\"ch5#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u17992f24\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue6a7495a\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX821) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX801) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX814) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"wmBGH\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7.4 字典与循环的联动 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u737fec1f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 可以认为字典是一种下标为任意类型的特殊数组，因为字典可以遍历，因此可以和循环联动，简化书写。 \")])]),_c('h3',{attrs:{\"id\":\"uk7XO\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题8.12 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u87ca6add\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"702px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"Rgum2\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2e484c2a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1bd032ff\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucdda6aac\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf141ba48\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7bbbda00\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud28ab4c9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uba0eb1da\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufc02017f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf5f1cd77\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8539ee51\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9dcac37c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u422ea58c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf608460f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符 \")])])]),_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub9115e78\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数值 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u97bd0b36\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" I \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u527d1871\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u9127025c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" V \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u3bb44440\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u99dac573\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" X \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf1f2f62e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4ba41eb4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L \")])])]),_c('td',{attrs:{\"width\":\"49\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uae3d54ef\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 50 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub71da46b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C \")])])]),_c('td',{attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u9dc4b1ad\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 100 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7e6dd648\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" D \")])])]),_c('td',{attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u25b0fc4c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 500 \")])])]),_c('td',{staticStyle:{\"background-color\":\"#FBE4E7\"},attrs:{\"width\":\"50\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub8b578aa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" M \")])])]),_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5bd7d138\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1000 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u13c18298\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例如， 罗马数字2写做 II，即为两个并列的1。12写做XII，即为X+II。 27写做XXVII, 即为XX+V+II 。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1a9e3d3e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6e1370c4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud671d1c0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u17e3f52b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3e087e66\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个罗马数字，将其转换成整数。（ \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣13题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1c117b01\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【接口声明】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4683908e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int romanToInt(string s) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue8213a02\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【数据范围】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9963bd1b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 <= s.length <= 15 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u869e80b1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" s 仅含字符 ('I', 'V', 'X', 'L', 'C', 'D', 'M') \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u784590cc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue9349969\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"WupJh\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubaa833e6\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u35703c1a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6bdecd3e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" s = \\\"III\\\" \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6a70c6cb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u58b38927\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" s = \\\"LVIII\\\" \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubd2eeadc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 58 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4fe1ed38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" s = \\\"MCMXCIV\\\" \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud2dbb5db\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1994 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9c513ea9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】这是力扣的第13题，可以通过多重判断解决。但是书写比较复杂。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"rkpaa\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.19\")]),_vm._v(\" 多重判断解决方案\"),_c('code',[_vm._v(\"class Solution {\\npublic:\\n    int romanToInt(string s) {\\n        int sum=0;\\n        for(int i=0;i<s.size();++i){\\n            if(s[i]=='I'){\\n                if(s[i+1]=='V'){++i;sum+=4;}\\n                else if(s[i+1]=='X'){++i;sum+=9;}\\n                else sum++;\\n            }\\n            else if(s[i]=='X'){\\n                if(s[i+1]=='L'){++i;sum+=40;}\\n                else if(s[i+1]=='C'){++i;sum+=90;}\\n                else sum+=10;\\n            }\\n            else if(s[i]=='C'){\\n                if(s[i+1]=='D'){++i;sum+=400;}\\n                else if(s[i+1]=='M'){++i;sum+=900;}\\n                else sum+=100;\\n            }\\n            else if(s[i]=='V'){sum+=5;}\\n            else if(s[i]=='L'){sum+=50;}\\n            else if(s[i]=='D'){sum+=500;}\\n            else if(s[i]=='M'){sum+=1000;}\\n        }\\n        return sum;\\n    }\\n};\")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u44548aaa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 造成以上代码多重判断的复杂性根源在于键是一系列不规律的字符，可以将这些特殊键构造成字典，从而简化循环书写逻辑。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"T7yAG\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码8.20\")]),_vm._v(\" 字典解决方案\"),_c('code',[_vm._v(\"class Solution {\\npublic:\\n    int romanToInt(string s) {\\n        int sum=0;\\n        unordered_map<char,int> m1=\\\\{\\\\{'I',1},{'V',5},{'X',10},{'L',50},\\n        \\t\\t\\t\\t\\t\\t\\t{'C',100},{'D',500},{'M',1000}};\\n        unordered_map<string,int> m2=\\\\{\\\\{\\\"IV\\\",4},{\\\"IX\\\",9},{\\\"XL\\\",40},\\n        \\t\\t\\t\\t\\t\\t\\t{\\\"XC\\\",90},{\\\"CD\\\",400},{\\\"CM\\\",900}};\\n        for(int i=0;i<s.size();++i){\\n            if(m2.count(s.substr(i,2))) sum+=m2[s.substr(i++,2)];\\n            else sum+=m1[s[i]];\\n        }\\n        return sum;\\n    }\\n};\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ufe6e7f6c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 可以看到，代码得到了极大的简化，核心就是构造了两个字典，形成了键值的映射。 \")])]),_c('li',{attrs:{\"id\":\"u6a509bb9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第10行判断双字符键是否存在，如果存在则增加对应的值。特别注意i++，因为是双字符键，需要跨越两个字符，因此sum累加后，要将i增加1。 \")])]),_c('li',{attrs:{\"id\":\"u22c7438b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11行对单字符键进行累加操作。 \")])])]),_c('h3',{attrs:{\"id\":\"EnDgK\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习8.2 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"u9a66d153\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 仿照C++的定义对可能含有转义序列的字符串进行转换，输出转换后的结果。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 只需实现 \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" ： \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(231, 76, 60)\"}},[_vm._v(\" \\\\n \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(231, 76, 60)\"}},[_vm._v(\" \\\\t \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(231, 76, 60)\"}},[_vm._v(\" \\\\? \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(231, 76, 60)\"}},[_vm._v(\" \\\\' \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(231, 76, 60)\"}},[_vm._v(\" \\\\\\\" \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(231, 76, 60)\"}},[_vm._v(\" \\\\\\\\ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 即可。注意根据知识点 \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#W9YYd\",\"href\":\"ch2#W9YYd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T274 \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" ，当输入中有转义字符时，不会认为是转义字符，而会逐个字符处理。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"IylW4\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9a1dcdd\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u57ee1c4b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua0bdb428\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" new\\\\nline \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8a1d18dd\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" new \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22a820d4\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" line \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9eaea655\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" T\\\\tAB \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uecbee0c7\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" T AB \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubbbc3e11\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" \\\\?\\\\'\\\\\\\"\\\\\\\\ \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u046afcbf\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\",\"font-size\":\"12px\"}},[_vm._v(\" ?'\\\"\\\\ \")])])])])])]),_c('h3',{attrs:{\"id\":\"mu9UI\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T874 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"VCGJC\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u292cb2af\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua85aecbc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc62273f0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub22a0487\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uffaf4c1a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T874 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua9ee8cb3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握字典与循环联动的方法，理解字典在书写上类似特殊下标的数组 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1faa894e\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#WGgmO\",\"href\":\"ch5#WGgmO\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T522 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub3d25c13\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u27caa42c\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX815) \")])]),_c('span',{staticClass:\"ne-text\"})])]),_c('td',{attrs:{\"width\":\"70\"}}),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8a19d09d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 参考文献 \")])]),_c('ol',{staticClass:\"ne-ol\"},[_c('li',{attrs:{\"id\":\"ucabb1a90\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103\",\"href\":\"https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103 \")])])]),_c('li',{attrs:{\"id\":\"ua7a8bd0d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"http://c.biancheng.net/view/6803.html\",\"href\":\"http://c.biancheng.net/view/6803.html\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" http://c.biancheng.net/view/6803.html \")])])]),_c('li',{attrs:{\"id\":\"u8e1fff5b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://blog.csdn.net/ych9527/article/details/117324385\",\"href\":\"https://blog.csdn.net/ych9527/article/details/117324385\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" https://blog.csdn.net/ych9527/article/details/117324385 \")])])])]),_c('h1',{attrs:{\"id\":\"OEDhg\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题单 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"FANQT\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8e2681c3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 序号 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u97ce9857\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目名称 \")])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u63a0c2cb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点 \")])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3ad306a6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 序号 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4e859026\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目名称 \")])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue4694c05\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u15e91a5c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX801 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue6867b7d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一个出现两次的字母 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8686f3c1\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#bDkij\",\"href\":\"ch5#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#wG8i3\",\"href\":\"ch2#wG8i3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T242 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufff68c93\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX802 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udd036635\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161766\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161766\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 加一 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0c69e5c3\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#TSGz6\",\"href\":\"ch5#TSGz6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T549 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0591cb18\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX803 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udecf8a13\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161767\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161767\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 三个数的最大乘积 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u047289c9\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#pyYpq\",\"href\":\"ch5#pyYpq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uecefd206\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX804 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uefc5d0d5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 移动零 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc95b687f\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#kYcFw\",\"href\":\"#kYcFw\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T842 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#o8Kxq\",\"href\":\"ch5#o8Kxq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T524 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u18d734d8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX805 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ude098280\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161769\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161769\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 只出现一次的数字 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u57bd9664\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#panTK\",\"href\":\"ch2#panTK\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T26C \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u70ee49c3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX806 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud550f8e0\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 移除元素 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uec413efb\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#kYcFw\",\"href\":\"#kYcFw\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T842 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#o8Kxq\",\"href\":\"ch5#o8Kxq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T524 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3a537aba\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX807 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uea49a3d1\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161770\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161770\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 合并两个有序数组 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5fa58791\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#pyYpq\",\"href\":\"ch5#pyYpq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#L8fPI\",\"href\":\"ch5#L8fPI\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T528 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua936f615\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX808 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub80f4ea4\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161771\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161771\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 搜索插入位置 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua5467cd1\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#AE9qD\",\"href\":\"ch2#AE9qD\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T251 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u27585b6f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX809 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u22c8a90c\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161772\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161772\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和相等的子数组 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2e0767bd\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#jxNPL\",\"href\":\"#jxNPL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T872 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4a20dc91\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX810 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9cc23b50\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161773\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161773\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第三大的数 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7559d6ea\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#TFSS3\",\"href\":\"ch5#TFSS3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T515 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u261730c9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX811 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6f7f3976\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161775\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161775\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 学生分数的最小差值 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua73bb148\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#pyYpq\",\"href\":\"ch5#pyYpq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#TFSS3\",\"href\":\"ch5#TFSS3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T515 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u769cf93a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX812 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uff6e743d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161776\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161776\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 串联数组 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udc32ef04\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#zTfai\",\"href\":\"ch5#zTfai\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T542 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7cd6df3e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX813 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua5204a90\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161777\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161777\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 删除某些元素后的数组均值 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc5039c42\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#pyYpq\",\"href\":\"ch5#pyYpq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u812a1ddb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX814 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u946c0bcf\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 丢失的数字 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6b2e8efc\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#bDkij\",\"href\":\"ch5#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Yve1p\",\"href\":\"#Yve1p\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T873 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc6a915c9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX815 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7e18bf6b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 罗马数字转整数 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2c91f959\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#mu9UI\",\"href\":\"#mu9UI\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T874 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u10138cc3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX816 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub130c7aa\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161780\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161780\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 主要元素 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue480f942\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#jxNPL\",\"href\":\"#jxNPL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T872 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0477cf72\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX817 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueeb4d70a\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161781\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161781\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 判断能否形成等差数列 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua714c028\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#pyYpq\",\"href\":\"ch5#pyYpq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u20c2a107\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX818 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u14e28ab5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 棒球比赛 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ube88e950\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#BlTTv\",\"href\":\"#BlTTv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T841 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud22ea8bb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX819 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u44e470cc\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 存在连续三个奇数的数组 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5a3fe690\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#z5syf\",\"href\":\"#z5syf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T862 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u96689abd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX820 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uaff7fbea\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161784\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161784\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 重新排列数组 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u08544e3a\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"ch#AE9qD\",\"href\":\"ch2#AE9qD\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T251 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8e7daa8a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX821 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u90fbc2da\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 存在重复元素II \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2e68871b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Yve1p\",\"href\":\"#Yve1p\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T873 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u70fb75f4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX822 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u930fe2ae\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 存在重复元素 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u40f3e4c5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#jxNPL\",\"href\":\"#jxNPL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T872 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"66\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc256348f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX823 \")])])]),_c('td',{attrs:{\"width\":\"202\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0097c855\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有效的括号 \")])])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u95ea3a91\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#BlTTv\",\"href\":\"#BlTTv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T841 \")])])])]),_c('td',{attrs:{\"width\":\"65\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud7b34d94\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX824 \")])])]),_c('td',{attrs:{\"width\":\"109\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub94f5b50\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 两数之和 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8c9240e9\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#jxNPL\",\"href\":\"#jxNPL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T862 \")])])])])])])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <h1 style=\"text-align:center\">\r\n 第八章 模板和容器\r\n</h1>\r\n<div class=\"lake-content\" typography=\"classic\">\r\n <h1 id=\"hai4M\">\r\n  <span class=\"ne-text\">\r\n   1. 泛型编程\r\n  </span>\r\n </h1>\r\n <p class=\"ne-p\" id=\"u88d7dbb7\" style=\"text-align: justify; text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(0, 0, 0); font-size: 16px\">\r\n   泛型编程指在书写代码时，不考虑具体数据类型，而模板是泛型编程的基础。C++中的泛型编程主要分为模板函数和模板类。\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   面向对象和泛型编程的目的就是提升复用性，\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(0, 0, 0); font-size: 16px\">\r\n   C++的\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   标准模板库（Standard Template\r\n            Library，STL）\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(0, 0, 0); font-size: 16px\">\r\n   提供了\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   大体分为六大组件，分别是：容器、算法、迭代器、仿函数、适配器（配接器）、空间配置器\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(0, 0, 0); font-size: 16px\">\r\n   。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"fx1sM\" style=\"width: 600px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"98\">\r\n     <p class=\"ne-p\" id=\"u1c17859f\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       容器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"502\">\r\n     <p class=\"ne-p\" id=\"ud5189aeb\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       各种数据结构，如vector、list、deque、set、map等,用来存放数据。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"98\">\r\n     <p class=\"ne-p\" id=\"u41863121\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       算法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"502\">\r\n     <p class=\"ne-p\" id=\"ub0af2466\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       各种常用的算法，如sort、find、copy、for_each等。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"98\">\r\n     <p class=\"ne-p\" id=\"u00d5f0f9\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       迭代器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"502\">\r\n     <p class=\"ne-p\" id=\"u7464e424\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       扮演了容器与算法之间的胶合剂。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"98\">\r\n     <p class=\"ne-p\" id=\"ud8ff3924\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       仿函数\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"502\">\r\n     <p class=\"ne-p\" id=\"ued6f78c6\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       行为类似函数，可作为算法的某种策略。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"98\">\r\n     <p class=\"ne-p\" id=\"u1d1606a2\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       适配器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"502\">\r\n     <p class=\"ne-p\" id=\"u80c1c37f\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       用来修饰容器或者仿函数或迭代器接口。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"98\">\r\n     <p class=\"ne-p\" id=\"u85328bfe\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       空间配置器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"502\">\r\n     <p class=\"ne-p\" id=\"ub0b77536\">\r\n      <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n       负责空间的配置与管理。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"twuaD\">\r\n  <span class=\"ne-text\">\r\n   1.1 模板函数\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"udce3d890\" style=\"text-align: justify; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   模板函数提供一个抽象的函数，并不具体指定其中数据的类型，而是某个虚拟类型代替。只提供基本的功能。其具体的数据类型，只在其被调用时视具体情况实例化。以下是一个具体样例：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"f8Yhz\"><span style=\"font-weight:bold;\">代码8.1</span> 最大值模板函数<code>#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\n\r\ntemplate &lt;typename T&gt;\t\t\t\t\t//模板函数声明与定义\r\nT const&amp; Max (T const&amp; a, T const&amp; b)\r\n{\r\n    return a &lt; b ? b:a;\r\n}\r\nint main ()\r\n{\r\n    int i = 39, j = 20;\r\n    cout &lt;&lt; \"Max(i, j): \" &lt;&lt; Max(i, j) &lt;&lt; endl;\r\n    double f1 = 13.5, f2 = 20.7;\r\n    cout &lt;&lt; \"Max(f1, f2): \" &lt;&lt; Max(f1, f2) &lt;&lt; endl;\r\n    string s1 = \"Hello\", s2 = \"World\";\r\n    cout &lt;&lt; \"Max(s1, s2): \" &lt;&lt; Max(s1, s2) &lt;&lt; endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"hnUwD\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub1709532\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uada2e8aa\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u64f29732\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u668ecdd4\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u8e197031\">\r\n      <span class=\"ne-text\">\r\n       Max(i, j): 39\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u58aad45a\">\r\n      <span class=\"ne-text\">\r\n       Max(i, j): 20.7\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u09356994\">\r\n      <span class=\"ne-text\">\r\n       Max(i, j): World\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u74b70b9d\">\r\n   <span class=\"ne-text\">\r\n    第5-9行定义了一个模板函数Max，实现了求两个数据最大值的操作；\r\n   </span>\r\n  </li>\r\n  <li id=\"u22eb9628\">\r\n   <span class=\"ne-text\">\r\n    第5行template表明以下定义的是一个模板，typename指明T是一个虚拟类型，在第13,15,17行Max被调用时，根据传入数据的具体类型被具体化为实际的类型。也可以把T理解为一个类型的占位符；\r\n   </span>\r\n  </li>\r\n  <li id=\"u9e1165ec\">\r\n   <span class=\"ne-text\">\r\n    第6行使用T定义了形参的类型和返回值的类型，const表示为常量，不可被修改；\r\n   </span>\r\n  </li>\r\n  <li id=\"u0277a1f8\">\r\n   <span class=\"ne-text\">\r\n    交换模板\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     swap\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的函数定义为：\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     template &lt;class T&gt; void swap(T&amp; a, T&amp; b)\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。可以看到，与目标函数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     Max\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的定义非常相似，只是因为要修改参数的值，没有加\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     const\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    常量约束。对于任意两个类型相同的变量，都可以调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     swap\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    模板函数进行交换。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u3032745d\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   虚拟类型可以有多个，以下是另外一个样例：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"usHtn\"><span style=\"font-weight:bold;\">代码8.2</span> 求和模板函数<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\ntemplate &lt;typename T1, typename T2&gt;\t//模板函数声明与定义\r\nT2 test(T1 tmp1, T2 tmp2) {\r\n    T2 tmp = tmp1 + tmp2;\r\n    return tmp;\r\n}\r\nint main(void) {\r\n    cout &lt;&lt; \"test(10,5)=\" &lt;&lt; test(10,5) &lt;&lt; endl;\r\n    cout &lt;&lt; \"test(5,'A')=\" &lt;&lt; test(5,'A') &lt;&lt; endl ;\r\n    cout &lt;&lt; \"test(10,5.5) =\" &lt;&lt; test(10,5.5) &lt;&lt; endl;\r\n    cout &lt;&lt; \"test(5.5,10) =\" &lt;&lt; test(5.5,10) &lt;&lt; endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"xxADp\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u76da1262\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uef556706\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u703f1017\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u38d82f89\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u22cd6ec7\">\r\n      <span class=\"ne-text\">\r\n       test(10,5)=15\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua4c8fe56\">\r\n      <span class=\"ne-text\">\r\n       test(5,'A')=F\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2cd27cd4\">\r\n      <span class=\"ne-text\">\r\n       test(10,5.5) =15.5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u73533be3\">\r\n      <span class=\"ne-text\">\r\n       test(5.5,10) =15\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u1e4cb3ac\">\r\n   <span class=\"ne-text\">\r\n    因为返回类型为T2，因此第10行的结果为字符类型，第11行结果为浮点类型，第12行结果被取整。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"e79I0\">\r\n  <span class=\"ne-text\">\r\n   知识点：T811\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"eFJhg\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u56ce1ed6\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"538\">\r\n     <p class=\"ne-p\" id=\"u2c41a7c2\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ud4559b13\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u02fb6a76\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ud9c6bf16\">\r\n      <span class=\"ne-text\">\r\n       T811\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"538\">\r\n     <p class=\"ne-p\" id=\"u2ea69c53\">\r\n      <span class=\"ne-text\">\r\n       掌握模板函数，能够自定义简单的模板函数\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ud9d6361a\">\r\n      <a class=\"ne-link\" data-href=\"ch#panTK\" href=\"ch2#panTK\">\r\n       <span class=\"ne-text\">\r\n        T26B\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u3fe49083\">\r\n      <a class=\"ne-link\" data-href=\"#qwRMs\" href=\"#qwRMs\">\r\n       <span class=\"ne-text\">\r\n        T812\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"LutwA\">\r\n  <span class=\"ne-text\">\r\n   1.2 模板类*\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u4456e505\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   与模板函数类似，可以构建模板类，不指定具体数据类型。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"NQr53\"><span style=\"font-weight:bold;\">代码8.3</span> 模板类<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\ntemplate&lt;class type&gt; class Container {\r\nprivate:\r\n    type data;\r\npublic:\r\n    Container(type d) { this-&gt;data = d; }\r\n    type operator+(const Container&lt;type&gt;&amp; t){\r\n        return this-&gt;data + t.data;\r\n    }\r\n};\r\nint main() {\r\n    Container&lt;int&gt; ia(3), ib(5);\r\n    cout &lt;&lt; ia + ib &lt;&lt; endl;\r\n    Container&lt;string&gt; as(\"abc\"), bs(\"def\");\r\n    cout &lt;&lt; as + bs &lt;&lt; endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"DiolX\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf53ad80d\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc0823ac8\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ue1afd547\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u57595848\">\r\n      <span class=\"ne-text\">\r\n       8\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u0fad1ad6\">\r\n      <span class=\"ne-text\">\r\n       15\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u433a9a03\">\r\n   <span class=\"ne-text\">\r\n    第3行定义了一个模板类，在第13行调用时，将数据类型指定的为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     int\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，第15行调用时，数据类型指定为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     string\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。具体执行时，就会显示不同的类型的具体操作，见第14行和第16行的输出结果。\r\n   </span>\r\n  </li>\r\n  <li id=\"u0f235f97\">\r\n   <span class=\"ne-text\">\r\n    在第4-11行类的具体定义中，与\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     data\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的数据类型关联时，都用指定的虚拟类型\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     type\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    代替。\r\n   </span>\r\n  </li>\r\n  <li id=\"uc1240df7\">\r\n   <span class=\"ne-text\">\r\n    在1.2中使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     class\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    指定虚拟类型，而在1.1中使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     typename\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    指定虚拟类型，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     class\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    和\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     typename\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    在指定模板的虚拟类型时，是完全相同的。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"qwRMs\">\r\n  <span class=\"ne-text\">\r\n   知识点：T812\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"Yllmf\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ub7589410\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"538\">\r\n     <p class=\"ne-p\" id=\"ub55df1f0\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uf32ee5ca\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uf2a4db28\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uda76e410\">\r\n      <span class=\"ne-text\">\r\n       T812\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"538\">\r\n     <p class=\"ne-p\" id=\"ube37ae85\">\r\n      <span class=\"ne-text\">\r\n       理解模板类，会用模板类执行基本操作。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ucf2029ac\">\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#e79I0\" href=\"ch8#e79I0\">\r\n       <span class=\"ne-text\">\r\n        T811\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u7b6fd344\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"x7JiO\">\r\n  <span class=\"ne-text\">\r\n   2. STL容器\r\n  </span>\r\n </h1>\r\n <p class=\"ne-p\" id=\"u8f43e238\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   参考文档链接：\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://cplusplus.com/reference/stl/\" href=\"https://cplusplus.com/reference/stl/\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    https://cplusplus.com/reference/stl/\r\n   </span>\r\n  </a>\r\n </p>\r\n <p class=\"ne-p\" id=\"udaebc3a6\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   STL容器就是将运用最广泛的一些数据结构实现出来，常用的数据结构：数组,\r\n            链表,树, 栈, 队列, 集合, 映射表 等。这些容器分为序列式容器和关联式容器两种。C++11新加入4种容器，主要结构采用哈希函数，因此也称为无序容器。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uda37c2d1\" style=\"text-indent: 2em; margin-left: 2em; text-align: justify\">\r\n  <span class=\"ne-text\">\r\n   表8.1 STL容器种类\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"BQDA3\" style=\"width: 753px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"ue485a413\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       容器种类\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"645\">\r\n     <p class=\"ne-p\" id=\"uac7a3c82\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       功能\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"108\">\r\n     <p class=\"ne-p\" id=\"u1b183c7d\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       序列容器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"645\">\r\n     <p class=\"ne-p\" id=\"u1060f7ca\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       主要包括 vector 向量容器、list 列表容器以及 deque\r\n                            双端队列容器。之所以被称为序列容器，是因为元素在容器中的位置同元素的值无关，即容器不是排序的。将元素插入容器时，指定在什么位置，元素就会位于什么位置。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"108\">\r\n     <p class=\"ne-p\" id=\"udb235111\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       关联式容器（排序容器）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"645\">\r\n     <p class=\"ne-p\" id=\"u8ce4a594\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       包括 set 集合容器、multiset多重集合容器、map映射容器以及\r\n                            multimap 多重映射容器。排序容器中的元素默认是由小到大排序好的，即便是插入元素，元素也会插入到适当位置。所以关联容器在查找时具有非常好的性能。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"108\">\r\n     <p class=\"ne-p\" id=\"ub1cc14d0\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       哈希容器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u3a348a69\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       （无序容器）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"645\">\r\n     <p class=\"ne-p\" id=\"ue89b5ccd\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       分别是 unordered_set 哈希集合、unordered_multiset\r\n                            哈希多重集合、unordered_map 哈希映射以及 unordered_multimap\r\n                            哈希多重映射。和排序容器不同，哈希容器中的元素是未排序的，元素的位置由哈希函数确定。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"woi9U\">\r\n  <span class=\"ne-text\">\r\n   2.1 容器的分类\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u5bf217fc\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    序列容器：\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"ube76f63b\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   所谓序列容器，即以线性排列（类似普通数组的存储方式）来存储某一指定类型（例如\r\n            int、double\r\n            等）的数据，每个元素均有固定的位置。需要特殊说明的是，该类容器并不会自动对存储的元素按照值的大小进行排序。需要注意，序列容器只是一类容器的统称，并不指具体的某个容器。序列容器大致包含以下几类容器，其对应的头文件与容器名相同。前三种容器可以进行随机访问，意味着底层存储结构为数组，存储空间连续；后面三种容器不可以随机访问，意味着每个节点都是独立存储，在空间上不具有连续性。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1de86c77\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   表8.2 序列容器\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"C8aZn\" style=\"width: 756px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"u7e501b9a\">\r\n      <span class=\"ne-text\" style=\"font-size: 14px\">\r\n       容器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"u44b19196\">\r\n      <span class=\"ne-text\">\r\n       描述\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"u419482d1\">\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       增加或删除元素\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"uf63975da\">\r\n      <span class=\"ne-text\">\r\n       随机访问\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"u3b6eaedb\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       数组容器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua75c7a74\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       array&lt;T,N&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"u91f3fdc9\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       表示可以存储 N 个 T 类型的元素，是\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"http://c.biancheng.net/cplus/\" href=\"http://c.biancheng.net/cplus/\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        C++\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       本身提供的一种容器。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"u3fc3b074\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       长度固定，不能增加或删除元素\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"ub3b3f993\">\r\n      <span class=\"ne-text\">\r\n       Y\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"u247140e2\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       向量容器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u3519a885\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       vector&lt;T&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"ua7fa52b6\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       长度可变，即在存储空间不足时，会自动申请更多的内存。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"u3d143d96\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       尾部增删效率O(1)\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u815ea9f8\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       其他位置增删效率O(n)\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"ue53db899\">\r\n      <span class=\"ne-text\">\r\n       Y\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"u1b0b94ce\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       双端队列容器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u9f473518\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       deque&lt;T&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"u87c79e04\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       和 vector 相似，头部和尾部插入和删除元素都非常高效。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"u79829722\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       头部尾部增删效率O(1)\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2eaa0daa\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       其他位置增删效率O(n)\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"ud93a3a09\">\r\n      <span class=\"ne-text\">\r\n       Y\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"uae0000fa\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       链表容器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u1792c506\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       list&lt;T&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"u619b5f61\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       长度可变，由 T 类型元素组成的序列，以双向链表形式组织元素\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"ue6253ea6\">\r\n      <span class=\"ne-text\">\r\n       任意位置增删效率O(1)\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"uae987944\">\r\n      <span class=\"ne-text\">\r\n       N\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"u54b45609\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       正向链表容器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u4377b343\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       forward_list&lt;T&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"ud9428c36\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       以单链表的形式组织元素，它内部的元素只能从第一个元素开始访问，比链表容器快、更节省内存。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"u8db8a2f2\">\r\n      <span class=\"ne-text\">\r\n       任意位置增删效率O(1)\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"uc1c906a4\">\r\n      <span class=\"ne-text\">\r\n       N\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"uf301a83b\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       堆栈\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u343d84ac\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       stack&lt;T&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"ub372b29d\">\r\n      <span class=\"ne-text\">\r\n       在deque&lt;T&gt;的基础上形成，只能在尾部进行增加删除，实现先进后出\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"ub0928928\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       尾部增删效率O(1)\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub124f6fd\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       其他位置不能增删\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"udf4c3335\">\r\n      <span class=\"ne-text\">\r\n       N\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"130\">\r\n     <p class=\"ne-p\" id=\"uc6a9f39c\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       单向队列\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u6e7f6397\">\r\n      <span class=\"ne-text\" style=\"color: rgb(0, 128, 0); font-size: 14px\">\r\n       queue&lt;T&gt;\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"330\">\r\n     <p class=\"ne-p\" id=\"u33c06797\">\r\n      <span class=\"ne-text\">\r\n       在deque&lt;T&gt;的基础上形成，只能在尾部新增，头部弹出，实现先进先出\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"216\">\r\n     <p class=\"ne-p\" id=\"u65a06606\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       尾部增加效率O(1)，头部弹出效率O(1)，其他位置不能增删\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"80\">\r\n     <p class=\"ne-p\" id=\"u86cab139\">\r\n      <span class=\"ne-text\">\r\n       N\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u24db5402\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    关联式容器：\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue22ff3e9\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   关联式容器底层采用二叉树结构，更确切的说是红黑树结构，各元素之间没有严格的物理顺序关系。与序列容器不同，关联式容器在存储元素值的同时，还会为各元素额外再配备一个值（又称为“键”，其本质也是一个\r\n            C++\r\n            基础数据类型或自定义类型的元素），它的功能是在使用关联式容器的过程中，如果已知目标元素的键的值，则直接通过该键就可以找到目标元素，而无需再通过遍历整个容器的方式。关联式容器可以快速查找、读取或者删除所存储的元素，同时该类型容器插入元素的效率也比序列式容器高。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4728f068\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   也就是说，使用关联式容器存储的元素，都是“键值对”（\r\n            &lt;key,value&gt; ），这是和序列式容器最大的不同。除此之外，序列式容器中存储的元素默认都是未经过排序的，而使用关联式容器存储的元素，默认会根据各元素的键值的大小做升序排序。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u10088f9a\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   表8.3 关联式容器\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"w1Snf\" style=\"width: 744px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"122\">\r\n     <p class=\"ne-p\" id=\"u6d937590\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       关联式容器名称\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"622\">\r\n     <p class=\"ne-p\" id=\"u689baef3\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       特点\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"122\">\r\n     <p class=\"ne-p\" id=\"u03610cee\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       map\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"622\">\r\n     <p class=\"ne-p\" id=\"u73d95f72\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       定义在 &lt;map&gt;\r\n                            头文件中，使用该容器存储的数据，其各个元素的键必须是唯一的（即不能重复），该容器会根据各元素键的大小，默认进行升序排序（调用 std::less&lt;T&gt;）。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"122\">\r\n     <p class=\"ne-p\" id=\"ue17aa354\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       set\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"622\">\r\n     <p class=\"ne-p\" id=\"u9dde3e32\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       定义在 &lt;set&gt;\r\n                            头文件中，使用该容器存储的数据，各个元素键和值完全相同，且各个元素的值不能重复（保证了各元素键的唯一性）。该容器会自动根据各个元素的键（其实也就是元素值）的大小进行升序排序（调用\r\n                            std::less&lt;T&gt;）。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"122\">\r\n     <p class=\"ne-p\" id=\"ud99c44a2\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       multimap\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"622\">\r\n     <p class=\"ne-p\" id=\"ua4de79f5\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       定义在 &lt;map&gt; 头文件中，和 map\r\n                            容器唯一的不同在于，multimap 容器中存储元素的键可以重复。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"122\">\r\n     <p class=\"ne-p\" id=\"u22e1bf33\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       multiset\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"622\">\r\n     <p class=\"ne-p\" id=\"u36e8b6ef\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       定义在 &lt;set&gt; 头文件中，和 set\r\n                            容器唯一的不同在于，multiset 容器中存储元素的值可以重复（一旦值重复，则意味着键也是重复的）。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u26a95070\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    无序容器：\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0c04f977\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   无序容器只是一类容器的统称，仅是在前面提到的 4\r\n            种关联式容器名称的基础上，添加了\r\n            \"unordered_\"。关联式容器会对存储的键值进行排序，但是无序容器不会。如果涉及大量遍历容器的操作，建议首选关联式容器；反之，如果更多的操作是通过键获取对应的值，则应首选无序容器。因为无序容器底层采用hash结构，其随机获取键值对的性能为常量级，即O(1)。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ufa3f2d9f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   表8.4 无序容器\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"DrdE7\" style=\"width: 754px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"166\">\r\n     <p class=\"ne-p\" id=\"u9157a888\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       无序容器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"588\">\r\n     <p class=\"ne-p\" id=\"u10900812\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       功能\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"166\">\r\n     <p class=\"ne-p\" id=\"u093823a9\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       unordered_map\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"588\">\r\n     <p class=\"ne-p\" id=\"u359868f5\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       存储键值对 &lt;key, value&gt;\r\n                            类型的元素，其中各个键值对键的值不允许重复，且该容器中存储的键值对是无序的。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"166\">\r\n     <p class=\"ne-p\" id=\"u34149751\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       unordered_multimap\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"588\">\r\n     <p class=\"ne-p\" id=\"udb2241e6\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       和 unordered_map\r\n                            唯一的区别在于，该容器允许存储多个键相同的键值对。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"166\">\r\n     <p class=\"ne-p\" id=\"ufe579de8\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       unordered_set\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"588\">\r\n     <p class=\"ne-p\" id=\"ud9eff5ec\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       不再以键值对的形式存储数据，而是直接存储数据元素本身（当然也可以理解为，该容器存储的全部都是键\r\n                            key 和值 value 相等的键值对，正因为它们相等，因此只存储 value 即可）。另外，该容器存储的元素不能重复，且容器内部存储的元素也是无序的。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"166\">\r\n     <p class=\"ne-p\" id=\"u1aca7a02\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       unordered_multiset\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"588\">\r\n     <p class=\"ne-p\" id=\"ud1eb1656\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       和 unordered_set\r\n                            唯一的区别在于，该容器允许存储值相同的元素。\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"Y0XZc\">\r\n  <span class=\"ne-text\">\r\n   知识点：T821\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"hjl5u\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ua7e4b6a0\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u6925104c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u7bd55a69\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uf50417a5\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u2cbe880c\">\r\n      <span class=\"ne-text\">\r\n       T821\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua90c705e\">\r\n      <span class=\"ne-text\">\r\n       了解STL容器的分类\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u273a53a2\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u1201e6fb\">\r\n      <a class=\"ne-link\" data-href=\"#BPKTU\" href=\"#BPKTU\">\r\n       <span class=\"ne-text\">\r\n        T823\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"LQGUv\">\r\n  <span class=\"ne-text\">\r\n   2.2 迭代器\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u291e3c76\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   如前所述，不同容器内部结构各不相同，但它们都是用于存储大量数据。因此也都需要对数据进行大量的遍历操作。为了满足排序、查找、求和等通用算法的需求，需要将遍历操作与具体的存储结构分离开，因此就产生了迭代器。迭代器隐藏了不同存储结构的内部差异，具备对容器进行遍历读写数据的能力。迭代器是\r\n            C++ 程序中常用的一种设计模式，它最重要的作用是为访问容器提供了统一的接口。\r\n   <br/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   迭代器的底层实际就是一个指针，通过迭代器可以指向容器中的某个元素。\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    *迭代器名\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   就表示迭代器指向的元素。通过非常量迭代器还能修改其指向的元素。但很多迭代器对指针进行了封装，其功能与原生指针相比受一定限制，不同容器的迭代器功能强弱程度也有所不同。主要分为前向迭代器、双向迭代器和随机访问迭代器。\r\n  </span>\r\n </p>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u18084171\">\r\n   <span class=\"ne-text\">\r\n    前向迭代器的功能被所有类型迭代器兼容，包括++操作，即一次前向移动一个位置；复制或赋值；还可以用 == 和 !=\r\n                运算符进行比较。C++中采用begin()指向首元素，用end()指向尾后元素，即最后一个有效元素后面的元素。\r\n   </span>\r\n  </li>\r\n  <li id=\"uc3e83706\">\r\n   <span class=\"ne-text\">\r\n    双向迭代器比正向迭代器多支持一个\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     --\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    操作，即一次后向移动一个位置。\r\n   </span>\r\n  </li>\r\n  <li id=\"u18a42b7c\">\r\n   <span class=\"ne-text\">\r\n    随机访问迭代器支持的功能最多，除了以上提到的功能，它还支持加上任意偏移量并得到新的迭代器；通过下标形式访问元素；用\r\n                &lt;、&gt;、&lt;=、&gt;= 运算符进行比较；另外，两个迭代器的减法操作表示二者所指向元素的序号之差。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"udfcecb69\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   表8.5 各容器支持的迭代器类型\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"KLd8C\" style=\"width: 750px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub3e70387\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       容器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: rgb(237, 237, 237)\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u64ece421\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       对应的迭代器类型\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uefbecc30\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       array\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u8264d89d\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u7a3056bd\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       随机访问迭代器\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ube0f2e2f\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       vector\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf835d85a\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       deque\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u449e7240\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       list\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"uaa2ed112\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u779e29f9\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       双向迭代器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"udab2670e\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"udfbbc933\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       set / multiset\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9d5b659f\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       map / multimap\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u56a3cfc3\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       forward_list\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"3\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u914484fb\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u561764a1\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       前向迭代器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u5ca057ef\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u61dfb781\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       unordered_map / unordered_multimap\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"udd9fd883\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       unordered_set / unordered_multiset\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1816b1d0\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       stack\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"2\" width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5c2938b4\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       不支持迭代器\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u734449ab\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5f15b61f\">\r\n      <span class=\"ne-text\" style=\"color: rgb(68, 68, 68); font-size: 14px\">\r\n       queue\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u46fc7f04\">\r\n   <span class=\"ne-text\">\r\n    array,\r\n                vector和deque由于其存储的顺序性，可以将所有的指针存在在一个数组中，因此可以采用随机访问迭代器，其实就是具备了数组的通过偏移访问元素的能力，同时也就具备了指针间的减法操作和大小比较等功能；\r\n   </span>\r\n  </li>\r\n  <li id=\"u4e81046b\">\r\n   <span class=\"ne-text\">\r\n    list, set和map等容器的元素存储不具有顺序性，因此只能通过迭代方式进行访问，所以是双向迭代器；\r\n   </span>\r\n  </li>\r\n  <li id=\"u6848773e\">\r\n   <span class=\"ne-text\">\r\n    forward_list顾名思义，通过封装限制了反向遍历的能力，是为了保障特定算法的实现；哈希容器也支持了前向指针，单向迭代访问各个元素，无法通过偏移实现跳跃访问。\r\n   </span>\r\n  </li>\r\n  <li id=\"u0d21d333\">\r\n   <span class=\"ne-text\">\r\n    stack的先进后出和queue的先进先出机制，只能访问栈顶或队列头部的元素，不允许出现遍历操作，因此不能支持迭代器，否则会破坏其固有的机制。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u594ce644\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   迭代器从本质上就是一个指针，但是根据不同容器的特点，采用类封装的方式，对功能进行了限制。随机访问迭代器支持底层结构为数组的容器，借助数组空间连续分配，可以随机访问的特性，因此功能最全面。而双向迭代器和前向迭代器所支持的容器，每个元素的存储空间是不连续的，在一个元素中，通过指针间接访问下一个元素，因此只能依次遍历。也是因为其空间不连续性，因此迭代器的值和元素的顺序没有关系，不具有大小关系，也就是说，不能采用小于尾结点的方式进行终止判断，只能采用不等于尾结点的方式。这些功能都是通过类封装（知识点：\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"ch#dNdcQ\" href=\"ch7#dNdcQ\">\r\n   <span class=\"ne-text\">\r\n    T751\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）和函数重载（知识点：\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"ch#WLtg1\" href=\"ch7#WLtg1\">\r\n   <span class=\"ne-text\">\r\n    T771\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）实现的。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5c8b3dae\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   要特别注意，迭代器可能存在失效问题。失效的本质就是迭代器底层对应指针所指向的空间被销毁了，而使用一块被释放的空间会造成程序崩溃。任何底层空间改变的操作，都有可能导致迭代器失效，比如：resize,\r\n            reserve, insert, erase, assign,\r\n            push_back等。换句话说，这些操作都有可能导致容器空间的重新分配，因此原来的迭代器就会失效。解决的方式是在执行以上操作后，需要对迭代器进行重新赋值。\r\n  </span>\r\n </p>\r\n <h3 id=\"BPKTU\">\r\n  <span class=\"ne-text\">\r\n   知识点：T822-T825\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"R2bkO\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u9e33fae3\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u5b48a073\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u31619472\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u2701646e\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u396f0f1b\">\r\n      <span class=\"ne-text\">\r\n       T822\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u66e4e40d\">\r\n      <span class=\"ne-text\">\r\n       迭代器是容器访问的主要方式，其本质就是通过类封装进行功能限定的指针\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"ue160ad2d\">\r\n      <a class=\"ne-link\" data-href=\"ch#VjX61\" href=\"ch7#VjX61\">\r\n       <span class=\"ne-text\">\r\n        T791\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u8a532aa1\">\r\n      <a class=\"ne-link\" data-href=\"#i9a97\" href=\"#i9a97\">\r\n       <span class=\"ne-text\">\r\n        T831\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u83c253d8\">\r\n      <span class=\"ne-text\">\r\n       T823\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uc4717747\">\r\n      <span class=\"ne-text\">\r\n       能够清晰掌握不同类型迭代器和不同类型容器直接的对应关系，并理解造成这些异同的原因\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"ud84d1b76\">\r\n      <a class=\"ne-link\" data-href=\"ch#IS3uW\" href=\"ch6#IS3uW\">\r\n       <span class=\"ne-text\">\r\n        T621\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#Y0XZc\" href=\"#Y0XZc\">\r\n       <span class=\"ne-text\">\r\n        T821\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u4359b417\">\r\n      <span class=\"ne-text\">\r\n       T824\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ufaecc25c\">\r\n      <span class=\"ne-text\">\r\n       双向迭代器和前向迭代器只能逐个遍历元素，终止判断只能采用\r\n      </span>\r\n      <code class=\"ne-code\">\r\n       <span class=\"ne-text\">\r\n        !=\r\n       </span>\r\n      </code>\r\n      <span class=\"ne-text\">\r\n       运算\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u0b9684fe\">\r\n      <span class=\"ne-text\">\r\n       T825\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u9fa46516\">\r\n      <span class=\"ne-text\">\r\n       resize, reserve, insert, erase, assign,\r\n                            push_back等底层空间操作都会造成空间重新分配，进而导致迭代器的失效，因此要对迭代器进行重新赋值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u437518a1\">\r\n      <a class=\"ne-link\" data-href=\"ch#zTfai\" href=\"ch5#zTfai\">\r\n       <span class=\"ne-text\">\r\n        T542\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"nCV7z\">\r\n  <span class=\"ne-text\">\r\n   3. 向量vector\r\n  </span>\r\n </h1>\r\n <p class=\"ne-p\" id=\"u86d3da24\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   STL中提供了模板数组array，用于优化原生数组的使用。与原生数组相比，模板数组更安全、更便利，这主要是因为array是一个类，通过重载操作符和一些访问控制函数，满足了更多的需求。例如在进行随机范围时，除了重载操作符[]通过下标访问之外，还提供了函数at进行下标访问，at在进行访问时会进行越界判断，使访问操作更加安全；此外，array还重载了赋值运算符和关系判断运算符，达成了原始数组无法达到的整体赋值和整体比较。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8c13e110\" style=\"text-indent: 2em\">\r\n  <img class=\"ne-image\" id=\"u3a19ce7d\" src=\"../assets/images/1676860900025-3f218d18-c64d-4f81-991e-bd2c6cb266e8.png\" width=\"334\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5c6a85e5\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   图8.1 模板数组array示例\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8d2c9050\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   数组的空间大小是固定的，很难按需申请，会造成空间的浪费。即使采用动态数组，当数据增长超过预留空间上限时，也需要重新全部申请空间。STL提供了向量vector类型，由头文件&lt;vector&gt;引入，其工作方式与数组类似，但是容量可以根据需要自动伸缩。与模板类array比较，vector更加灵活，但array的执行效率更高。在绝大部分情况下，vector和array的效率差可以被忽略，因此在需要使用array的场合，完全可以使用vector代替，array很少被使用。\r\n  </span>\r\n </p>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"u974ef82a\">\r\n   <span class=\"ne-text\">\r\n    vector在进行扩展时，并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间。\r\n   </span>\r\n  </p>\r\n </div>\r\n <p class=\"ne-p\" id=\"u0a1552f7\" style=\"text-indent: 2em\">\r\n  <img class=\"ne-image\" id=\"u085b3598\" src=\"../assets/images/1676860934880-d997877f-83fb-4d5c-9afc-4fd160ade211.png\" width=\"399.3333333333333\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"ude89ae9a\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   图8.2 向量vector示例\r\n  </span>\r\n </p>\r\n <h2 id=\"yhhga\">\r\n  <span class=\"ne-text\">\r\n   3.1 遍历\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ub6498a60\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   以下的遍历方式适用于所有使用随机访问迭代器的容器，例如：vector,\r\n            string等。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"rj8l8\"><span style=\"font-weight:bold;\">代码8.4</span> vector的遍历方式<code>#include &lt;iostream&gt;\r\n#include &lt;vector&gt; //需要引入 vector 头文件\r\nusing namespace std;\r\nint main()\r\n{\r\n    vector&lt;int&gt; v1(4);\t\t\t\t\t\t\t//创建长度为4的vector\r\n    for (size_t i = 0; i &lt; v1.size(); i++)      //设定 values 容器为 {0,1,2,3}\r\n        v1.at(i) = i;\r\n    auto v2 = v1;\r\n    v2[2] = 1;\r\n    if (!v1.empty()) {      //如果容器不为空，则输出容器中所有的元素\r\n        for (auto it = v1.begin(); it &lt; v1.end(); it++)\r\n            cout &lt;&lt; *it &lt;&lt; \" \";\r\n    }\r\n    cout &lt;&lt; endl;\r\n    for(auto e:v2)\r\n        cout &lt;&lt; e &lt;&lt; \" \";\r\n    cout &lt;&lt; endl;\r\n    for (auto it = v1.rbegin(); it &lt; v1.rend(); it++) //使用反向迭代器遍历容器\r\n        cout &lt;&lt; *it &lt;&lt; \" \";\r\n    cout &lt;&lt; endl &lt;&lt; boolalpha;\r\n    cout &lt;&lt; (v1 == v2) &lt;&lt; '\\t' &lt;&lt; (v1 != v2)&lt;&lt; endl;\r\n    cout &lt;&lt; (v1 &gt; v2) &lt;&lt; '\\t' &lt;&lt; (v1 &lt; v2)&lt;&lt; endl;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"gq20e\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u62d6f17a\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc128d1b6\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u27bf0ed7\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u519b979d\">\r\n      <span class=\"ne-text\">\r\n       0 1 2 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2eab4be0\">\r\n      <span class=\"ne-text\">\r\n       0 1 1 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u9629f86f\">\r\n      <span class=\"ne-text\">\r\n       3 2 1 0\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ufbf0eba9\">\r\n      <span class=\"ne-text\">\r\n       false true\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uca18f638\">\r\n      <span class=\"ne-text\">\r\n       true false\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"udfe2f923\">\r\n   <span class=\"ne-text\">\r\n    第6行定义了一个\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     vector\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    容器，长度为4，初始化为全0。默认初始化为0的操作是原生数组不具备的。\r\n   </span>\r\n  </li>\r\n  <li id=\"u77f7879b\">\r\n   <span class=\"ne-text\">\r\n    第7行用传统的下标形式访问\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     vector\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    容器，注意这里下标数据类型为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     size_t\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，它在64位系统中为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     long unsigned int\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    （占用8字节的内存空间），在需要通过数组下标来访问数组时，通常建议将下标定义\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     size_t\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    类型。\r\n   </span>\r\n  </li>\r\n  <li id=\"u62458d4f\">\r\n   <span class=\"ne-text\">\r\n    第8行使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     at\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数进行下标访问，与\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     v1[i]=i;\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    功能相同，但是\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     at()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数进行下标越界判定，更加安全。第10行采用了操作符\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    形式访问元素。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"ub7a33a23\">\r\n   <span class=\"ne-text\">\r\n    虽然at()函数更加安全，但是毕竟有代价消耗。对于能确保访问不发生越界的情况，使用操作符\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    效率更高。\r\n   </span>\r\n  </p>\r\n </div>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uf7357c98\">\r\n   <span class=\"ne-text\">\r\n    第9行实现了数组的整体赋值，这是原生数组无法完成的。\r\n   </span>\r\n  </li>\r\n  <li id=\"u1957a8fb\">\r\n   <span class=\"ne-text\">\r\n    第11行用判定容器是否为空，它与\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     v1.size()==0\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    功能相同，但\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     empty()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数的效率更高，优先使用。\r\n   </span>\r\n  </li>\r\n  <li id=\"u53f11a8a\">\r\n   <span class=\"ne-text\">\r\n    第12-13行用迭代器的方式遍历容器。由于每种容器的遍历方式都不相同，但是迭代器可以封装遍历过程，统一了遍历操作，进一步可以将容器和算法进行粘合。变量it就是一个迭代器，设定为auto类型，根据begin()函数的返回值自动设定为迭代器类型。begin()返回第一个元素的指针，end()返回最后一个元素的下一个指针，注意不是最后一个元素的指针，因此迭代器构建了一个左闭右开的区间，即包括begin()指向的元素，但是不包括end()指向的元素。因为迭代器返回的是指针，所以第13行用迭代器访问元素时用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     *\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    获取对应位置的值。vector采用随机访问迭代器，可以使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ++\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    或\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     --\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    操作进行前向或后向遍历。\r\n   </span>\r\n  </li>\r\n  <li id=\"ude93f63b\">\r\n   <span class=\"ne-text\">\r\n    第16-17行展示了遍历容器的第三种方式。\r\n   </span>\r\n  </li>\r\n  <li id=\"u6372c6b7\">\r\n   <span class=\"ne-text\">\r\n    第19-20行通过反向迭代器从尾部向头部依次遍历所有元素，注意反向迭代器中\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ++\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    表示向前移动。begin()和end()表示正向迭代，rbegin()和rend()表示反向迭代，cbegin(),cend()，crbegin()和crend()表示迭代的元素是const，不可修改。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"ue3c60208\">\r\n  <img class=\"ne-image\" id=\"cVOJg\" src=\"../assets/images/1660379324357-53fff7a7-d418-409d-b996-c6d80365c924.gif\" width=\"821\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u60a3a522\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图8.3 正向迭代器和反向迭代器\r\n  </span>\r\n </p>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u83685be1\">\r\n   <span class=\"ne-text\">\r\n    第21行的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     boolalpha\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    是为了让下面两行的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     bool\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    类型输出结果显示\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true/false\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，而不是1/0。\r\n   </span>\r\n  </li>\r\n  <li id=\"u234982b2\">\r\n   <span class=\"ne-text\">\r\n    第22-23行验证了\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     vector\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    容器可以进行整体比较。比较采用字典序，从第0个元素开始比较，如果对应元素相等，进行下一个位置元素的比较，如果不相等，两个对应元素的大小关系就直接作为两个容器的大小关系。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"uefecb6bf\">\r\n   <span class=\"ne-text\">\r\n    STL的容器在很多操作上都是统一的，因此以上代码中的很多部分都可以使用到其他容器上。\r\n   </span>\r\n  </p>\r\n  <p class=\"ne-p\" id=\"u396caae7\">\r\n   <span class=\"ne-text\">\r\n    string类型原始的获取长度函数为length()，就是为了和STL的其他容器兼容，因此添加了完全相同功能的size()函数，确保string类型也能采用STL的算法完成。\r\n   </span>\r\n  </p>\r\n  <p class=\"ne-p\" id=\"u2626e18b\">\r\n   <span class=\"ne-text\">\r\n    在实际使用时，array很少被使用，常用vector代替，因为vector和array性能相近，而且更加灵活。\r\n   </span>\r\n  </p>\r\n </div>\r\n <h3 id=\"i9a97\">\r\n  <span class=\"ne-text\">\r\n   知识点：T831\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"UFYdm\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u1f76ad26\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u4b93bb61\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u24030393\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u00adba13\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u1a8b9c84\">\r\n      <span class=\"ne-text\">\r\n       T831\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u8565cfd5\">\r\n      <span class=\"ne-text\">\r\n       掌握容器遍历的方式，empty是最高效的容器判定为空的方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u1bc8d401\">\r\n      <a class=\"ne-link\" data-href=\"#BPKTU\" href=\"#BPKTU\">\r\n       <span class=\"ne-text\">\r\n        T822\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u29662a11\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u8054633a\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        （LX822）\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"L4SnJ\">\r\n  <span class=\"ne-text\">\r\n   3.2 vector的典型操作\r\n  </span>\r\n </h2>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"YOftZ\"><span style=\"font-weight:bold;\">代码8.5</span> vector基本操作<code>#include&lt;iostream&gt;\r\n#include&lt;vector&gt;\r\n#include&lt;algorithm&gt;                  //for_each和copy\r\n#include&lt;iterator&gt;                   //ostream_iterator\r\nusing namespace std;\r\nint main()\r\n{\r\n    vector&lt;char&gt; v;                  //初始化一个空vector容量\r\n    string s = \"LTSA\";\r\n    for(auto e:string(\"LTSA\")) v.emplace_back(e);     //或 v.assign(s.begin(), s.end());\r\n    cout &lt;&lt; v.size() &lt;&lt; endl;       //容器中的元素个数\r\n    v.pop_back();\r\n    for (auto it = v.rbegin(); it &lt; v.rend(); it++) //使用反向迭代器遍历容器\r\n        cout &lt;&lt; *it &lt;&lt; \" \";\r\n    cout &lt;&lt; endl;\r\n    cout &lt;&lt; v.at(0) &lt;&lt;'\\t'&lt;&lt;v.front()&lt;&lt;'\\t'&lt;&lt;v.back()&lt;&lt; endl;\r\n    v.emplace(v.begin()+1, 'C');    //在距离首元素偏移为1的位置插入新字符，也可以使用insert\r\n    for_each(v.begin(), v.end(), [](auto &amp;elem) { cout &lt;&lt; elem &lt;&lt; ' '; });\r\n    cout &lt;&lt; endl;\r\n    v.erase(v.begin() + 2);          //删除距离首元素偏移为2的元素\r\n    copy(v.begin(), v.end(), ostream_iterator&lt;char&gt;(cout, \" \"));\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"WOlbO\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u34542709\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ufbdab275\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uedb0837d\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9ccf4971\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u3a26c57d\">\r\n      <span class=\"ne-text\">\r\n       S T L\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u8f3f3c23\">\r\n      <span class=\"ne-text\">\r\n       L L S\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u588bfc69\">\r\n      <span class=\"ne-text\">\r\n       L C T S\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u128188f8\">\r\n      <span class=\"ne-text\">\r\n       L C S\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u5c0e2315\">\r\n   <span class=\"ne-text\">\r\n    第8行构建了一个向量vector容器，第10行依次将4个字符插入到容器的尾部，也可以采用assign的方式，直接将字符串转换为vector。第12行从尾部移除一个元素。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"u2df35d69\">\r\n   <span class=\"ne-text\">\r\n    注意这里使用string类型，如果直接使用字符串“LTSA”，是C风格字符串，该字符串以字符'\\0'结尾，将会是5个字符。string类型不存在字符'\\0'。\r\n   </span>\r\n  </p>\r\n </div>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u1a197366\">\r\n   <span class=\"ne-text\">\r\n    第16行通过at(0)或front()函数访问首元素，用back()访问尾元素。\r\n   </span>\r\n  </li>\r\n  <li id=\"ue27c6d54\">\r\n   <span class=\"ne-text\">\r\n    第17行在距离首元素偏移为1的位置插入新字符，第20行删除距离首元素偏移为2的元素。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2eb48b10\">\r\n   <span class=\"ne-text\">\r\n    第18行调用了算法for_each，它包含在头文件&lt;algorithm&gt;中，原型为for_each(iter1,iter2,op)，iter1和iter2指定了迭代器的开始和结束范围，op是一个函数，其作用是将迭代器中遍历的每个元素作为参数输入并进行处理。第18行中的op是一个匿名函数，将每个元素进行输出。当需要对一个容器某个区域的所有元素做相同的函数处理时，就可以使用for_each函数完成。\r\n   </span>\r\n  </li>\r\n  <li id=\"uabfae266\">\r\n   <span class=\"ne-text\">\r\n    第20行调用erase函数删除指定位置上的字符，它还有一个函数原型\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     iterator erase (const_iterator first, const_iterator last)\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，用于删除指定范围内的所有字符。在头文件&lt;algorithm&gt;中，还有一个删除函数remove，用于删除指定范围内特定的字符。需要特别说明的是，erase在删除后容器的长度会发生改变，但remove只是逻辑删除，容器的长度不变。\r\n   </span>\r\n  </li>\r\n  <li id=\"u01ef6567\">\r\n   <span class=\"ne-text\">\r\n    第21行使用了输出流迭代器ostream_iterator，它包含在头文件&lt;iterator&gt;中，第一个参数指定输出流，第二个参数指定分隔符，第21行指定的分隔符是空格。\r\n   </span>\r\n  </li>\r\n  <li id=\"u86972236\">\r\n   <span class=\"ne-text\">\r\n    第21行调用了算法copy，它的前两个参数指出被复制的元素的区间范围，第三个参数指出复制到的目标区间起始位置。当需要将一个容器的某个区域的元素复制到另外一个容器的指定区域时，即可以调用copy函数完成。第21行将v从begin()到end()的所有元素复制到标准输出流cout构建的迭代器中，并且以空格分隔，这样就将全部元素显示出来。\r\n   </span>\r\n  </li>\r\n  <li id=\"u9ec88147\">\r\n   <span class=\"ne-text\">\r\n    第17行的emplace可以替换为insert，第10行的emplace_back可以替换为push_back。emplace方法是C++11新提出来的用法。无论是insert还是push_back都是先创建对象，再将对象移动到指定位置，而emplace方法直接在指定位置创建对象，因此效率较高。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"eOdZZ\">\r\n  <span class=\"ne-text\">\r\n   随堂练习8.1\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u16e1a9de\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   输入一个超大的正整数n，n≤10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    30\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ，将n逐位保存到一个整型vector中。\r\n  </span>\r\n </p>\r\n <h3 id=\"ucMFa\">\r\n  <span class=\"ne-text\">\r\n   知识点：T832\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"SAeZj\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue758a52b\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ud00aa365\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u8edff308\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uf9e62442\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uc2b3fcdc\">\r\n      <span class=\"ne-text\">\r\n       T832\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uceb41216\">\r\n      <span class=\"ne-text\">\r\n       掌握向量vector的典型操作，这是STL中最常用的容器\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ue3d93adc\">\r\n      <a class=\"ne-link\" data-href=\"#eRcMx\" href=\"#eRcMx\">\r\n       <span class=\"ne-text\">\r\n        T541\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ueefab684\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"HhNID\">\r\n  <span class=\"ne-text\">\r\n   3.3 查找重复元素\r\n  </span>\r\n </h2>\r\n <h3 id=\"MIQlr\">\r\n  <span class=\"ne-text\">\r\n   例题 8.1\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u18adb985\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n   找出数组中重复的数字。在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1\r\n            的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   （剑指offer）\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"mqC2X\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u904c55e3\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ucc6302cc\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ufd8d0139\">\r\n      <span class=\"ne-text\">\r\n       6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u1af45c75\">\r\n      <span class=\"ne-text\">\r\n       2 5 4 5 3 4\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua5a72bf4\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"ue542babf\">\r\n  <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n   【题目解析】可以\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   sort排序后，遍历数组，前面的值和后面的值相等即为答案。排序的时间复杂度为O(nLog\r\n  </span>\r\n  <sub>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sub>\r\n  <span class=\"ne-text\">\r\n   n)。可以采用打表法，将时间复杂度降为O(n)。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"O5y2f\"><span style=\"font-weight:bold;\">代码8.6</span> 查找重复元素<code>#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\nusing namespace std;\r\nclass Solution {\r\npublic:\r\n    int findRepeatNumber(vector&lt;int&gt;&amp; nums) {\r\n        vector&lt;int&gt; ret(nums.size(),0);\r\n        for(auto e:nums)\r\n        {\r\n            if(ret[e]!=0)  return e;\r\n            ret[e]++;\r\n        }\r\n        return 0;\r\n    }\r\n};\r\n\r\nint main ()\r\n{\r\n    Solution s;\r\n    size_t n;\r\n    cin &gt;&gt; n;\r\n    vector&lt;int&gt; nums(n);\r\n    for (size_t i = 0;i&lt;n;++i){\r\n        cin &gt;&gt; nums[i];\r\n    }\r\n    cout &lt;&lt; s.findRepeatNumber(nums) &lt;&lt; endl;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ubdf2ecc8\">\r\n   <span class=\"ne-text\">\r\n    题目中保证输入的每个数字都小于n，因此第7行建立了一个vector，用来记录每个数出现的次数。初始化长度与nums相同，初始值全部为0。与原始数组相比，vector可以将初始值设定为任意值。由这个题目可以看出，vector的使用比原始数组更方便，掌握STL后，完全可以用vector代替原始数组。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2f251f97\">\r\n   <span class=\"ne-text\">\r\n    第22行初始化时，使用小括号定义长度为n，这是在调用vector的构造函数。注意这里不能使用中括号，使用时要区分与原始数组的机理不同。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"cOtOt\">\r\n  <span class=\"ne-text\">\r\n   知识点：T833\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"J7YEh\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u33154f86\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"527\">\r\n     <p class=\"ne-p\" id=\"u2db718e0\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"102\">\r\n     <p class=\"ne-p\" id=\"ua13ef823\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uad8cc17e\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"ua37d119c\">\r\n      <span class=\"ne-text\">\r\n       T833\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"527\">\r\n     <p class=\"ne-p\" id=\"u3a61bb19\">\r\n      <span class=\"ne-text\">\r\n       掌握使用vector代替原生数组，理解vector比原生数组的易用性\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"102\">\r\n     <p class=\"ne-p\" id=\"u52663764\">\r\n      <a class=\"ne-link\" data-href=\"ch#bDkij\" href=\"ch5#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u1f3a15c2\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u481ada2d\">\r\n\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX801)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX814)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"EZsP7\">\r\n  <span class=\"ne-text\">\r\n   4. 高级应用\r\n  </span>\r\n </h1>\r\n <p class=\"ne-p\" id=\"u31ed2a1f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   向量vector和字符串string是最常见的两种容器，结合迭代器和算法，可以形成一些非常方便的应用。\r\n  </span>\r\n </p>\r\n <h2 id=\"NTR6E\">\r\n  <span class=\"ne-text\">\r\n   4.1 降序排序\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ud4490176\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   sort函数默认是采用升序排序，第五章提到可以将升序排序的结果调用reverse函数，形成降序。结合迭代器或仿函数，可以直接进行降序排序。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"Gwiaa\"><span style=\"font-weight:bold;\">代码8.7</span> 降序排序<code>#include&lt;iostream&gt;\r\n#include&lt;vector&gt;\r\n#include&lt;algorithm&gt;\r\nusing namespace std;\r\n\r\nint main ()\r\n{\r\n   size_t n;\r\n    cin&gt;&gt;n;\r\n    vector&lt;int&gt; nums(n);\r\n    for (size_t i = 0;i&lt;n;++i){\r\n        cin&gt;&gt;nums[i];\r\n    }\r\n    sort(nums.rbegin(),nums.rend());//或sort(nums.begin(),nums.end(),greater&lt;int&gt;());\r\n    for (size_t i = 0;i&lt;n;++i){\r\n        cout&lt;&lt;nums[i]&lt;&lt;' ';\r\n    }\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"co9iT\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u064ad3d4\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u3268b6f8\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u82b5756f\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u80d6868c\">\r\n      <span class=\"ne-text\">\r\n       3 5 1 7\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u10e4d70d\">\r\n      <span class=\"ne-text\">\r\n       7 5 3 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u850147da\">\r\n   <span class=\"ne-text\">\r\n    排序时采用反向迭代器，利用rbegin和rend两个函数，其中的大小比较与前向迭代正好相反，因此可以形成逆序效果。\r\n   </span>\r\n  </li>\r\n  <li id=\"u62418745\">\r\n   <span class=\"ne-text\">\r\n    第14行注释的结果，是将仿函数greater作为比较器，大的元素在前，因此也可以达到降序的目的。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"j6bkK\">\r\n  <span class=\"ne-text\">\r\n   知识点：T841\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"SKHj5\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u39c64533\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u3735b40c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u4dc602f5\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u2444ed3f\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u66666496\">\r\n      <span class=\"ne-text\">\r\n       T841\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u4b44cf70\">\r\n      <span class=\"ne-text\">\r\n       掌握逆序排序的方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uca2a7998\">\r\n      <a class=\"ne-link\" data-href=\"#i9a97\" href=\"#i9a97\">\r\n       <span class=\"ne-text\">\r\n        T831\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u0b40e6ec\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"ua90bb163\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX823)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX818)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"j8VkO\">\r\n  <span class=\"ne-text\">\r\n   4.2 全部删除指定元素\r\n  </span>\r\n </h2>\r\n <h3 id=\"LNdNn\">\r\n  <span class=\"ne-text\">\r\n   例题8.2\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u4e589748\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   据说2011年11月11日是百年光棍节。这个日期写成字符串是“20111111”，有6个1连续出现，小明把这样的字符串（有6个1连续出现，但可以在1之间有空格间隔）叫做光棍串，即“2011\r\n            11 11”也是光棍串。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u299d9e94\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uee00027f\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输入数据的第一行为一个正整数T，表示测试数据的组数。然后是T组测试数据，每组测试输入1个字符串S（其中只包含空格与数字字符，长度不超过50个字符）。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5c226690\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1309f09d\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   对于每组测试，若S是光棍串，则输出“Yes”，否则输出“No”。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"zLx5J\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u139627f2\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u536d75de\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"udaf31639\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u3a3309ac\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       2011111\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u75ad4352\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       2011 11 11\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ued08d11f\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       No\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u73b4434e\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       Yes\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"uda35951e\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uee65dfbd\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   简单分析题目，就是在字符串中查找是否存在6个1的子串，通过find就可以完成。题目的难度在于可能存在干扰的空格。将所有的空格去除掉，题目就变得简单了。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"wWC0E\"><span style=\"font-weight:bold;\">代码8.8</span> 删除所有空格<code>#include &lt;iostream&gt;\r\n#include &lt;bits/stdc++.h&gt;\r\n\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n;\r\n    cin &gt;&gt; n;\r\n    cin.ignore();\r\n    string s;\r\n    while(n--){\r\n        getline(cin,s);   \r\n        auto it = remove(s.begin(),s.end(),' ');\r\n        s.resize(it-s.begin());\r\n        //s.erase(remove(s.begin(),s.end(),' '),s.end());\r\n        size_t pos = s.find(\"111111\");\r\n        cout&lt;&lt;(pos==-1?\"No\":\"Yes\")&lt;&lt;endl;\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ued4b0f61\">\r\n   <span class=\"ne-text\">\r\n    函数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     remove\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的前两个参数指定删除范围，第三个参数为希望删除的字符。特别注意它的返回值，是一个迭代器，指向所有保留元素后的下一个位置。\r\n   </span>\r\n  </li>\r\n  <li id=\"u122c05c3\">\r\n   <span class=\"ne-text\">\r\n    第13行调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     remove\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    后，返回第一个无效字符位置。用这个位置减去\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     begin\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，就得到了有效字符的长度。第14行\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     resize\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    只保留有效字符，达到了删除的目的。\r\n   </span>\r\n  </li>\r\n  <li id=\"u02c472f3\">\r\n   <span class=\"ne-text\">\r\n    同样道理，第15行将无效部分删除，也达到了目的，函数嵌套的写法请仔细观察。其中\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     erase\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的第一个参数不是函数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     remove\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，而是函数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     remove\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的返回值。\r\n   </span>\r\n  </li>\r\n  <li id=\"ub882d033\">\r\n   <span class=\"ne-text\">\r\n    如果不是删除无效元素，而是将无效元素全部置为空格，可以采用如下语句\r\n   </span>\r\n  </li>\r\n </ul>\r\n <ul class=\"ne-list-wrap\">\r\n  <ul class=\"ne-ul\" ne-level=\"1\">\r\n   <li id=\"u661e32a5\">\r\n    <code class=\"ne-code\">\r\n     <span class=\"ne-text\">\r\n      fill(remove(s.begin(),s.end(),' '),s.end(),' ');\r\n     </span>\r\n    </code>\r\n   </li>\r\n  </ul>\r\n </ul>\r\n <h3 id=\"kYcFw\">\r\n  <span class=\"ne-text\">\r\n   知识点：T842\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"j2rk9\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u2f36249e\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"udcf9683c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u11800f6b\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uca1718d2\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"udfb7a90d\">\r\n      <span class=\"ne-text\">\r\n       T842\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u5a2d513b\">\r\n      <span class=\"ne-text\">\r\n       掌握全部删除指定元素的方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u54a743f2\">\r\n      <a class=\"ne-link\" data-href=\"#eRcMx\" href=\"#eRcMx\">\r\n       <span class=\"ne-text\">\r\n        T541\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u3a1ae55b\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u488783d5\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX804)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX6)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"Hf7IG\">\r\n  <span class=\"ne-text\">\r\n   4.3 for_each算法*\r\n  </span>\r\n </h2>\r\n <h3 id=\"YRWmj\">\r\n  <span class=\"ne-text\">\r\n   例题8.3\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u0da74a38\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   要求编写程序，将英文字母替换加密。为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。例如，字母a-&gt;B、b-&gt;C、…、z-&gt;A、A-&gt;b、B-&gt;c、…、Z-&gt;a。输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"xaEal\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u2acfb77b\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9dc788fe\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u573a0665\">\r\n      <span class=\"ne-text\">\r\n       Reold Z123?\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u3509b3c6\">\r\n      <span class=\"ne-text\">\r\n       sFPME a123?\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u6d4d9827\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1bb31e1f\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   采用简单循环可以达成目标。使用&lt;algorithm&gt;库中\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n    for_each\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   算法，可以对容器中的每个元素做相同的处理。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"RYPog\"><span style=\"font-weight:bold;\">代码8.9</span> 英文字母加密<code>#include &lt;iostream&gt;\r\n#include &lt;algorithm&gt;\r\nusing namespace std;\r\n\r\nvoid encode(char&amp; ch)\r\n{\r\n    if(ch=='Z')\r\n        ch='a';\r\n    else if(ch=='z')\r\n        ch='A';\r\n    else if(islower(ch))\r\n        ch=char(toupper(ch)+1);\r\n    else if(isupper(ch))\r\n        ch=char(tolower(ch)+1);\r\n}\r\nint main()\r\n{\r\n    string s;\r\n    getline(cin,s);\r\n    for_each(s.begin(),s.end(),encode);\r\n    cout&lt;&lt;s;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u582fd26f\">\r\n   <span class=\"ne-text\">\r\n    第20行采用for_each函数，将容器指定范围内的所有元素都调用encode函数进行处理。为了得到处理后的结果，第5行的形参是采用引用形式。\r\n   </span>\r\n  </li>\r\n  <li id=\"uf11b9881\">\r\n   <span class=\"ne-text\">\r\n    这种把函数做为另一个函数参数的形式，是一种高级调用形式。本质上传递是函数的指针。sort的第三个参数比较函数，也是采用相同的方法。这样函数不仅能把数据进行抽象，还能把行为进行抽象。这种形式在Python等语言中非常常见。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"zKGII\">\r\n  <span class=\"ne-text\">\r\n   知识点：T843\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"CqS0A\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u0ea0aa47\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u4cd23e30\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ua9a0f337\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u38b29581\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uff731383\">\r\n      <span class=\"ne-text\">\r\n       T843\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ufb7814a4\">\r\n      <span class=\"ne-text\">\r\n       掌握for_each算法，了解把一个函数作为另外一个函数参数的形式\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u6e66b9f6\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u67a3a9db\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"bUYYy\">\r\n  <span class=\"ne-text\">\r\n   5. 堆栈stack\r\n  </span>\r\n </h1>\r\n <p class=\"ne-p\" id=\"u1298da54\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   堆栈stack是先进后出的数据结构，在程序设计时使用比较广泛。它只能在尾部添加或删除，其他位置的元素不能进行增删操作。栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为。与queue类似，只有简单的push(),\r\n            pop(), top(), empty(), size()对外接口。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud7e9b8ae\">\r\n  <img class=\"ne-image\" id=\"u87681a0a\" src=\"../assets/images/1676860982277-3344c2ac-537d-42f3-8a6f-af0a98ae300a.png\" width=\"324.65625\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u031b876a\">\r\n  <span class=\"ne-text\">\r\n   图8.4堆栈示例\r\n  </span>\r\n </p>\r\n <h3 id=\"AouR5\">\r\n  <span class=\"ne-text\">\r\n   例题8.4\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u412610b9\">\r\n  <span class=\"ne-text\">\r\n   给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s\r\n            ，判断字符串是否有效。有效字符串需满足：1）左括号必须用相同类型的右括号闭合。2）左括号必须以正确的顺序闭合。（\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    力扣20题\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"FKUat\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc73c7da1\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc00c42f7\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ue2d265d9\">\r\n      <span class=\"ne-text\">\r\n       ()[]{}\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u7f36c871\">\r\n      <span class=\"ne-text\">\r\n       true\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u328bcb94\">\r\n      <span class=\"ne-text\">\r\n       ([)]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud3e93eac\">\r\n      <span class=\"ne-text\">\r\n       false\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"yL9xc\"><span style=\"font-weight:bold;\">代码8.10</span> 判断括号是否匹配<code>#include &lt;iostream&gt;\r\n#include &lt;stack&gt;\r\nusing namespace std;\r\nclass Solution {\r\npublic:\r\n    bool isValid(string s) {\r\n        stack&lt;char&gt; st;\r\n        for(auto e:s){\r\n            if(e=='('||e=='['||e=='{')\r\n                st.push(e);\r\n            else if(!st.empty()&amp;&amp;abs(e-st.top())&lt;=2)\t//有效括号对的ASCII码值不超过2\r\n                st.pop();\r\n            else\r\n                return false;\r\n        }\r\n        return st.empty();      \t\t\t\t\t\t//左括号有残留\r\n   } \r\n};\r\nint main ()\r\n{\r\n    Solution s;\r\n    string str;\r\n    cin &gt;&gt; str;\r\n    cout &lt;&lt;boolalpha&lt;&lt; s.isValid(str) &lt;&lt; endl;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ub2d7521c\">\r\n   <span class=\"ne-text\">\r\n    遍历字符串，当遇到左括号时，将其压入堆栈。当遇到有括号时，堆栈的顶部应该正好与其匹配，如果不匹配或者堆栈为空，则括号序列错误。\r\n   </span>\r\n  </li>\r\n  <li id=\"uec71fa19\">\r\n   <span class=\"ne-text\">\r\n    当字符串遍历结束时，堆栈应该为空，否则意味着有残留的左括号未找到匹配的右括号。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"BlTTv\">\r\n  <span class=\"ne-text\">\r\n   知识点：T851\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"wFDUi\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u722579f9\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"515\">\r\n     <p class=\"ne-p\" id=\"u1d7d2709\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u982997cf\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ue3f43a27\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u8e6024b3\">\r\n      <span class=\"ne-text\">\r\n       T851\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"515\">\r\n     <p class=\"ne-p\" id=\"u02cdb11f\">\r\n      <span class=\"ne-text\">\r\n       掌握堆栈stack的用法，学会堆栈增删元素的特点，主要解决匹配问题\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u58834ca6\">\r\n      <a class=\"ne-link\" data-href=\"ch#wG8i3\" href=\"ch2#wG8i3\">\r\n       <span class=\"ne-text\">\r\n        T241\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#QAfJZ\" href=\"ch3#QAfJZ\">\r\n       <span class=\"ne-text\">\r\n        T341\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u47ff1fdb\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"YXtaV\">\r\n  <span class=\"ne-text\">\r\n   6. 其他典型序列容器*\r\n  </span>\r\n </h1>\r\n <h2 id=\"ZmQjd\">\r\n  <span class=\"ne-text\">\r\n   6.1 双向队列deque\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u76f31686\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   双向队列deque的绝大部分操作都与vector相同，但是可以在两端进行增删操作。vector对于头部的插入删除效率低，数据量越大，效率越低。deque相对而言，对头部的插入删除速度比vector快。vector访问元素时的速度会比deque快,这和两者内部实现有关。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7ca2e824\">\r\n  <img class=\"ne-image\" id=\"Gg63D\" src=\"../assets/images/1660388751603-9f34660c-c0cf-47ad-b0c6-b99415e2fc42.jpeg\" width=\"510\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"uf76789a2\" style=\"text-align: justify\">\r\n  <span class=\"ne-text\">\r\n   图8.5 双向队列示例\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7931f9ab\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   deque内部有个中控器，维护每段缓冲区中的内容，缓冲区中存放真实数据。中控器维护的是每个缓冲区的地址，使得使用deque时像一片连续的内存空间。deque支持随机访问。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u570b258d\">\r\n  <img class=\"ne-image\" id=\"u93de3889\" src=\"../assets/images/1660456972321-5a8dc67d-6587-4428-a5d3-a182eff2d7f2.jpeg\" width=\"486\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"ubce2ad6e\">\r\n  <span class=\"ne-text\">\r\n   图8.6 deque中控器和缓冲器\r\n  </span>\r\n </p>\r\n <h3 id=\"pW8UQ\">\r\n  <span class=\"ne-text\">\r\n   例题8.5\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ua53e8baf\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定一个整数数组\r\n            nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。返回滑动窗口中的最大值 。（\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://leetcode.cn/problems/sliding-window-maximum/\" href=\"https://leetcode.cn/problems/sliding-window-maximum/\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    力扣239题\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"Sv0pP\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub0942b10\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf681d8c5\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ue022313b\">\r\n      <span class=\"ne-text\">\r\n       nums = [1,3,-1,-3,5,3,6,7], k = 3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9917f270\">\r\n      <span class=\"ne-text\">\r\n       [3,3,5,5,6,7]\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"2\" width=\"750\">\r\n     <p class=\"ne-p\" id=\"uff3d8c95\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例解释\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"2\" width=\"750\">\r\n     <p class=\"ne-p\" id=\"uffb959f5\">\r\n      <span class=\"ne-text\">\r\n       滑动窗口的位置 最大值\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uad53568f\">\r\n      <span class=\"ne-text\">\r\n       [1 3 -1] -3 5 3 6 7 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua459e823\">\r\n      <span class=\"ne-text\">\r\n       1 [3 -1 -3] 5 3 6 7 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u440e6aa1\">\r\n      <span class=\"ne-text\">\r\n       1 3 [-1 -3 5] 3 6 7 5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u22090e76\">\r\n      <span class=\"ne-text\">\r\n       1 3 -1 [-3 5 3] 6 7 5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u7b53d836\">\r\n      <span class=\"ne-text\">\r\n       1 3 -1 -3 [5 3 6] 7 6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uc39dd709\">\r\n      <span class=\"ne-text\">\r\n       1 3 -1 -3 5 [3 6 7] 7\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"ua4d05753\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2d0aef08\">\r\n  <span class=\"ne-text\">\r\n   1）建立一个滑动窗口，将窗口内最大值的下标保存在窗口最前端，并忽略数组中滑动窗口范围内左侧的所有值，因为这些值在窗口继续滑动中不可能成为最大值。每次用O(1)的时间获取这个最大值。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u22d55bcd\">\r\n  <span class=\"ne-text\">\r\n   2）窗口中要保留下标，而不是具体的值，因为值会\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    失效\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   。用i表示当前元素下标，用sub表示窗口首部的下标，当i-sub&gt;=k时，sub就不再当前窗口之中了，移出队列。 这一步保证了窗口内的所有值都处于同一窗口。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua2d88d61\">\r\n  <span class=\"ne-text\">\r\n   3）当有新元素来的时候，如果新元素大于窗尾的值，则利用循环，将所有小于这个数的值pop出去，因为所有值都处于同一窗口，小于当前元素的值已经失效，这一步保证了窗口的值最大。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u85dd774f\">\r\n  <span class=\"ne-text\">\r\n   4）当滑动窗口装满时，才能计算最大值。 当 i+1&gt;=k时表示正好装满，在此之后才能开始计算。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"bkm5a\"><span style=\"font-weight:bold;\">代码8.11</span> 滑动窗口的最大值<code>class Solution {\r\npublic:\r\n    vector&lt;int&gt; maxSlidingWindow(vector&lt;int&gt;&amp; nums, size_t k) {\r\n        vector&lt;int&gt; ret;\r\n        deque&lt;int&gt; qe;\r\n        if(nums.empty())     return ret;\r\n        for(size_t i=0;i&lt;nums.size();i++) {\r\n            //新来的元素&gt;队列之中的元素，说明最大值发生了变化\r\n            while(!qe.empty()&amp;&amp;nums[i]&gt;=nums[qe.back()])\r\n                qe.pop_back();\r\n            //窗口之中保存的是下标\r\n            //i-qe.front()&gt;=k，说明这个元素不在窗口之中了\r\n            while(!qe.empty()&amp;&amp;i-qe.front()&gt;=k)\r\n                qe.pop_front();\r\n            qe.push_back(i);//将下标存入数组中，因为要比较元素是否\"过期\"\r\n            if(i+1&gt;=k)//经过的元素可以满足一个窗口了\r\n                ret.push_back(nums[qe.front()]);\r\n        }\r\n        return ret;\r\n    }\r\n};</code></pre>\r\n <h3 id=\"pyqMT\">\r\n  <span class=\"ne-text\">\r\n   知识点：T861\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"bF9cQ\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u9211d3a7\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u9a2df881\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u53f1b3d3\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u1b4216af\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ufab59e09\">\r\n      <span class=\"ne-text\">\r\n       T861\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua8704f4d\">\r\n      <span class=\"ne-text\">\r\n       掌握双向队列deque的用法，主要解决在算法中需要设定滑动窗口的问题\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ua3724efe\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u94122fca\">\r\n      <a class=\"ne-link\" data-href=\"#z5syf\" href=\"#z5syf\">\r\n       <span class=\"ne-text\">\r\n        T862\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"rzfqq\">\r\n  <span class=\"ne-text\">\r\n   6.2 单向队列queue\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u87b4029b\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   单向队列queue是在双向队列deque基础上完成的，如果只需要一端增加，另一端删除时，建议采用queue。队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为。只有简单的push(),\r\n            pop(), back(), front(), empty(), size()对外接口。如果没有特殊要求，也可以使用deque代替queue。\r\n  </span>\r\n </p>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"uf87d79eb\">\r\n   <span class=\"ne-text\">\r\n    注意queue的在尾部添加函数为push()，在头部删除函为pop()，因为它只有一个push和一个pop操作，这与deque需要区分头部和尾部不同。\r\n   </span>\r\n  </p>\r\n </div>\r\n <p class=\"ne-p\" id=\"ua2e73846\">\r\n  <img class=\"ne-image\" id=\"cDom5\" src=\"../assets/images/1660388854927-9c3e4482-5f3c-46c6-b3ff-a1bd5515c5eb.jpeg\" width=\"431\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8a9fd237\">\r\n  <span class=\"ne-text\">\r\n   图8.7 单向队列示例\r\n  </span>\r\n </p>\r\n <h3 id=\"aE9F5\">\r\n  <span class=\"ne-text\">\r\n   例题8.6\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u20f80c90\">\r\n  <span class=\"ne-text\">\r\n   给定一个字符串 s ，请你找出其中不含有重复字符的最长子串的长度。（\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/\" href=\"https://leetcode.cn/problems/longest-substring-without-repeating-characters/\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    力扣3题\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"SMJSc\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u6bbe8379\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u2bfa6ead\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u04b582c8\">\r\n      <span class=\"ne-text\">\r\n       akgekwelkrjlkjfkasdfashdfkladfald\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u84b0eda8\">\r\n      <span class=\"ne-text\">\r\n       7\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"ub71c15fd\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】给定一个滑动窗口和标记数组，利用标记数组确定字符是否在窗口中出现过。如果字符没有出现过则添加到滑动窗口之中；如果出现了，则将已出现的字符左侧的所有字符移出滑动窗口。重复这个过程，记录能找到的滑动窗口的最大长度。从样例输入中可以看到，ashdfkl是最长不包含重复字符的子字符串。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"HGNXE\"><span style=\"font-weight:bold;\">代码8.12</span> 不含有重复字符的最长子串的长度<code>class Solution {\r\npublic:\r\n    int lengthOfLongestSubstring(string s) {\r\n        queue&lt;char&gt;de;//滑动窗口\r\n        vector&lt;bool&gt; arr(200,false);      //统计数组\r\n        size_t maxsize=0;                       //记录最长的长度\r\n        for(size_t i=0;i&lt;s.size();i++){\r\n            if(arr[s[i]]){                      //表示不是第一次出现    \r\n                maxsize=max(maxsize,de.size()); //先将最长的长度保存下来\r\n                while(arr[s[i]]){               //不为false说明还有重复字符\r\n                    arr[de.front()]=false;      //标记数组对应的字符为清除状态\r\n                    de.pop();     \t\t\t\t//删掉\r\n                }\r\n            }\r\n            //此时说明删掉了开始部分重复的字符串，或新出现的字符没有出现过，直接进入滑动窗口\r\n            de.push(s[i]);\r\n            arr[s[i]]=true;                  \t//标记数组，表示出现过\r\n        }\r\n        maxsize=max(maxsize,de.size());\r\n        return maxsize;\r\n    }\r\n};</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u5ac9f736\">\r\n   <span class=\"ne-text\">\r\n    第10-13行的循环，将滑动窗口中已存在的重复字符的左侧的所有字符移出滑动窗口。从滑动窗口构建的队列的队首开始移除，移除后第10行的循环重新开始判断，是否存在重复，如果存在重复则继续移除，直到全部移除，开始添加新的字符。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"z5syf\">\r\n  <span class=\"ne-text\">\r\n   知识点：T862\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"MWt2X\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ufbbbcbc8\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua9768a5e\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u81a58afc\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u77869162\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"uf772a23c\">\r\n      <span class=\"ne-text\">\r\n       T862\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uab7afb96\">\r\n      <span class=\"ne-text\">\r\n       掌握单向队列deque的用法，主要解决在算法中需要设定滑动窗口的问题\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ue3cf9958\">\r\n      <a class=\"ne-link\" data-href=\"#pyqMT\" href=\"#pyqMT\">\r\n       <span class=\"ne-text\">\r\n        T861\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u506509d6\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u63aba985\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX819)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX824)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"agupy\">\r\n  <span class=\"ne-text\">\r\n   6.3 链表list\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u66ea456c\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   链表list是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现。由一系列结点组成。每个节点包含两个域：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。STL中的链表是一个双向循环链表，正向链表容器forward_list是单向链表，只能从前向后访问。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2a82027b\">\r\n  <img class=\"ne-image\" id=\"udfd1e15a\" src=\"../assets/images/1660388907957-654add39-4d5b-42fc-9234-bb417537b693.jpeg\" width=\"554\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"ube1165bf\">\r\n  <span class=\"ne-text\">\r\n   图8.8 链表示例\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4520fa57\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   由于链表的存储方式并不是连续的内存空间，因此链表list中的迭代器只支持前移和后移，属于双向迭代器。优点：1）采用动态存储分配，不会造成内存浪费和溢出；2）链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素。缺点：1）链表灵活，但是空间(指针域)\r\n            和 时间（遍历）额外耗费较大；2）List有一个重要的性质，插入操作和删除操作都不会造成原有list迭代器的失效，这在vector是不成立的。\r\n  </span>\r\n </p>\r\n <h3 id=\"MwRYt\">\r\n  <span class=\"ne-text\">\r\n   例题8.7\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u70a786ce\" style=\"text-indent: 2em\">\r\n  <em>\r\n   <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n    n\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   个人围成一圈，从第一个人开始报数,数到 m 的人出列，再由下一个人重新从1开始报数，数到\r\n            m\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   的人再出圈，依次类推，直到所有的人都出圈，请输出依次出圈人的编号。（洛谷\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://www.luogu.com.cn/problem/P1996\" href=\"https://www.luogu.com.cn/problem/P1996\" target=\"_blank\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    P1996\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   ）\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8293c9e9\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uff57374a\">\r\n  <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   输入两个整数\r\n            n,m。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u41674062\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uade24e05\">\r\n  <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   输出一行\r\n            n\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\" style=\"color: rgba(0, 0, 0, 0.75); font-size: 16px\">\r\n   个整数，按顺序输出每个出圈人的编号。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"wzBsD\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ucfe8da39\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u44e6169e\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u01b5d555\">\r\n      <span class=\"ne-text\">\r\n       10 3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1b63a23c\">\r\n      <span class=\"ne-text\">\r\n       3 6 9 2 7 1 8 5 10 4\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u8ce5d390\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua6d97770\">\r\n  <span class=\"ne-text\">\r\n   最重要的是形成一个环，然后能在任意位置形成高效的删除操作。list正好符合这样的要求。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"AJH9V\"><span style=\"font-weight:bold;\">代码8.13</span> 约瑟夫环问题<code>#include&lt;iostream&gt;\r\n#include&lt;list&gt;\r\nusing namespace std;\r\nint main(){\r\n    int m,n;\r\n    cin&gt;&gt;m&gt;&gt;n;\r\n    list&lt;int&gt; ls;\r\n    for(int i=0;i&lt;m;i++)\r\n        ls.push_back(i+1);\t\t\t//构建初始的list\r\n    auto it=ls.begin();\r\n    int i=0;\r\n    while(!ls.empty()){\r\n        i = (i+1)%n;\r\n        auto next=++it;\t\t\t\t//备份下一个节点的迭代器\r\n        if(!i) {\r\n            cout&lt;&lt;*(--it)&lt;&lt;' ';\t\t//返回要删除的节点并输出\r\n            ls.erase(it);\t\t\t//删除节点，迭代器it失效\r\n        }\r\n        it = next;\t\t\t\t\t//返回到下一个节点\r\n        if(it==ls.end())\t\t\t//形成循环访问\r\n            it=ls.begin();\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u4920e578\">\r\n   <span class=\"ne-text\">\r\n    第13行以n为循环进行叠加，第15行判断找到符合要求的数据，则进行删除。\r\n   </span>\r\n  </li>\r\n  <li id=\"u9fc9cf8a\">\r\n   <span class=\"ne-text\">\r\n    特别注意在第14行对it进行了备份，因为一旦在第17行执行了删除操作，将会造成迭代器\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     it\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的失效，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     it\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    不再具有遍历能力。\r\n   </span>\r\n  </li>\r\n  <li id=\"u8a245559\">\r\n   <span class=\"ne-text\">\r\n    第14行不能写成\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     next=it+1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，因为list不支持随机访问迭代器，即不支持偏移功能，只支持++操作。因此在第14行进行++，找到下一个节点，然后在第16行执行--操作，回到要删除的节点。\r\n   </span>\r\n  </li>\r\n  <li id=\"u89fc2125\">\r\n   <span class=\"ne-text\">\r\n    第14行与第19行配合，相当与执行了++操作，然后在第20-21行，判定如果执行到了尾部，重新回到头部，形成循环访问。\r\n   </span>\r\n  </li>\r\n  <li id=\"u77a52821\">\r\n   <span class=\"ne-text\">\r\n    这是一个典型的list访问案例，展示了list的遍历和删除节点操作，同时要特别注意迭代器失效问题。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"GquqL\">\r\n  <span class=\"ne-text\">\r\n   例题8.8\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u0d9a3ccc\">\r\n  <span class=\"ne-text\">\r\n   写一个程序完成以下命令：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc930f91b\">\r\n  <span class=\"ne-text\">\r\n   new id ——新建一个指定编号为id的序列(id&lt;10000)\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u00a6e292\">\r\n  <span class=\"ne-text\">\r\n   add id num——向编号为id的序列加入整数num\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u124f645c\">\r\n  <span class=\"ne-text\">\r\n   merge id1 id2——合并序列id1和id2中的数，并将id2清空\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u33058aa0\">\r\n  <span class=\"ne-text\">\r\n   unique id——去掉序列id中重复的元素\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1b073dcf\">\r\n  <span class=\"ne-text\">\r\n   out id ——从小到大输出编号为id的序列中的元素，以空格隔开。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc43a92e7\">\r\n  <span class=\"ne-text\">\r\n   【输入描述】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8728236c\">\r\n  <span class=\"ne-text\">\r\n   第一行一个数n，表示有多少个命令( n≤200000)。以后n行每行一个命令。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uac4971f8\">\r\n  <span class=\"ne-text\">\r\n   【输出描述】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u026dd17f\">\r\n  <span class=\"ne-text\">\r\n   按题目要求输出。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0362e60d\">\r\n  <span class=\"ne-text\">\r\n   （\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://blog.csdn.net/qq_44116998/article/details/104419169\" href=\"https://blog.csdn.net/qq_44116998/article/details/104419169\" target=\"_blank\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    北大程序设计与算法（三）测验题汇总(2020春季)\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"H8OhL\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u2398f599\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua63243de\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uca0dfeb3\">\r\n      <span class=\"ne-text\">\r\n       16\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uc69a31cd\">\r\n      <span class=\"ne-text\">\r\n       new 1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u677de113\">\r\n      <span class=\"ne-text\">\r\n       new 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u4810d9d1\">\r\n      <span class=\"ne-text\">\r\n       add 1 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ud5321a38\">\r\n      <span class=\"ne-text\">\r\n       add 1 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u1a28dac9\">\r\n      <span class=\"ne-text\">\r\n       add 1 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u69038a11\">\r\n      <span class=\"ne-text\">\r\n       add 2 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub6e42d8d\">\r\n      <span class=\"ne-text\">\r\n       add 2 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u9dbe4119\">\r\n      <span class=\"ne-text\">\r\n       add 2 5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u127bc8ac\">\r\n      <span class=\"ne-text\">\r\n       add 2 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u94631091\">\r\n      <span class=\"ne-text\">\r\n       out 1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uccc3ed52\">\r\n      <span class=\"ne-text\">\r\n       out 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uc7d3f210\">\r\n      <span class=\"ne-text\">\r\n       merge 1 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u8fe33106\">\r\n      <span class=\"ne-text\">\r\n       out 1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u53eb51f8\">\r\n      <span class=\"ne-text\">\r\n       out 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue8e64e8b\">\r\n      <span class=\"ne-text\">\r\n       unique 1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2e1508ea\">\r\n      <span class=\"ne-text\">\r\n       out 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u876ed06e\">\r\n      <span class=\"ne-text\">\r\n       2 3 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u36456cf4\">\r\n      <span class=\"ne-text\">\r\n       2 3 4 5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua6a19c1a\">\r\n      <span class=\"ne-text\">\r\n       2 2 3 3 4 4 5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue35efe1d\">\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u79cc5e12\">\r\n      <span class=\"ne-text\">\r\n       2 3 4 5\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"DCoCq\"><span style=\"font-weight:bold;\">代码8.14</span> 链表执行命令<code>#include&lt;iostream&gt;\r\n#include&lt;list&gt;\r\n#include&lt;algorithm&gt;     //find_if\r\n#include&lt;iterator&gt;      //ostream_iterator\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tlist&lt;int&gt; ls[10005];\r\n\tint n,id1,id2, num;\r\n\tcin &gt;&gt; n;\r\n\tchar str[100];\r\n\twhile(n--){\r\n\t\tcin &gt;&gt; str;\r\n        if(str[0]=='a'){\r\n            cin &gt;&gt; id1 &gt;&gt; num;\r\n            auto it=find_if(ls[id1].begin(),ls[id1].end(),[&amp;num](int v) {return v&gt;num;});\r\n            ls[id1].insert(it,num);\r\n        }else if(str[0]=='n'){\r\n            cin &gt;&gt; id1; \r\n        }else if(str[0]=='m'){\r\n\t\t\tcin &gt;&gt; id1 &gt;&gt; id2;\r\n\t\t\tls[id1].merge(ls[id2]);         //合并的两个序列必须有序\r\n        }else if(str[0]=='u'){\r\n\t\t\tcin &gt;&gt;id1;\r\n\t\t\tls[id1].unique ();               //唯一化处理前，list必须有序\r\n        }else if(str[0]=='o'){\r\n\t\t\tcin &gt;&gt; id1;\r\n            copy(ls[id1].begin(), ls[id1].end(), ostream_iterator&lt;int&gt;(cout,\" \"));\r\n\t\t\tcout &lt;&lt; endl;\r\n        }\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u3f7300a7\">\r\n   <span class=\"ne-text\">\r\n    第17-18行先找到插入位置，然后进行插入，实际上实现了插入法排序。find_if是STL的&lt;algorithm&gt;头文件中提供的一个算法，它在指定容器的范围内（前两个参数决定），查找满足第三个参数规定条件的元素迭代器位置。第18行在该位置插入元素。匿名函数从指定范围内第一个大于输入值的元素，保证了指定序列的递增性。\r\n   </span>\r\n  </li>\r\n  <li id=\"u0ae7da38\">\r\n   <span class=\"ne-text\">\r\n    注意第17行的匿名函数中，使用了\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     [&amp;num]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，表示引用局部变量\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     num\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。也可也使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     [&amp;]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    表示引用当前范围内的任何变量，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     [num]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    通过传值方式使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     num\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     [=]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    通过传值方式使用当前范围内的任意变量。\r\n   </span>\r\n  </li>\r\n  <li id=\"uf1fc5b1e\">\r\n   <span class=\"ne-text\">\r\n    list的合并函数merge()和去重函数unique()都要求list是有序的，因为在添加新元素时保证了有序性，因此在这两步操作之前都不需要排序。\r\n   </span>\r\n  </li>\r\n  <li id=\"u27fd2375\">\r\n   <span class=\"ne-text\">\r\n    在进行命令判断时，因为每个命令的第一个字符正好不同，字符判断的效率要高于字符串，因此只取了首字符进行判断。\r\n   </span>\r\n  </li>\r\n  <li id=\"u6bb93e92\">\r\n   <span class=\"ne-text\">\r\n    第9行创建了list的数组，数组中的每个元素都是一个list。\r\n   </span>\r\n  </li>\r\n  <li id=\"ub64647b9\">\r\n   <span class=\"ne-text\">\r\n    insert(),merge()和unique()都需要对中间元素进行插入和删除操作，list用其特有的数据结构保证了算法的有效性。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u9b702e16\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   在STL中，算法大量的使用了仿函数，仿函数（Functor）又称为函数对象（Function\r\n            Object）是一个能行使函数功能的类。仿函数本质上就是通过重载运算符()，将一个类对象按照函数形式进行访问，其使用方法与普通函数相同。以下定义了一个仿函数comp：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"k2Wy1\"><span style=\"font-weight:bold;\">代码8.15</span> 仿函数示例<code>class comp\r\n{\r\npublic:\r\n    comp(int t):num(t){}//显式构造函数\r\n    //const放前面表示这个函数的返回值是不可修改的，放后面表示这个函数不修改当前对象的成员。\r\n    bool operator()(int v) const{\r\n        return v&gt;num;\r\n    }\r\nprivate:\r\n    const int num;\r\n};</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u0869d4e0\">\r\n   <span class=\"ne-text\">\r\n    第4行的num(t)表示用形参t对成员属性num进行初始化。\r\n   </span>\r\n  </li>\r\n  <li id=\"uf1368274\">\r\n   <span class=\"ne-text\">\r\n    第6-8行重载了操作符()，使comp的对象能够像函数一样被调用。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u3e9c9b10\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   有了这个仿函数之后，代码8.TODO的第17行就可以修改为：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"uN9cQ\">auto it=find_if(ls[id1].begin(),ls[id1].end(),comp(num));</pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uc5c3200d\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     find_if()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的第三个参数应该是一个函数，对前两个参数指定范围内的每个元素进行判定。这里传入了一个仿函数对象，并将成员属性进行初始化。\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     find_if()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数对其进行使用时，实际上是调用了仿函数重载的操作符\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，从而达到了调用函数的效果。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"uf9856935\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   从这个例子中也可以看到仿函数的作用，如果不使用匿名函数，而是使用普遍函数，由于\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    find_if()\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   的要求，该函数只能有一个参数，约束变量num无法传入，可以将num设定为全局变量，这样会导致数据的组织混乱。而仿函数通过构造函数将额外使用的数据通过构造函数传递给成员属性，操作符\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    ()\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   的函数体中就可以更加灵活的设置，而成员属性被约束在类的使用范围内，不会导致数据的组织混乱。\r\n  </span>\r\n </p>\r\n <h3 id=\"mM2Dg\">\r\n  <span class=\"ne-text\">\r\n   知识点：T863\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"jfnK0\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"udacd434b\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uc2f01194\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uef7db88a\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u774500d9\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u44673f5d\">\r\n      <span class=\"ne-text\">\r\n       T863\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u61c8a8c2\">\r\n      <span class=\"ne-text\">\r\n       掌握链表list的用法，这是一个典型的节点空间不连续容器，迭代器终止判断不能用\r\n      </span>\r\n      <code class=\"ne-code\">\r\n       <span class=\"ne-text\">\r\n        &gt;\r\n       </span>\r\n      </code>\r\n      <span class=\"ne-text\">\r\n       或\r\n      </span>\r\n      <code class=\"ne-code\">\r\n       <span class=\"ne-text\">\r\n        &lt;\r\n       </span>\r\n      </code>\r\n      <span class=\"ne-text\">\r\n       ，只能用\r\n      </span>\r\n      <code class=\"ne-code\">\r\n       <span class=\"ne-text\">\r\n        !=\r\n       </span>\r\n      </code>\r\n      <span class=\"ne-text\">\r\n       。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ubfb99afa\">\r\n      <a class=\"ne-link\" data-href=\"ch#VjX61\" href=\"ch7#VjX61\">\r\n       <span class=\"ne-text\">\r\n        T791\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u54d55755\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"wJ10H\">\r\n  <span class=\"ne-text\">\r\n   7 字典\r\n  </span>\r\n </h1>\r\n <h2 id=\"SGdMn\">\r\n  <span class=\"ne-text\">\r\n   7.1 关联容器字典map\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ua1a73e6e\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   字典map是关联容器的典型代表，所有元素都是键值对，在C++中用pair实现。pair中第一个元素是first，作为key（键值），起到索引作用，第二个元素为second，作为value（实值），所有元素都会根据元素的键值自动排序，可以根据key值快速找到value值。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua99babd7\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   map属于关联式容器，底层结构是用红黑树实现，查找复杂度为O(\r\n  </span>\r\n  <span class=\"ne-math\" id=\"SOEhZ\">\r\n   <img src=\"../assets/images/cd40280cdc832013a593b2df92ed2275.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   )，其中nbison元素的数量。\r\n  </span>\r\n </p>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"uabccb829\">\r\n   <span class=\"ne-text\">\r\n    在数组一章获知，打表法是一种高效方法，用空间换时间，快速定位，减少搜索。打表法相当于用下标做键进行快速定位，但是如果使用的有效下标是稀疏的（即在一个较大范围里，只有少量下标被使用），或者所需要的键不是整型时，可以采用map实现打表法。只有有效的键才会出现在map中，减少了空间的浪费。并且map是按照键自动排序的，对有顺序要求的题目非常有用。\r\n   </span>\r\n  </p>\r\n </div>\r\n <h3 id=\"ZAq0N\">\r\n  <span class=\"ne-text\">\r\n   例题8.9\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u4067a641\">\r\n  <span class=\"ne-text\">\r\n   有\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    n\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   根可以忽视粗细的棒子。第\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    i\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   棒的长度是\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    a\r\n   </span>\r\n   <sub>\r\n    <span class=\"ne-text\">\r\n     i\r\n    </span>\r\n   </sub>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   。 有人想从这些棒子中选出4个棒子，用这些棒子做1个矩形(包括正方形)。 求最大可以制作的矩形面积。（2022年青岛市程序设计竞赛试题小学组真题）\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u777fe1c3\">\r\n  <span class=\"ne-text\">\r\n   【输入格式 】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7e0c9615\">\r\n  <span class=\"ne-text\">\r\n   第一行数量n。 第二行n个棒子的长度。4≤n≤10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    5\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ,1≤a\r\n  </span>\r\n  <sub>\r\n   <span class=\"ne-text\">\r\n    i\r\n   </span>\r\n  </sub>\r\n  <span class=\"ne-text\">\r\n   ≤10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    9\r\n   </span>\r\n  </sup>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4bbf5b9c\">\r\n  <span class=\"ne-text\">\r\n   【输出格式】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u59bd0eb4\">\r\n  <span class=\"ne-text\">\r\n   最大矩形面积，如果无法组成矩形，输出0。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"y1jXP\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4e6c0e9c\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u954fa9df\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u40940cb6\">\r\n      <span class=\"ne-text\">\r\n       6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua772b949\">\r\n      <span class=\"ne-text\">\r\n       3 1 2 4 2 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u7470a536\">\r\n      <span class=\"ne-text\">\r\n       2\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u8069faad\">\r\n      <span class=\"ne-text\">\r\n       10\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub8fd6ec6\">\r\n      <span class=\"ne-text\">\r\n       3 3 3 3 4 4 4 5 5 5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u67939961\">\r\n      <span class=\"ne-text\">\r\n       20\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uba479891\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u1d8ee60c\">\r\n      <span class=\"ne-text\">\r\n       1 2 3 4\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uad682aed\">\r\n      <span class=\"ne-text\">\r\n       0\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u8f2fd023\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】从题目描述看，最佳方案应该是打表法，列出每种长度的棒子的数量，然后从大到小，找到最佳符合要求的棒子组成举行。但是题目给定的棒子长度的数值访问过大，容易造成内存不足，而且遍历所有长度的耗时也非常巨大。进一步查看题目，因为棒子的总数量相对比较小，可以采用map记录存在的棒子，这样键的总量就会大幅减少，map是按照键值从小到大排序的，因此从尾部寻找符合要求的棒子组成矩形即可。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"NXA6n\"><span style=\"font-weight:bold;\">代码8.16</span> 求最大可以制作的矩形面积<code>#include &lt;iostream&gt;\r\n#include &lt;map&gt;\r\nusing namespace std;\r\nint main ()\r\n{\r\n    map&lt;int,int&gt; a;\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    for(int i=0;i&lt;n;++i){\r\n        int val;\r\n        cin&gt;&gt;val;\r\n        if(a.count(val))\r\n        {   if(a[val]&lt;4)   a[val]++; }\r\n        else\r\n            a[val]=1;\t\t\t\t//或写为a.insert(pair&lt;int,int&gt;(val,1));\r\n    }\r\n    int l1=0;\r\n    for(auto rit=a.rbegin();rit!=a.rend();rit++){\r\n        if(rit-&gt;second&gt;=2 &amp;&amp; l1&gt;0){              //当前棒子数量大于2，并且找到过一对棒子\r\n            cout&lt;&lt;l1*rit-&gt;first&lt;&lt;endl;\r\n            return 0;\r\n        }else if(rit-&gt;second&gt;=4)                 //当前棒子数量大于4，直接构建方形\r\n        {\r\n            cout&lt;&lt;rit-&gt;first*rit-&gt;first&lt;&lt;endl;\r\n            return 0;\r\n        }else if(rit-&gt;second&gt;=2 &amp;&amp; l1==0){       //找到一对棒子，记录并寻找下一对棒子\r\n            l1 = rit-&gt;first;\r\n        }\r\n    }\r\n    cout&lt;&lt;0&lt;&lt;endl;                               //没有找到合适的棒子构成矩形\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uf8eb855e\">\r\n   <span class=\"ne-text\">\r\n    第12行首先通过\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     count()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数判断键是否存在，返回1或0。如果存在则加1，否则设置为初值1。根据题目描述，棒子数量超过4即可满足要求，因此当大于4时没有必须继续累加。\r\n   </span>\r\n  </li>\r\n  <li id=\"u4d039be3\">\r\n   <span class=\"ne-text\">\r\n    第18行的循环逆序遍历map，因为迭代器书写比较复杂，所以auto自动构建数据类型书写更方便，而且可以减少语法关键词的记忆。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"cR2Bd\">\r\n  <span class=\"ne-text\">\r\n   知识点：T871\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"ep52y\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u289ec800\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uc7a4716b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ua6ce4b85\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u1602e60b\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue12809df\">\r\n      <span class=\"ne-text\">\r\n       T871\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u2630dcef\">\r\n      <span class=\"ne-text\">\r\n       掌握关联容器字典map的用法。可以认为这是打表法的高级用法，当数据量比较大但是比较稀疏时，可以用字典代替打表法\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u6904c6de\">\r\n      <span class=\"ne-text\">\r\n       注意map的键是从小到大天然排序的\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uc77abb6d\">\r\n      <a class=\"ne-link\" data-href=\"ch#bDkij\" href=\"ch5#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u6bc68414\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7d0255f4\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX801)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"IOOHN\">\r\n  <span class=\"ne-text\">\r\n   7.2 无序容器字典unordered_map\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ucf7a680e\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   无序容器与关联容器的最大区别在于：关联容器底层采用红黑树，其所有元素按照键进行排序，当需要进行有序遍历时，非常用用；无序容器底层采用的是哈希表，当需要进行随机访问某个键时，访问速度为常量级，即O(1)，当需要频繁进行快速定位时，无序容器就显示出了它的效率优势。\r\n  </span>\r\n </p>\r\n <h3 id=\"hpXsy\">\r\n  <span class=\"ne-text\">\r\n   例题8.10\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u8e33739d\">\r\n  <span class=\"ne-text\">\r\n   给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值\r\n            target的那两个整数，并返回它们的数组下标。假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。可以按任意顺序返回答案。（\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    力扣1题\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0e256143\">\r\n  <span class=\"ne-text\">\r\n   【接口声明】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uee9b1a18\">\r\n  <span class=\"ne-text\">\r\n   vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int\r\n            target)\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua00fcefd\">\r\n  <span class=\"ne-text\">\r\n   【数据范围】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8ad30d3d\">\r\n  <span class=\"ne-text\">\r\n   2 ≤ nums.length ≤10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    4\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ，-10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    9\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ≤nums[i] ≤10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    9\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ，-10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    9\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ≤target ≤10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    9\r\n   </span>\r\n  </sup>\r\n </p>\r\n <p class=\"ne-p\" id=\"u97a04722\">\r\n  <span class=\"ne-text\">\r\n   只会存在一个有效答案\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"n9j3b\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u313e9502\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua9536d91\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5d64ab70\">\r\n      <span class=\"ne-text\">\r\n       nums = [2,7,11,15], target = 9\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf319e3d1\">\r\n      <span class=\"ne-text\">\r\n       [0,1]\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uab9d92b6\">\r\n      <span class=\"ne-text\">\r\n       nums = [3,2,4], target = 6\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u44dad994\">\r\n      <span class=\"ne-text\">\r\n       [1,2]\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud9fbce5a\">\r\n      <span class=\"ne-text\">\r\n       nums = [3,3], target = 6\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1d52dacb\">\r\n      <span class=\"ne-text\">\r\n       [0,1]\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u0e2dc613\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】这是力扣的第1题，看似非常简单。用嵌套循环遍历所有组合的可能性，找到符合要求的答案进行输出即可，时间复杂度为O(n\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   )。实际上对于任意给定的值v，需要快速确定target-v是否存在，即v对于target的互补数是否存在。打表法可以完成这个任务需求。但2*10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    9\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   的数值范围否决了开辟如此大空间的数组可行性。基于哈希表的unordered_map就发挥了它的作用。nums.length的数值范围决定了键的数量不会太多，哈希map既可以类似打表法中数组的快速定位，也可以避免无效空间的浪费。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"wp2aF\"><span style=\"font-weight:bold;\">代码8.17</span> 找出和为目标的整数<code>class Solution {\r\npublic:\r\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\r\n        unordered_map&lt;int,size_t&gt; m;\r\n        for (size_t i = 0; i &lt; nums.size();++i)\r\n            m[nums[i]] = i;\t\t\t\t\t\t//反向记录第i个数值对应的下标\r\n        for (auto it1 = nums.begin(); it1 &lt; nums.end() - 1; it1++)\r\n        {\r\n            if (m.count(target - *it1))\t\t\t//若存在互补数\r\n            {\r\n                int first = it1 - nums.begin();\t//当前数的序号\r\n                int second = m[target - *it1];\t//互补数的序号\r\n                if(first!=second){\t\t\t\t//如果不是同一个元素\r\n                    return {first,second};\t\t//用两个元素初始化构建一个列表\r\n                }\r\n            }\r\n        }\r\n        return vector&lt;int&gt;();//返回一个空的vector，保证语法正确，本题保证不会执行到这里\r\n    }\r\n};</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ubd12bbcc\">\r\n   <span class=\"ne-text\">\r\n    从力扣的解题记录中可以可以看到，基于暴力穷举的方法耗时为92ms，而基于unordered_map的方法耗时为8ms，十几倍的速度差显示了unordered_map在快速定位上的效率优势。利用哈希表的特点，第9行的快速定位的时间复杂度为O(1)，这样就将暴力穷举的时间复杂度O(n\r\n   </span>\r\n   <sup>\r\n    <span class=\"ne-text\">\r\n     2\r\n    </span>\r\n   </sup>\r\n   <span class=\"ne-text\">\r\n    )降为O(n)O(1)=O(n)。\r\n   </span>\r\n  </li>\r\n  <li id=\"u188e22ca\">\r\n   <span class=\"ne-text\">\r\n    第5-6行以vector的值为键，以下标为值反向构建unordered_map，第9行判定目标值是否存在，利用了unordered_map的快速定位功能。如果找到目标值且不是同一个元素（第13行），则返回答案。\r\n   </span>\r\n  </li>\r\n  <li id=\"u24ad1fcf\">\r\n   <span class=\"ne-text\">\r\n    第11行是将迭代器指针转换为序号的常用方法。\r\n   </span>\r\n  </li>\r\n  <li id=\"ufcb5d654\">\r\n   <span class=\"ne-text\">\r\n    第14行的大括号是对vector进行初始化的方式，借助这种方式，与返回类型搭配使用，构建一个新的vector返回。\r\n   </span>\r\n  </li>\r\n  <li id=\"ucc719b1f\">\r\n   <span class=\"ne-text\">\r\n    因为题目保证了一定有解，因此第18行是不会被执行的。但是从程序设计的角度，所有路径都必须有返回值，因此第18行必须存在。这一行也可以简写为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     return {};\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"ufa2b9c62\">\r\n   <span class=\"ne-text\">\r\n    很多文献上使用哈希map时使用头文件&lt;hash_map&gt;中的hash_map，这是一个非标准库，正确方式应该使用头文件&lt;unordered_map&gt;中的unordered_map。\r\n   </span>\r\n  </p>\r\n </div>\r\n <h3 id=\"jxNPL\">\r\n  <span class=\"ne-text\">\r\n   知识点：T872\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"g6dTs\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uefa19cb8\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u9f1be56e\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u72a19960\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u5598679c\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u6d98c1c2\">\r\n      <span class=\"ne-text\">\r\n       T872\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7330e0d3\">\r\n      <span class=\"ne-text\">\r\n       掌握无序容器的用法，重点掌握利用unordered_map构建大且稀疏数据的打表法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ua0f7978a\">\r\n      <a class=\"ne-link\" data-href=\"ch#bDkij\" href=\"ch5#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ub517b6c1\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u3defd62d\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX801)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"EdSqb\">\r\n  <span class=\"ne-text\">\r\n   7.3 无序容器字典unordered_set\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ua9600562\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   可以认为字典是一种下标为任意类型的特殊数组，因为字典可以遍历，因此可以和循环联动，简化书写。\r\n  </span>\r\n </p>\r\n <h3 id=\"FO3kF\">\r\n  <span class=\"ne-text\">\r\n   例题8.11\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"uabc3ef9c\">\r\n  <span class=\"ne-text\">\r\n   给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个 不同的索引 i 和 j ，满足 nums[i] ==\r\n            nums[j] 且 abs(i - j) &lt;= k 。如果存在，返回 true ；否则，返回 false 。（\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    力扣219题\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uf60d4b14\">\r\n  <span class=\"ne-text\">\r\n   【接口声明】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ub669db11\">\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    bool containsNearbyDuplicate(vector&lt;int&gt;&amp; nums, int k)\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u850472a8\">\r\n  <span class=\"ne-text\">\r\n   【数据范围】\r\n  </span>\r\n </p>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"udf50c237\">\r\n   <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 13px\">\r\n    1 &lt;=\r\n                nums.length &lt;= 10\r\n   </span>\r\n   <sup>\r\n    <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 12px\">\r\n     5\r\n    </span>\r\n   </sup>\r\n  </li>\r\n  <li id=\"u1f87ee0a\">\r\n   <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 13px\">\r\n    -10\r\n   </span>\r\n   <sup>\r\n    <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 12px\">\r\n     9\r\n    </span>\r\n   </sup>\r\n   <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 13px\">\r\n    &lt;= nums[i] &lt;= 10\r\n   </span>\r\n   <sup>\r\n    <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 12px\">\r\n     9\r\n    </span>\r\n   </sup>\r\n  </li>\r\n  <li id=\"u92609df4\">\r\n   <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 13px\">\r\n    0 &lt;= k\r\n                &lt;= 10\r\n   </span>\r\n   <sup>\r\n    <span class=\"ne-text\" style=\"color: rgba(var(--grey-7-rgb),1); font-size: 12px\">\r\n     5\r\n    </span>\r\n   </sup>\r\n  </li>\r\n </ul>\r\n <table border=1 class=\"ne-table\" id=\"FHxMd\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ucb4cd583\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5f999755\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u13e6f7f7\">\r\n      <span class=\"ne-text\">\r\n       nums = [1,2,3,1], k = 3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uda772353\">\r\n      <span class=\"ne-text\">\r\n       true\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ueb160759\">\r\n      <span class=\"ne-text\">\r\n       nums = [1,0,1,1], k = 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ueed98c9f\">\r\n      <span class=\"ne-text\">\r\n       true\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf94d1141\">\r\n      <span class=\"ne-text\">\r\n       nums = [1,2,3,1,2,3], k = 2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u795dab5b\">\r\n      <span class=\"ne-text\">\r\n       false\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u22d81690\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】这是力扣的第219题，可以通过暴力解决，但效率比较低。以下引入滑动窗口的概念，只在长度为k的范围内进行查找，并且利用哈希表查找复杂度为O(1)的特点，加快查找的效率。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"okF7N\"><span style=\"font-weight:bold;\">代码8.18</span> 多重判断解决方案<code>class Solution {\r\npublic:\r\n    bool containsNearbyDuplicate(vector&lt;int&gt;&amp; nums, int k) {\r\n        unordered_set&lt;int&gt; s;\r\n        for (int i = 0; i &lt; nums.size(); i++) {\r\n            if (i &gt; k) {\r\n                s.erase(nums[i - k - 1]);\t\t//删除超过距离k的元素\r\n            }\r\n            if (s.count(nums[i])) {\t\t\t\t//哈希查找\r\n                return true;\r\n            }\r\n            s.emplace(nums[i]);\t\t\t\t\t//添加新元素\r\n        }\r\n        return false;\r\n    }\r\n};</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u04b29c11\">\r\n   <span class=\"ne-text\">\r\n    这是一个非常奇妙并且高效的解法。建立了一个\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     unordered_set\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    对象，其中只保留\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     k\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    个元素，相当于一个\r\n   </span>\r\n   <strong>\r\n    <span class=\"ne-text\">\r\n     滑动窗口\r\n    </span>\r\n   </strong>\r\n   <span class=\"ne-text\">\r\n    。当距离超过\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     k\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    时，将元素从窗口中删除，第12行将新元素添加到窗口中。第9行利用哈希O(1)的复杂度进行判断是否存在。如果存在则返回\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。整个算法的时间复杂度为O(n)。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"Yve1p\">\r\n  <span class=\"ne-text\">\r\n   知识点：T873\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"VQLtQ\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u53831e8d\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u370e0693\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u4a33de2a\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ud85d8824\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u0e1dec2a\">\r\n      <span class=\"ne-text\">\r\n       T873\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uff46b348\">\r\n      <span class=\"ne-text\">\r\n       重点掌握利用unordered_set构建滑动窗口，理解哈希表查找复杂度为O(1)的特性，利用这一特性，可以代替数组的打表法，尤其对稀疏或非数值数据具有良好的效果。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u8f5d44b5\">\r\n      <a class=\"ne-link\" data-href=\"ch#bDkij\" href=\"ch5#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u17992f24\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"ue6a7495a\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX821)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX801)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX814)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"wmBGH\">\r\n  <span class=\"ne-text\">\r\n   7.4 字典与循环的联动\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u737fec1f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   可以认为字典是一种下标为任意类型的特殊数组，因为字典可以遍历，因此可以和循环联动，简化书写。\r\n  </span>\r\n </p>\r\n <h3 id=\"uk7XO\">\r\n  <span class=\"ne-text\">\r\n   例题8.12\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u87ca6add\">\r\n  <span class=\"ne-text\">\r\n   罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"Rgum2\" style=\"width: 702px;text-align:center\"  align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"u2e484c2a\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"u1bd032ff\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"49\">\r\n     <p class=\"ne-p\" id=\"ucdda6aac\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"uf141ba48\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"49\">\r\n     <p class=\"ne-p\" id=\"u7bbbda00\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"ud28ab4c9\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"uba0eb1da\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"ufc02017f\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"uf5f1cd77\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"50\">\r\n     <p class=\"ne-p\" id=\"u8539ee51\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"u9dcac37c\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"50\">\r\n     <p class=\"ne-p\" id=\"u422ea58c\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"uf608460f\">\r\n      <span class=\"ne-text\">\r\n       字符\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ub9115e78\">\r\n      <span class=\"ne-text\">\r\n       数值\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"u97bd0b36\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       I\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"u527d1871\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"49\">\r\n     <p class=\"ne-p\" id=\"u9127025c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       V\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"u3bb44440\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"49\">\r\n     <p class=\"ne-p\" id=\"u99dac573\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       X\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"uf1f2f62e\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       10\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"u4ba41eb4\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       L\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"49\">\r\n     <p class=\"ne-p\" id=\"uae3d54ef\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       50\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"ub71da46b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       C\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"50\">\r\n     <p class=\"ne-p\" id=\"u9dc4b1ad\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       100\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"u7e6dd648\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       D\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"50\">\r\n     <p class=\"ne-p\" id=\"u25b0fc4c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       500\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #FBE4E7\" width=\"50\">\r\n     <p class=\"ne-p\" id=\"ub8b578aa\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       M\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u5bd7d138\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1000\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u13c18298\">\r\n  <span class=\"ne-text\">\r\n   例如， 罗马数字2写做 II，即为两个并列的1。12写做XII，即为X+II。 27写做XXVII,\r\n            即为XX+V+II 。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1a9e3d3e\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4\r\n            不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6e1370c4\">\r\n  <span class=\"ne-text\">\r\n   I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud671d1c0\">\r\n  <span class=\"ne-text\">\r\n   X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u17e3f52b\">\r\n  <span class=\"ne-text\">\r\n   C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u3e087e66\">\r\n  <span class=\"ne-text\">\r\n   给定一个罗马数字，将其转换成整数。（\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    力扣13题\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   ）\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1c117b01\">\r\n  <span class=\"ne-text\">\r\n   【接口声明】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4683908e\">\r\n  <span class=\"ne-text\">\r\n   int romanToInt(string s)\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue8213a02\">\r\n  <span class=\"ne-text\">\r\n   【数据范围】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u9963bd1b\">\r\n  <span class=\"ne-text\">\r\n   1 &lt;= s.length &lt;= 15\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u869e80b1\">\r\n  <span class=\"ne-text\">\r\n   s 仅含字符 ('I', 'V', 'X', 'L', 'C', 'D', 'M')\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u784590cc\">\r\n  <span class=\"ne-text\">\r\n   题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue9349969\">\r\n  <span class=\"ne-text\">\r\n   题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"WupJh\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ubaa833e6\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u35703c1a\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u6bdecd3e\">\r\n      <span class=\"ne-text\">\r\n       s = \"III\"\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u6a70c6cb\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u58b38927\">\r\n      <span class=\"ne-text\">\r\n       s = \"LVIII\"\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ubd2eeadc\">\r\n      <span class=\"ne-text\">\r\n       58\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4fe1ed38\">\r\n      <span class=\"ne-text\">\r\n       s = \"MCMXCIV\"\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud2dbb5db\">\r\n      <span class=\"ne-text\">\r\n       1994\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u9c513ea9\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】这是力扣的第13题，可以通过多重判断解决。但是书写比较复杂。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"rkpaa\"><span style=\"font-weight:bold;\">代码8.19</span> 多重判断解决方案<code>class Solution {\r\npublic:\r\n    int romanToInt(string s) {\r\n        int sum=0;\r\n        for(int i=0;i&lt;s.size();++i){\r\n            if(s[i]=='I'){\r\n                if(s[i+1]=='V'){++i;sum+=4;}\r\n                else if(s[i+1]=='X'){++i;sum+=9;}\r\n                else sum++;\r\n            }\r\n            else if(s[i]=='X'){\r\n                if(s[i+1]=='L'){++i;sum+=40;}\r\n                else if(s[i+1]=='C'){++i;sum+=90;}\r\n                else sum+=10;\r\n            }\r\n            else if(s[i]=='C'){\r\n                if(s[i+1]=='D'){++i;sum+=400;}\r\n                else if(s[i+1]=='M'){++i;sum+=900;}\r\n                else sum+=100;\r\n            }\r\n            else if(s[i]=='V'){sum+=5;}\r\n            else if(s[i]=='L'){sum+=50;}\r\n            else if(s[i]=='D'){sum+=500;}\r\n            else if(s[i]=='M'){sum+=1000;}\r\n        }\r\n        return sum;\r\n    }\r\n};</code></pre>\r\n <p class=\"ne-p\" id=\"u44548aaa\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   造成以上代码多重判断的复杂性根源在于键是一系列不规律的字符，可以将这些特殊键构造成字典，从而简化循环书写逻辑。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"T7yAG\"><span style=\"font-weight:bold;\">代码8.20</span> 字典解决方案<code>class Solution {\r\npublic:\r\n    int romanToInt(string s) {\r\n        int sum=0;\r\n        unordered_map&lt;char,int&gt; m1=\\{\\{'I',1},{'V',5},{'X',10},{'L',50},\r\n        \t\t\t\t\t\t\t{'C',100},{'D',500},{'M',1000}};\r\n        unordered_map&lt;string,int&gt; m2=\\{\\{\"IV\",4},{\"IX\",9},{\"XL\",40},\r\n        \t\t\t\t\t\t\t{\"XC\",90},{\"CD\",400},{\"CM\",900}};\r\n        for(int i=0;i&lt;s.size();++i){\r\n            if(m2.count(s.substr(i,2))) sum+=m2[s.substr(i++,2)];\r\n            else sum+=m1[s[i]];\r\n        }\r\n        return sum;\r\n    }\r\n};</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ufe6e7f6c\">\r\n   <span class=\"ne-text\">\r\n    可以看到，代码得到了极大的简化，核心就是构造了两个字典，形成了键值的映射。\r\n   </span>\r\n  </li>\r\n  <li id=\"u6a509bb9\">\r\n   <span class=\"ne-text\">\r\n    第10行判断双字符键是否存在，如果存在则增加对应的值。特别注意i++，因为是双字符键，需要跨越两个字符，因此sum累加后，要将i增加1。\r\n   </span>\r\n  </li>\r\n  <li id=\"u22c7438b\">\r\n   <span class=\"ne-text\">\r\n    第11行对单字符键进行累加操作。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"EnDgK\">\r\n  <span class=\"ne-text\">\r\n   随堂练习8.2\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u9a66d153\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   仿照C++的定义对可能含有转义序列的字符串进行转换，输出转换后的结果。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n    只需实现\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ：\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(231, 76, 60)\">\r\n   \\n\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ,\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(231, 76, 60)\">\r\n   \\t\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ,\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(231, 76, 60)\">\r\n   \\?\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ,\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(231, 76, 60)\">\r\n   \\'\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ,\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(231, 76, 60)\">\r\n   \\\"\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ,\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(231, 76, 60)\">\r\n   \\\\\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   即可。注意根据知识点\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"ch#W9YYd\" href=\"ch2#W9YYd\">\r\n   <span class=\"ne-text\">\r\n    T274\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   ，当输入中有转义字符时，不会认为是转义字符，而会逐个字符处理。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"IylW4\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud9a1dcdd\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u57ee1c4b\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua0bdb428\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       new\\nline\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u8a1d18dd\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       new\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u22a820d4\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       line\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9eaea655\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       T\\tAB\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uecbee0c7\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       T AB\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ubbbc3e11\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       \\?\\'\\\"\\\\\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u046afcbf\">\r\n      <span class=\"ne-text\" style=\"color: rgb(64, 64, 64); font-size: 12px\">\r\n       ?'\"\\\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"mu9UI\">\r\n  <span class=\"ne-text\">\r\n   知识点：T874\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"VCGJC\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u292cb2af\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua85aecbc\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uc62273f0\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ub22a0487\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"uffaf4c1a\">\r\n      <span class=\"ne-text\">\r\n       T874\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua9ee8cb3\">\r\n      <span class=\"ne-text\">\r\n       掌握字典与循环联动的方法，理解字典在书写上类似特殊下标的数组\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u1faa894e\">\r\n      <a class=\"ne-link\" data-href=\"ch#WGgmO\" href=\"ch5#WGgmO\">\r\n       <span class=\"ne-text\">\r\n        T522\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ub3d25c13\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u27caa42c\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX815)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u8a19d09d\">\r\n  <span class=\"ne-text\">\r\n   参考文献\r\n  </span>\r\n </p>\r\n <ol class=\"ne-ol\">\r\n  <li id=\"ucabb1a90\">\r\n   <a class=\"ne-link\" data-href=\"https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103\" href=\"https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103\" target=\"_blank\">\r\n    <span class=\"ne-text\">\r\n     https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103\r\n    </span>\r\n   </a>\r\n  </li>\r\n  <li id=\"ua7a8bd0d\">\r\n   <a class=\"ne-link\" data-href=\"http://c.biancheng.net/view/6803.html\" href=\"http://c.biancheng.net/view/6803.html\" target=\"_blank\">\r\n    <span class=\"ne-text\">\r\n     http://c.biancheng.net/view/6803.html\r\n    </span>\r\n   </a>\r\n  </li>\r\n  <li id=\"u8e1fff5b\">\r\n   <a class=\"ne-link\" data-href=\"https://blog.csdn.net/ych9527/article/details/117324385\" href=\"https://blog.csdn.net/ych9527/article/details/117324385\" target=\"_blank\">\r\n    <span class=\"ne-text\">\r\n     https://blog.csdn.net/ych9527/article/details/117324385\r\n    </span>\r\n   </a>\r\n  </li>\r\n </ol>\r\n <h1 id=\"OEDhg\">\r\n  <span class=\"ne-text\">\r\n   题单\r\n  </span>\r\n </h1>\r\n\r\n <table border=1 class=\"ne-table\" id=\"FANQT\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u8e2681c3\">\r\n      <span class=\"ne-text\">\r\n       序号\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u97ce9857\">\r\n      <span class=\"ne-text\">\r\n       题目名称\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u63a0c2cb\">\r\n      <span class=\"ne-text\">\r\n       知识点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u3ad306a6\">\r\n      <span class=\"ne-text\">\r\n       序号\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"u4e859026\">\r\n      <span class=\"ne-text\">\r\n       题目名称\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"ue4694c05\">\r\n      <span class=\"ne-text\">\r\n       知识点\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u15e91a5c\">\r\n      <span class=\"ne-text\">\r\n       LX801\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"ue6867b7d\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        第一个出现两次的字母\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u8686f3c1\">\r\n      <a class=\"ne-link\" data-href=\"ch#bDkij\" href=\"ch5#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#wG8i3\" href=\"ch2#wG8i3\">\r\n       <span class=\"ne-text\">\r\n        T242\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"ufff68c93\">\r\n      <span class=\"ne-text\">\r\n       LX802\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"udd036635\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161766\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161766\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        加一\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u0c69e5c3\">\r\n      <a class=\"ne-link\" data-href=\"ch#TSGz6\" href=\"ch5#TSGz6\">\r\n       <span class=\"ne-text\">\r\n        T549\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u0591cb18\">\r\n      <span class=\"ne-text\">\r\n       LX803\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"udecf8a13\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161767\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161767\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        三个数的最大乘积\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u047289c9\">\r\n      <a class=\"ne-link\" data-href=\"ch#pyYpq\" href=\"ch5#pyYpq\">\r\n       <span class=\"ne-text\">\r\n        T527\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"uecefd206\">\r\n      <span class=\"ne-text\">\r\n       LX804\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"uefc5d0d5\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        移动零\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uc95b687f\">\r\n      <a class=\"ne-link\" data-href=\"#kYcFw\" href=\"#kYcFw\">\r\n       <span class=\"ne-text\">\r\n        T842\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#o8Kxq\" href=\"ch5#o8Kxq\">\r\n       <span class=\"ne-text\">\r\n        T524\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u18d734d8\">\r\n      <span class=\"ne-text\">\r\n       LX805\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"ude098280\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161769\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161769\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        只出现一次的数字\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u57bd9664\">\r\n      <a class=\"ne-link\" data-href=\"ch#panTK\" href=\"ch2#panTK\">\r\n       <span class=\"ne-text\">\r\n        T26C\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u70ee49c3\">\r\n      <span class=\"ne-text\">\r\n       LX806\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"ud550f8e0\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        移除元素\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uec413efb\">\r\n      <a class=\"ne-link\" data-href=\"#kYcFw\" href=\"#kYcFw\">\r\n       <span class=\"ne-text\">\r\n        T842\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#o8Kxq\" href=\"ch5#o8Kxq\">\r\n       <span class=\"ne-text\">\r\n        T524\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u3a537aba\">\r\n      <span class=\"ne-text\">\r\n       LX807\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"uea49a3d1\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161770\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161770\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        合并两个有序数组\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u5fa58791\">\r\n      <a class=\"ne-link\" data-href=\"ch#pyYpq\" href=\"ch5#pyYpq\">\r\n       <span class=\"ne-text\">\r\n        T527\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#L8fPI\" href=\"ch5#L8fPI\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        T528\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"ua936f615\">\r\n      <span class=\"ne-text\">\r\n       LX808\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"ub80f4ea4\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161771\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161771\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        搜索插入位置\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"ua5467cd1\">\r\n      <a class=\"ne-link\" data-href=\"ch#AE9qD\" href=\"ch2#AE9qD\">\r\n       <span class=\"ne-text\">\r\n        T251\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u27585b6f\">\r\n      <span class=\"ne-text\">\r\n       LX809\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u22c8a90c\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161772\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161772\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        和相等的子数组\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u2e0767bd\">\r\n      <a class=\"ne-link\" data-href=\"#jxNPL\" href=\"#jxNPL\">\r\n       <span class=\"ne-text\">\r\n        T872\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u4a20dc91\">\r\n      <span class=\"ne-text\">\r\n       LX810\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"u9cc23b50\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161773\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161773\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        第三大的数\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u7559d6ea\">\r\n      <a class=\"ne-link\" data-href=\"ch#TFSS3\" href=\"ch5#TFSS3\">\r\n       <span class=\"ne-text\">\r\n        T515\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u261730c9\">\r\n      <span class=\"ne-text\">\r\n       LX811\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u6f7f3976\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161775\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161775\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        学生分数的最小差值\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"ua73bb148\">\r\n      <a class=\"ne-link\" data-href=\"ch#pyYpq\" href=\"ch5#pyYpq\">\r\n       <span class=\"ne-text\">\r\n        T527\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"ch#TFSS3\" href=\"ch5#TFSS3\">\r\n       <span class=\"ne-text\">\r\n        T515\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u769cf93a\">\r\n      <span class=\"ne-text\">\r\n       LX812\r\n      </span>\r\n     </p>\r\n    </td>\r\n   \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"uff6e743d\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161776\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161776\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        串联数组\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"udc32ef04\">\r\n      <a class=\"ne-link\" data-href=\"ch#zTfai\" href=\"ch5#zTfai\">\r\n       <span class=\"ne-text\">\r\n        T542\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u7cd6df3e\">\r\n      <span class=\"ne-text\">\r\n       LX813\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"ua5204a90\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161777\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161777\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        删除某些元素后的数组均值\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"uc5039c42\">\r\n      <a class=\"ne-link\" data-href=\"ch#pyYpq\" href=\"ch5#pyYpq\">\r\n       <span class=\"ne-text\">\r\n        T527\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u812a1ddb\">\r\n      <span class=\"ne-text\">\r\n       LX814\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"u946c0bcf\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        丢失的数字\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u6b2e8efc\">\r\n      <a class=\"ne-link\" data-href=\"ch#bDkij\" href=\"ch5#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#Yve1p\" href=\"#Yve1p\">\r\n       <span class=\"ne-text\">\r\n        T873\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"uc6a915c9\">\r\n      <span class=\"ne-text\">\r\n       LX815\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u7e18bf6b\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        罗马数字转整数\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u2c91f959\">\r\n      <a class=\"ne-link\" data-href=\"#mu9UI\" href=\"#mu9UI\">\r\n       <span class=\"ne-text\">\r\n        T874\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u10138cc3\">\r\n      <span class=\"ne-text\">\r\n       LX816\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"ub130c7aa\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161780\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161780\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        主要元素\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"ue480f942\">\r\n      <a class=\"ne-link\" data-href=\"#jxNPL\" href=\"#jxNPL\">\r\n       <span class=\"ne-text\">\r\n        T872\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u0477cf72\">\r\n      <span class=\"ne-text\">\r\n       LX817\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"ueeb4d70a\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161781\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161781\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        判断能否形成等差数列\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"ua714c028\">\r\n      <a class=\"ne-link\" data-href=\"ch#pyYpq\" href=\"ch5#pyYpq\">\r\n       <span class=\"ne-text\">\r\n        T527\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u20c2a107\">\r\n      <span class=\"ne-text\">\r\n       LX818\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"u14e28ab5\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        棒球比赛\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"ube88e950\">\r\n      <a class=\"ne-link\" data-href=\"#BlTTv\" href=\"#BlTTv\">\r\n       <span class=\"ne-text\">\r\n        T841\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"ud22ea8bb\">\r\n      <span class=\"ne-text\">\r\n       LX819\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u44e470cc\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        存在连续三个奇数的数组\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u5a3fe690\">\r\n      <a class=\"ne-link\" data-href=\"#z5syf\" href=\"#z5syf\">\r\n       <span class=\"ne-text\">\r\n        T862\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u96689abd\">\r\n      <span class=\"ne-text\">\r\n       LX820\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"uaff7fbea\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161784\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161784\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        重新排列数组\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u08544e3a\">\r\n      <a class=\"ne-link\" data-href=\"ch#AE9qD\" href=\"ch2#AE9qD\">\r\n       <span class=\"ne-text\">\r\n        T251\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"u8e7daa8a\">\r\n      <span class=\"ne-text\">\r\n       LX821\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u90fbc2da\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        存在重复元素II\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u2e68871b\">\r\n      <a class=\"ne-link\" data-href=\"#Yve1p\" href=\"#Yve1p\">\r\n       <span class=\"ne-text\">\r\n        T873\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"u70fb75f4\">\r\n      <span class=\"ne-text\">\r\n       LX822\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"u930fe2ae\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        存在重复元素\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u40f3e4c5\">\r\n      <a class=\"ne-link\" data-href=\"#jxNPL\" href=\"#jxNPL\">\r\n       <span class=\"ne-text\">\r\n        T872\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"66\">\r\n     <p class=\"ne-p\" id=\"uc256348f\">\r\n      <span class=\"ne-text\">\r\n       LX823\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"202\">\r\n     <p class=\"ne-p\" id=\"u0097c855\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        有效的括号\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u95ea3a91\">\r\n      <a class=\"ne-link\" data-href=\"#BlTTv\" href=\"#BlTTv\">\r\n       <span class=\"ne-text\">\r\n        T841\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"65\">\r\n     <p class=\"ne-p\" id=\"ud7b34d94\">\r\n      <span class=\"ne-text\">\r\n       LX824\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"109\">\r\n     <p class=\"ne-p\" id=\"ub94f5b50\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        两数之和\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u8c9240e9\">\r\n      <a class=\"ne-link\" data-href=\"#jxNPL\" href=\"#jxNPL\">\r\n       <span class=\"ne-text\">\r\n        T862\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n</div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.goAnchor(window.location.hash);\r\n    });\r\n\r\n    hljs.initHighlightingOnLoad();\r\n    // hljs.highlightAll();\r\n    hljs.initLineNumbersOnLoad({\r\n      singleLine: true,\r\n      // startFrom: 5,\r\n    });\r\n  },\r\n  methods: {\r\n    goAnchor(selector) {\r\n      if(selector){\r\n        console.log(selector)\r\n        let elm = document.getElementById(selector.replace('#',''))\r\n        elm.scrollIntoView(true)\r\n      }\r\n        \r\n    },\r\n  },\r\n};\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ch8.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ch8.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ch8.vue?vue&type=template&id=2a5b97d5&\"\nimport script from \"./Ch8.vue?vue&type=script&lang=js&\"\nexport * from \"./Ch8.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticStyle","_v","staticClass","attrs","require","mounted","$nextTick","goAnchor","window","location","hash","hljs","initHighlightingOnLoad","initLineNumbersOnLoad","singleLine","methods","selector","console","log","elm","document","getElementById","replace","scrollIntoView","component"],"sourceRoot":""}