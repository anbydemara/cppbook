{"version":3,"file":"js/857.61399bf7.js","mappings":"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","sources":["webpack://cpp_book/./src/views/Ch5.vue","webpack://cpp_book/src/views/Ch5.vue","webpack://cpp_book/./src/views/Ch5.vue?2c9a","webpack://cpp_book/./src/views/Ch5.vue?3cf0"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" 第五章 数组与字符串 \")]),_c('div',{staticClass:\"lake-content\",attrs:{\"typography\":\"classic\"}},[_c('h1',{attrs:{\"id\":\"vftx2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1. 一维数组的定义和初始化 \")])]),_c('h2',{attrs:{\"id\":\"docsq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.1 一维数组的定义 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1389aad7\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\"}},[_vm._v(\" 在程序设计中，为了便于程序处理，通常把具有相同类型的若干变量按有序的形式组织在一起，这些按序排列的同类数据元素的集合称为数组。其中，集合中的每一个元素都相当于一个与数组同类型的变量；集合中的每一个元素用同一个名字（数组名）和它在集合中的序号（下标）来区分引用。语法格式如下： \")])]),_c('details',{staticClass:\"lake-collapse\"},[_c('summary',{attrs:{\"id\":\"ub5c5d47b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数据类型 数组名[元素数量]; \")])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"h4xuI\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.1\")]),_vm._v(\" 一维数组的定义\\n\"),_c('code',[_vm._v(\"int a[10];\\t\\t//语法格式：//定义了长度为10的整型数组\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u0b9fc52d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第1行定义了一个包含10个 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类型元素的数组，数组名为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，这10个元素分别是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[0] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[1] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , … \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[9] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('li',{attrs:{\"id\":\"u01a845cb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 特别强调，C/C++中区分定义语句和非定义语句。同样的符号，在定义语句和非定义语句中表达的含义可能完全不同。 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在数组定义时表示数组中元素的个数，而在数组使用时表示下标，即第 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 个元素。 \")])]),_c('li',{attrs:{\"id\":\"链接4b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 下标从0开始，以 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int a[10]; \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 为例，第一个元素是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[0] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，最后一个元素是a[9]。 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[10] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 并不存在，对其访问存在下标越界错误。 \")])])]),_c('h3',{attrs:{\"id\":\"sDNu2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T511 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"BBzxw\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7f46a344\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"543\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u740c940a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"57\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue01922b6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"105\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udaec95f4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u487f0a74\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T511 \")])])]),_c('td',{attrs:{\"width\":\"543\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u58d0930d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握数组的基本定义，索引从0开始，中括号在定义语句和非定义语句中的含义 \")])])]),_c('td',{attrs:{\"width\":\"57\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uea6e9b8f\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"105\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u70d3a523\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#D8kyt\",\"href\":\"#D8kyt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T531 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#eRcMx\",\"href\":\"#eRcMx\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T541 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"705\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua8093131\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX501) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"T4QOe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.2 一维数组的初始化 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6c094f71\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 定义后用大括号中的数值对各个元素依次进行赋值。数值个数不能超过数组定义时的元素数量。如果用全部数值进行了初始化，元素数量在定义时可以省略。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"YqhAq\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.2\")]),_vm._v(\" 一维数组的初始化\\n\"),_c('code',[_vm._v(\"int main(){\\n    int a[5] = {1, 2, 3, 4, 5};\\n    double b[] = {7.1, 8.2, 9.3};\\n    double c1[10] = {0.5,1.0,1.5,2.0};\\n    long long c2[100] = {0};\\n    long long c3[100] = {};\\n    int d[50];\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uf3d565ba\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组b根据初始化数值的数量确定元素个数为3。 \")])]),_c('li',{attrs:{\"id\":\"uc6a2aea9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组c1的前4个数据为与初始化列表对应，根据C/C++的规则，部分初始化时，未赋值元素为0，因此c1[4]以后的元素为0。 \")])])]),_c('img',{staticStyle:{\"display\":\"block\",\"width\":\"100%\"},attrs:{\"id\":\"a8vfs\",\"src\":require(\"../assets/images/1676858457207-e52af739-7027-4ed0-9978-d25f7452d5f4.jpeg\")}}),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2dde51fc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.1 部分初始化时的数组c1 \")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u6e6f5ac1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 根据部分初始化规则，可以用第5行的方法将所有数值初始化为全0。这是利用了规则，并不存在全1或其他数值的全部初始化操作。 \")])]),_c('li',{attrs:{\"id\":\"u94be4cea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 采用第6行的方式，也可以将数组全部初始化为0 \")])]),_c('li',{attrs:{\"id\":\"u5eeffd2c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 但是如果没有初始化，数值中所有元素的值是不确定的。变量定义时，只会分配空间，没有自动赋值为0的操作。例如数组d中的所有值是不确定的。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ua78ab0fb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 元素数量必须是非负整数，可以是常量，也可以是变量。如果定义数组时元素数量为常量，称为静态数组，在编译时分配存储空间，因为存储空间确定，所以可以进行初始化；但是如果元素数量是变量，称为动态数组，在运行时分配存储空间，编译时不能确定存储空间的大小。从C++11开始，动态数组可以进行初始化。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"IvVzf\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.3\")]),_vm._v(\" 定义动态数组\\n\"),_c('code',[_vm._v(\"int main(){\\n    int n;\\n    cin>>n;\\n    int arr[n]={1,2};\\t\\t//动态数组，从C++11开始支持初始化\\n    for(int i=0;i<n;i++)\\n        cout<<arr[i]<<' ';\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"DxOZF\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"37px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u392f0c40\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u487d18ed\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u17b7d0e4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua096d203\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 0 0 0 \")])])])])])]),_c('h3',{attrs:{\"id\":\"Dr2WK\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T512 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"eFZuq\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufb3c903f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u711c1477\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4bc49089\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2ff086be\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u682eecb6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T512 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u429b81d1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握数组的初始化方法，尤其是部分初始化的作用；理解动态数组 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u46bcd3c7\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u07e96257\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub6610ace\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX503) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"CSiAQ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.3 一维数组的内存模型 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u75c72bbb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从数组的定义中可以获知，一个数组中所有元素的数据类型必须相同。从存储角度，当定义一个数组 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时，编译器根据指定的元素个数和元素的类型分配确定大小（元素类型大小*元素个数）的一块内存，并把这块内存的名字命名为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，名字 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 一旦与这块内存匹配就不能再改变。由此可知，一个数组中所有元素的存储空间是连续的。对于一个数组 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" float a[]={1.2, 2.3, 3.4, 4.5,5.6} \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sizeof(a)=20=sizeof(float)*5 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，各元素的相关数据如下： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"fHktw\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.4\")]),_vm._v(\" 数组元素的地址\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\nint main (  )\\n{\\n    float a[]={1.2, 2.3, 3.4, 4.5,5.6};\\n    cout<<\\\"下标\\\";\\n    for(int i=0;i<5;i++)\\n        cout<<\\\"\\\\ta[\\\"<<i<<']';\\n    cout<<endl;\\n    cout<<\\\"值\\\";\\n    for(int i=0;i<5;i++)\\n        cout<<'\\\\t'<<a[i];\\n    cout<<endl;    \\n    cout<<\\\"地址\\\";\\n    for(int i=0;i<5;i++)\\n        cout<<'\\\\t'<<&a[i];\\n    cout<<endl;\\n    cout<<\\\"a+i\\\";\\n    for(int i=0;i<5;i++)\\n        cout<<'\\\\t'<<a+i;\\n    cout<<endl;\\n    cout<<endl;\\n}\")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udfe715c2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表5.1 数组各元素的相关数据 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"742px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"uVkYL\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud11151ba\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 下标 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u905e224c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[0] \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u84d97ee0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[1] \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u54abcbdf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[2] \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u02ae78e2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[3] \")])])]),_c('td',{attrs:{\"width\":\"127\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ubab4c90a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a[4] \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua1242f02\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 值 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2e0bbe7f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.2 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udb49ddbb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.3 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u450b5935\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3.4 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub1556f3f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.5 \")])])]),_c('td',{attrs:{\"width\":\"127\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5dcb7449\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5.6 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4a4a0bc9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 地址 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u8a3cfde8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe00 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf2be43e9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe04 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u35a106b7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe08 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u37faa00f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe0c \")])])]),_c('td',{attrs:{\"width\":\"127\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4fd9ee82\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe10 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u88b34330\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a+i \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5421bbfc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe00 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u1d85b11d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe04 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u69ef1d0d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe08 \")])])]),_c('td',{attrs:{\"width\":\"123\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u9256ea22\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe0c \")])])]),_c('td',{attrs:{\"width\":\"127\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udf2932f4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0x61fe10 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u21f0f76b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从输出结果中可以看出，第5行相当于同时定义了5个变量，下标从0开始，每个变量存储对应的值。 \")])]),_c('li',{attrs:{\"id\":\"u0adef987\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从表格第3行可以看到，所有元素的内存地址连续，间隔为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sizeof(float) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('li',{attrs:{\"id\":\"u1adb9b1e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a+i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的输出结果中可以看出， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a+i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 与 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" &a[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 相同，都是表示第i个元素的地址。这是因为数组名代表了数组首元素的地址，简称首地址，即 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" +0= \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" =0x61fe00， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a+1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 不代表一个字节，而是表示一个元素的空间，即 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sizeof(float) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。因此第 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 个元素的地址为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a+i*sizeof(float) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u8daf9b97\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 总而言之，数组可以通过偏移快速定位第 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 个元素。偏移在计算机中是一个非常快速的基本运算，这也是数组能够进行快速访问的根本原因。 \")])]),_c('h3',{attrs:{\"id\":\"pNT2u\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T513 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"EHD3a\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue4891310\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"522\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua90f617b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6a593e6f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"97\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue861e59c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"71px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u732ec138\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T513 \")])])]),_c('td',{attrs:{\"width\":\"522\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf51a7786\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组的连续内存分配模型，通过偏移快速定位元素是数组的突出优势。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud72f191f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 理解数组的物理空间和有效元素个数是不同的 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u69d646e0\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/iz3dks#QAfJZ\",\"href\":\"ch3#QAfJZ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T341 \")])])])]),_c('td',{attrs:{\"width\":\"97\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub03b9280\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#AE9qD\",\"href\":\"#AE9qD\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T521 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#fakFb\",\"href\":\"#fakFb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T525 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Km6tT\",\"href\":\"#Km6tT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T528 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#zTfai\",\"href\":\"#zTfai\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T542 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/qvzagc#IS3uW\",\"href\":\"ch6#IS3uW\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T621 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"wVcOg\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.4 数组的基本运算 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u8d7a303f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C/C++中的数组虽然可以看做一个整体，但并不是一种独立存在的数据类型。按照语法规定，不能整体赋值、整体比较、整体输入输出。当需要进行赋值或比较或输入输出时，需要通过循环逐个元素的进行。 \")])]),_c('h3',{attrs:{\"id\":\"Px9Hv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.1 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue04db5b5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输入n个同学的成绩，输出其中小于平均分的成绩。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"DbXBx\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4f7622fd\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7225ce7f\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0bb9a191\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u264f6db0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 6 5 3 1 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue10644a4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 1 \")])])])])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"eF4bW\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.5\")]),_vm._v(\" 数组的输入和比较\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\nint main (  )\\n{\\n    int n;\\n    cin>>n;\\n    int score[n];\\n    double sum=0;\\n    for(int i=0;i<n;++i){\\n        cin>>score[i];\\n        sum += score[i];\\n    }\\n    for(int i=0;i<n;++i)\\n        if(score[i]<sum/n)\\n            cout<<score[i]<<' ';\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u809c1cbe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组毕竟占据较多存储空间，如果能用简单变量解决，可以尽量避免使用数组。本例题中所有元素要使用两遍，当得到平均值后，必须第二次遍历数组，因此必须使用数组记录每个元素。 \")])]),_c('li',{attrs:{\"id\":\"u4e3ce849\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组在第7行定义时，元素数量是变量，因此是一个动态数组，不可以直接进行初始化。只能通过第9-12行的循环，逐个进行赋值。 \")])]),_c('li',{attrs:{\"id\":\"u49abb90d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当需要对每个元素与平均值进行比较时，必须逐个元素进行比较，C/C++中没有提供整体比较的语法支持。 \")])])]),_c('h3',{attrs:{\"id\":\"nbQfZ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T514 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"Y2ByV\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u64df8305\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ubed3eae9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7f8c9ff3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf751fea4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uda671436\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T514 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7afe5085\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 只有多个数据反复利用时，才需要数组；单次使用多个数据尽量不用数组 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u70a4c804\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组不能整体赋值、整体比较、整体输入输出，必须与循环结合 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6d0f394e\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue627c818\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u40d79084\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX502) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX504) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX505) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"AxwhE\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.5 数组作为函数参数 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uc5cf79ab\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当定义一个数组 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int a[10]; \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时，根据前文所述内容可知，同时分配了10个 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sizeof(int) \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 大小的空间。 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 存储了首地址。但并不存储元素的数量，只是从首地址开始，通过偏移访问各个元素。因此当把数组作为函数的参数时，实参数组会把它的地址传递给形参数组，但数组的元素数量并不会被传递。因此数组作为函数的参数时，必须同时传递数组地址和数组中元素的数量，否则无法知道数组的有效范围。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"TXxsb\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.6\")]),_vm._v(\" 最小值下标\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\n\\nint argmin(int n,int arr[]){\\t//数组的元素数量n和数组的首地址\\n    int min = 0;\\t\\t\\t\\t//默认下标为0的元素最小\\n    for(int i=1;i<n;++i)\\n        if(arr[i]<arr[min])\\t\\t//当前元素和最小值元素进行比较\\n            min = i;\\t\\t\\t//min保留最小值的下标\\n    return min;\\n}\\n\\nint main (  )\\n{\\n    int n;\\n    cin>>n;\\n    int a[n+10];\\n    for(int i=0;i<n;++i)\\n        cin>>a[i];\\n    cout<<argmin(n,a)<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"x9EBh\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"37px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufec18252\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4303b9ac\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udcd9f220\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4db32bef\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 3 8 1 9 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udc96391b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u8be6f4b7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 由代码5.6可以看出，把数组作为函数的参数时，必须同时传递元素的数量和数组的地址。 \")])]),_c('li',{attrs:{\"id\":\"u2eea9997\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 关注第4行的形参 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" arr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，可以看到 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 为空。数组定义时，理论上 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中应该注明元素的数量。但是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" arr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是形参，在 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" argmin \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数被调用之前，它没有存储空间。在 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" argmin \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数被调用之后，它的作用就是存放实参的首地址，因此元素数量对它没有任何意义。 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在此仅仅表明 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" arr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是一个数组，即整型数组类型；更准确的说， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" arr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 只是为了存储一个 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类型的地址。因此 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 为空，或者写成 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [0] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 或其他任何整数，对程序运行都没有任何影响。甚至可以将 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" int arr[] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 改写成 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" auto arr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，根据实参赋值决定形参 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" arr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的数据类型，也是可以的。由此可以进一步了解，数组名不包含任何的元素数量信息。 \")])])]),_c('h3',{attrs:{\"id\":\"TFSS3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T515-T516 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"BeKKq\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufc0bd50a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua81ccbf6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2bbb6415\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8e1cfc14\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9256bc32\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T515 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc53b48a9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组作为函数的参数，只是传递首元素地址，与实参共享存储空间 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u94387ee5\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接ca\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/qvzagc#aplSt\",\"href\":\"ch6#aplSt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T625 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7ab60e50\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX512) \")])]),_c('span',{staticClass:\"ne-text\"})])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u13c1d37f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T516 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u691cf4d0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握求数组极值及极值对应下标的方法 \")])])]),_c('td',{attrs:{\"width\":\"70\"}}),_c('td',{attrs:{\"width\":\"67\"}})]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub4caaabe\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX506) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h1',{attrs:{\"id\":\"s7C1R\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2. 一维数组的应用 \")])]),_c('h2',{attrs:{\"id\":\"eVqvU\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.1 数组的插入与删除 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ua76cdc5f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 因为数组的存储空间一定是连续的，因此对于非尾部数据的插入和删除是无法物理实现的，只能通过逻辑方式满足需求。删除时，将被删除元素右侧的所有元素向前平移，插入时将所有元素向后平移，留出插入空间。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"BNQMS\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.7\")]),_vm._v(\" 删除和插入元素\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\nbool remove(int n,int arr[],int pos){\\t//删除长度为n的数组的第pos个元素\\n    if(pos<0 || pos>=n)  return false;\\n    for(int i=pos;i<n-1;++i)\\t//正序遍历\\n        arr[i]=arr[i+1];\\t\\t//删除位置右侧的值向左移动\\n    return true;\\n}\\nbool insert(int n,int arr[],int pos,int val){//在长度为n的数组的第pos个位置插入新元素val\\n    if(pos<0)  return false;\\n    if(pos>n)\\tpos = n;\\t\\t//如果插入位置过大，把数据添加到数组的末尾\\n    for(int i=n-1;i>=pos;--i)\\t//必须倒序循环，保证数据不被覆盖\\n        arr[i+1] = arr[i];\\t\\t//插入位置右侧的值向右移动\\n    arr[pos] = val;     \\t\\t//将新值放到空白处\\n    return true;\\n}\\nvoid print(int n,int arr[]){\\n    for(int i=0;i<n;++i)\\n        cout<<arr[i]<<(i<n-1?' ':'\\\\n');//控制输出间隔\\n}\\nint main (  )\\n{\\n    int n,index;\\n    cin>>n>>index;\\n    int values[n];\\n    for(int i=0;i<n;++i)\\n        cin>>values[i];\\n    n-=remove(n,values,index);\\n    print(n,values);\\n    n+=insert(n,values,index,37);\\n    print(n,values);\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"gY1s4\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0fde5374\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5c8074d2\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc591be8e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u02c4e45a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 3 4 5 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u315f3d0f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 4 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1ffb4f4d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 37 4 5 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u1b9c6e78\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 利用元素左移模拟删除，利用元素右移模拟插入。插入时一定要倒序移位，因为正序移位会出现元素覆盖和数据丢失。请自行尝试体验。 \")])]),_c('li',{attrs:{\"id\":\"ub90944a1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 插入或删除成功返回 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，否则返回 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，借助 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" / \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和1/0的对应关系，对数据总元素进行修正（第28和30行）。也就是说，数组的物理存储空间不会改变的，只是从逻辑上认为元素的总量发生变化。 \")])]),_c('li',{attrs:{\"id\":\"uc789237a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对于插入而言，一定要保证物理存储空间足够用，不要在插入时发生下标超上限的现象。 \")])]),_c('li',{attrs:{\"id\":\"u0231c0ef\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第18-19行对数据分隔显示做了一个示范。从视觉上一个元素加一个空格是没有问题的，但是对于在线评测系统，多出一个空格，可能会导致整个题目被判错，一定严格遵守题目的输出规范和要求。 \")])])]),_c('h3',{attrs:{\"id\":\"AE9qD\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T521 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"LXOiv\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u15df0f02\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7ca76b81\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u189df400\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8ab69cf7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue9c63e1e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T521 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uefe75c83\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组只能对单个元素做逻辑插入和删除，注意循环移位时的元素覆盖问题 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue78ed875\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#pNT2u\",\"href\":\"#pNT2u\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T513 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u32bf7359\"}},[_c('br')])])])])]),_c('h2',{attrs:{\"id\":\"qQ3m1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.2 数组与循环的联动 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"链接51\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有时在题目中没有明显需要数组的提示，可以采用数组记录已知的数据，利用数组可以跟循环联动的特点，极大简化程序的流程。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u7e32dc06\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在例题5.2中，由于每月天数的不规律性，导致无法直接使用循环，只能通过多分支进行逐条处理，代码非常冗余。但是通过把每月天数预置到数组中，让循环与数组形成联动，对程序书写进行了极大的简化，降低了出错的概率。 \")])]),_c('h3',{attrs:{\"id\":\"NA6mZ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.2 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u68d94f5f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 把1月1日当做第1天，当用户输入年份和第n天时，输出第n天是几月几日？ \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"UdIsw\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub46570f9\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5858feb8\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2022 33 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc27a8536\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2月2日 \")])])])])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"RBvZK\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.8\")]),_vm._v(\" 数组与循环的联动\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\n\\nint main (  )\\n{\\n    int year,n;\\n    cin>>year>>n;\\n    int month[12]={31,28,31,30,31,30,31,31,30,31,30,31};\\n    auto leapyear = [](int year){return year%400==0||(year%4==0 && year%100!=0);};\\n    month[1]+=leapyear(year);\\n    int i=0;\\n    while(n>month[i])\\n        n-=month[i++];\\n    cout<<i+1<<\\\"月\\\"<<n<<\\\"日\\\"<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u2c70fb0b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行定义了一个数组，记录了每个月的天数。 \")])]),_c('li',{attrs:{\"id\":\"uf7353724\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行赋值号右侧是一个匿名函数， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" [] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表示后面定义了一个函数，参数和函数体的写法和普通函数定义相同。将定义后的匿名函数赋值给 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" auto \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 变量 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" leapyear \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，此时的leapyear就是一个函数。auto表示根据赋值号右侧的内容自动解析变量的类型。此处的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" leapyear \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 就被解析为函数。对于简单的函数，或只需要使用一次的函数，可以采用匿名函数的方式进行定义。 \")])]),_c('li',{attrs:{\"id\":\"u020fd781\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第10行将二月增加是否为闰年，因为闰年的二月比其他年份的二月多一天，同样是利用了 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" / \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和1/0的对应关系。 \")])]),_c('li',{attrs:{\"id\":\"uf81ae3eb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第12-13行，利用数组和循环的联动，快速简单的定位了月份和日期。 \")])]),_c('li',{attrs:{\"id\":\"u6aac6b47\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第13行的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ++ \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 后面，表示先执行当前表达式的运算，然后再对i进行加1操作。即先执行 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n-=month[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，再执行 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i++ \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。将两条语句简化成了一条语句，但是功能完全相同。初学者如果掌握不好这种技巧，可以将第13行的表达式拆成两条语句，保证代码理解的清晰度。 \")])])]),_c('h3',{attrs:{\"id\":\"WGgmO\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T522-T523 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"WDS2Y\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u82ab1817\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc77b216c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接d6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udc33556b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue9fa759b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T522 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u19bef5cc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 单循环与数组搭配使用，嵌套循环与二维数组搭配使用 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u73e3e40c\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub35f09ed\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#mu9UI\",\"href\":\"ch8#mu9UI\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T874 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u580ca9e4\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX507) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX508) \")])]),_c('span',{staticClass:\"ne-text\"})])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接45\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T523 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7add7016\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握匿名函数的基本使用方法，理解这种形式，不做重点掌握 \")])])]),_c('td',{attrs:{\"width\":\"70\"}}),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('h2',{attrs:{\"id\":\"FCrRm\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.3 尺取法 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uf2277451\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 尺取法又称双指针法，用来解决序列的区间问题，是一种常见的优化技巧。分为反向扫描法和同向扫描法。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u65f7e5cd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反向扫描法又称为左右指针法，即设定两个指针i和j，分别指向数组的头和尾，i和j方向相反，i从头向尾，j从尾向头，在中间集合。虽然设定两个指针，但是对同一个数组同时遍历，算法复杂度为O(n)。初学者由于对语法的不熟悉，容易写成嵌套循环，这样算法复杂度变为O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )，造成了大量无效的遍历。 \")])]),_c('h3',{attrs:{\"id\":\"b9kDc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.3 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ude83e839\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个数组arr，判断数组是否对称。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"uAz0V\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.9\")]),_vm._v(\" 数组的多变量遍历\\n\"),_c('code',[_vm._v(\"bool sym(int n,int arr[])\\n{\\n    for(int i=0,j=n-1;i<j;++i,--j)\\n        if(arr[i]!=arr[j])\\n            return false;\\n    return true;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u23a28952\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注意第3行两个变量同时变化遍历数组的方法。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u48ce52db\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 同向扫描法同样是即设定两个指针i和j，同时指向数组的头或尾，i和j移动方向相同，但偏移速度不同，因此又称为快慢指针法。关键是一个指针处的修改不能影响另外一个指针的遍历。 \")])]),_c('h3',{attrs:{\"id\":\"UP8pF\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习5.1 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ubd75b3ae\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个数组，采用尺取法将数组逆序。 \")])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua0777c31\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 提示：注意交换要在数组的中间停止，否则会把已经逆序的数组重新修改为正序。 \")])])]),_c('h3',{attrs:{\"id\":\"xecmX\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.4 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u2ece06eb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定一个数组arr，要求删除其中的指定值val。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接03\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud5db7a06\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 方案一：基于第2.1小节中的删除元素方法，每次删除一个值，算法复杂度为O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u17ac0c7e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 方案二：新建一个数组，将原数组中的有效值添加到新数组中。以空间换时间，算法复杂度降为O(n)。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ud25a8d1a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 显然第二种方法更好一些。但在一些特殊情况下，要求在原数组上删除指定元素，不允许建立新数组。仔细分析可以发现，一个删除后的数组，元素的数量一定小于或等于原数组，因此可以设置两个索引i和index，i遍历原数组，index遍历保留的元素。因为index小于等于i，因此index处的赋值不会影响i的遍历。具体如下： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"Henlz\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.10\")]),_vm._v(\" 删除指定元素\\n\"),_c('code',[_vm._v(\"int remove(int n,int arr[],int val)\\n{\\n    int index = 0;\\n    for(int i=0;i<n;++i){\\n        if(arr[i]!=val){\\n            arr[index] = arr[i];\\n            index++;\\n        }\\n    }\\n    return index;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ueb7df5ca\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" index一定小于或等于i，因此第6行的赋值操作对第4行正在进行的遍历操作不会造成任何影响。 \")])]),_c('li',{attrs:{\"id\":\"u27c0912c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 一次性删除所有指定的值val。函数最后返回index，代表了保留元素的个数。 \")])]),_c('li',{attrs:{\"id\":\"ueafbbc07\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第八章将要提到的STL的remove算法与以上代码的想法完全一致。既不需要创建新空间，算法复杂度也降低到O(n)。 \")])])]),_c('h3',{attrs:{\"id\":\"HPdn9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习5.2 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6b66711d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 移除一个数组中的重复元素。 \")])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接53\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 提示：依次遍历每个元素，删除其后继元素中与其值相同的元素。 \")])])]),_c('h3',{attrs:{\"id\":\"BNafm\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.5 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u3efeb884\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定两个按非递减顺序的整数数组 nums1 和 nums2，元素数量分别为m 和 n 。合并 nums2 到 nums1 中，使合并后的数组同样保持非递减顺序。nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7aa23ef5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u94188e20\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 方案一、将nums2直接拼接到nums1的尾部，然后采用快速排序，重新达成非递减顺序，算法复杂度为O((m+n)log(m+n))。并没有用到原数组已经有序的条件。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua8fd307e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 方案二、新建一个数组，依次将两个数组中复合条件的数据添加到新数组中。以空间换时间，算法复杂度降为O(m+n)。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u9dad5e63\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果不允许建立新空间呢？主要存在的问题是一个数据可能未被处理前，就被新数据覆盖。但是如果倒序遍历，先让一个索引p指向最后一个元素的位置m+n-1，这样p一定大于或等于m或n，因此可以得到以下方法： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"KCBjU\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.11\")]),_vm._v(\" 合并有序数组 I\\n\"),_c('code',[_vm._v(\"void merge(int nums1[], int m, int nums2[], int n) {\\n    int p=m--+(--n);\\n    while(m>=0&&n>=0){\\t\\t//或while(m+1&&n+1)\\n        nums1[p--] = nums1[m]>nums2[n]?nums1[m--]:nums2[n--];\\n    }\\n    while(n>=0){\\t\\t\\t//或while(n+1)\\n        nums1[p--] = nums2[n--];\\n    }\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u3dba40a2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第2行将p指向数据尾部，注意 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" m-- \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" --n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的使用，之所以使用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" --n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，是因为p应该等于 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" m+n-1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，所以要先减1。（知识点： \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/afrstd#t5tWx\",\"href\":\"ch2#t5tWx\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T268 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])]),_c('li',{attrs:{\"id\":\"u2d6eb975\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" p \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 一定大于或等于m或n，因此第4行的赋值操作对第3行正在进行的遍历操作不会造成任何影响。 \")])]),_c('li',{attrs:{\"id\":\"u5230aca4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第6-8行的循环是为了处理 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 已经被处理完毕，但是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 还有残留数据，这些数据必须迁移到 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中。如果 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 还有残留，那么正好处于应有的位置，不需要处理。 \")])]),_c('li',{attrs:{\"id\":\"ua7d8316a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果nums1已经处理完毕，可以只处理nums2，因此可以将以上代码中的两个循环简化成一个循环。 \")])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"mpDPc\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.12\")]),_vm._v(\" 合并有序数组 II\\n\"),_c('code',[_vm._v(\"void merge(int nums1[], int m, int nums2[], int n) {\\n    int p=m--+(--n);\\n    while(n>=0){\\t\\t//或while(m+1&&n+1)\\n        nums1[p--] = m>=0&&nums1[m]>nums2[n]?nums1[m--]:nums2[n--];\\n    }\\n}\")])]),_c('h3',{attrs:{\"id\":\"o8Kxq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T524 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"oB63X\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf4969c5f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"549\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udaf7c6eb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4b73a5cc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4286ba57\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接32\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T524 \")])])]),_c('td',{attrs:{\"width\":\"549\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2207db94\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握尺取法多指针反向或同向扫描法，掌握多变量方式对序列的遍历，能够把对称判断、原地删除和合并等方法作为解题模板。 \")])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u43b7ca9b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FdHGv\",\"href\":\"ch4#FdHGv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T475 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FdHGv\",\"href\":\"ch4#FdHGv\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T476 \")])]),_c('span',{staticClass:\"ne-text\"})])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接ac\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#K2mZX\",\"href\":\"#K2mZX\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T547 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"Aw7Ea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.4 空间换时间 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u4b1163b7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有时需要在两个以上的多维度上对数据进行遍历，或多单一维度进行多重遍历时，计算复杂度高。通过把数组作为中间媒介，可以实现降维，把嵌套循环简化为并列循环，甚至单循环，能够极大地降低算法的复杂度。这是一种用空间换时间的思路。嵌套循环体现了乘法的思想，并列循环体现了加法的思想，嵌套循环简化为并列循环能对计算效率进行极大地提升。 \")])]),_c('h3',{attrs:{\"id\":\"yuD60\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.6 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"链接35\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 长度为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的长江路上有一排树。如果把长江路看成一个0~ \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的数轴，则数轴上的每个整数0,1,2,... \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 都种有一棵树。由于长江路部分区域要建地铁。这些区域用它们在数轴上的起始点（整数）和终止点（整数）表示，区域之间可能有重合的部分。现在要把建地铁区域的树(包括区域端点)移走，计算移走后路上还有多少棵树。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"B425Z\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u91534c10\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u954f7127\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua2ae780a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ude2a280d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0c175316\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 7 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0ec83477\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 10 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u66f5a055\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u24e773f9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【问题分析】从简单的思维出发，判断每棵树是否在给定的所有范围里。这样需要遍历所有的树 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" L \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，对于每棵树，再次遍历所有范围（假定共有 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" R \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 个范围），树和范围两个维度进行嵌套遍历，时间复杂度为O(L*R)，其中O为算法复杂度表示方法。这种嵌套循环复杂度高，而且容易出错。仔细分析，每棵树只有保留或移走两种状态，可以通过数组记录状态变化。更重要的是，以数组为媒介，可以将嵌套循环拆解为并列循环，时间复杂度降为O(L+R)。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"PVS4D\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.13\")]),_vm._v(\" 空间换时间\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\n\\nint main (  )\\n{\\n    int L;\\n    cin>>L;\\n    bool tree[L+1];\\n    for(auto &e:tree)    e = 1;\\n    int left,right;\\n    while(cin>>left>>right)\\n        for(int i=left;i<=right;++i)\\t//将删除区域的值修改为0\\n            tree[i] = 0;\\n    int sum = 0;\\n    for(auto e:tree)\\n        sum += e;\\n    cout<<sum<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u83a4478b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 因为第8行定义的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" tree \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是一个动态数组，不能进行直接初始化。第9行用范围 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" for \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的形式将数组全部初始化为1。注意这里要改变每个元素的值，因此 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" e \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 必须采用引用形式。 \")])]),_c('li',{attrs:{\"id\":\"u8f7dd609\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14-16行借助true/false和1/0的对应关系，不采用判断，直接将所有数值求和得到剩余树的数量。 \")])]),_c('li',{attrs:{\"id\":\"ud44d039f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行和第15-16行遍历所有的树，第11-13行遍历所有的范围。这两个遍历的中间媒介是数组tree，两个遍历形成并列关系而不是嵌套关系。 \")])])]),_c('h3',{attrs:{\"id\":\"XV2Mo\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.7 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u25c3d26d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？其中 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"l0bKX\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/2d1ce477ad43aec77a0cf4b5d550f3f8.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ( \")])]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://leetcode.cn/problems/climbing-stairs/description/\",\"href\":\"https://leetcode.cn/problems/climbing-stairs/description/\",\"target\":\"_blank\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣70 \")])])]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ) \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3cd4ba49\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 【题目解析】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uaba1a2ec\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 仔细分析题目，如果上到第n-2阶台阶共有f(n-2)种方法，上到第n-1阶台阶共有f(n-1)种方法，则f(n)=f(n-1)+f(n-2)，这其实就是一个斐波那契数列。因此采用递归求解非常简单。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"DpG5i\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.14\")]),_vm._v(\" 递归求斐波那契数列 I\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\nlong long fib(int n){\\n    if(n==1||n==2)return n;\\n    return fib(n-1)+fib(n-2);\\n}\\nint main ()\\n{\\n    int n;\\n    cin>>n;\\n    long long num = fib(n);\\n    cout<<num<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u3eee3ede\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 整个程序一目了然，但是当输入为50时，在codeblocks上的运行时间为55.5秒。耗时的主要原因是重复计算。n越大，重复的越多，耗时就越长。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ue509986b\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"ua8c5fe6f\",\"src\":require(\"../assets/images/1675564329857-752bcb8b-e6a5-40d0-8d7e-d4d03a4f12dd.png\"),\"width\":\"682\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5d840fbd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.2 斐波那契数列的递归展开，以fib(6)为例 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u85eff2c0\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 事实上，如果已经计算过fib(n)，可以存储起来，下次用到的时候直接使用，就可以极大的加快计算速度。这是一个比较经典的以空间换时间的操作。这种方法称为带备忘录的递归方法，可以解决绝大部分递归超时问题。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"z8BKM\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.15\")]),_vm._v(\" 递归求斐波那契数列 II\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\nlong long ret[100]={0,1,2};\\t\\t\\t\\t//建立一个备忘录\\nlong long fib(int n){\\n    if(n && !ret[n])\\t\\t\\t\\t\\t//如果需要更新备忘录\\n    \\tret[n]=fib(n-1)+fib(n-2);\\t\\t//更新备忘录\\n    return ret[n];\\t\\t\\t\\t\\t\\t//返回备忘录中对应的值\\n}\\nint main ()\\n{\\n    int n;\\n    cin>>n;\\n    long long num = fib(n);\\n    cout<<num<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uc1d5e7c9\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 第3行给定了一个全局变量数组，并初始化了fib(1)和fib(2)的值，其余默认为0。全局变量的生命周期贯穿整个程序的运行，可以在任意位置使用。 \")])]),_c('li',{attrs:{\"id\":\"u35dfe888\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 第6行将每次计算的结果保存到数组 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" ret \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 中的对应位置上。计算时第5行先进行判断，如果fib(n)已经计算过（不为0），这直接返回结果，这样极大的加快了计算速度。当输入为50甚至90时，运行时间在codeblocks上大约都为3.5秒，这还是因为包括了输入输出的时间。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uce603abc\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 因为全局变量可以在任意处使用，可能会造成程序的混乱，因此并不建议使用。以下代码采用static静态变量，其作用域在局部，但是生命周期与全局变量相同。初始化操作只会执行一次。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"RKoQP\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.16\")]),_vm._v(\" 递归求斐波那契数列 III\\n\"),_c('code',[_vm._v(\"long long fib(int n){\\n    static long long ret[100]={0,1,2};\\t//建立一个备忘录\\n    if(n && !ret[n])\\t\\t\\t\\t\\t//如果需要更新备忘录\\n    \\tret[n]=fib(n-1)+fib(n-2);\\t\\t//更新备忘录\\n    return ret[n];\\t\\t\\t\\t\\t\\t//返回备忘录中对应的值\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"链接1a\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 第2行定义的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" ret \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 是静态变量，只能在函数内部使用。但是其生命周期与全局变量一致，贯穿整个程序的运行过程。第2行的代码在反复调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" fib \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 函数的过程中会多次执行到该位置，但是这条语句只在第一次执行的时候起作用，后继执行到该位置的时候，会自动忽略第2行语句，因此整个变量的定义和初始化只会执行一次，其效果与全局变量完全相同。 \")])])]),_c('h3',{attrs:{\"id\":\"fakFb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T525 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"V1psN\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5ba8d48f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接91\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud830860d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u155c4cd1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u317ae03a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T525 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u873f98d0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 以空间消耗换取时间效率是算法优化的基本方法 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uce1fc837\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 利用全局变量或静态变量构建数组，实现递归的快速计算，注意静态变量的使用 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udca1f575\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#pNT2u\",\"href\":\"#pNT2u\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T513 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud4ca7379\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#bDkij\",\"href\":\"#bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5dbfa2f6\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Km6tT\",\"href\":\"#Km6tT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T528 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"KKCom\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.5 打表法 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue2be086f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在一些题目中，某些计算过程需要反复使用，这就造成了时间的严重消耗，可能造成超时问题。遇到这种情况，可以一次性计算所有可能输入对应的的结果，并保存到数组中，之后直接查询。这种方式主要对每个可能的计算只操作一遍，从而达到了节省时间的目的。这种利用数组的方式称为打表法。注意这个技巧只适用于输入的值域不大的问题，否则可能会导致内存超限、时间超限等问题。 \")])]),_c('h3',{attrs:{\"id\":\"AuYzI\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.8 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ub03a1782\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定n个不同的非负整数，求这些数中有多少对整数的值正好相差1。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （CSP2014年9月真题） \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubf4899ac\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9d6dd9df\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一行包含一个整数n（1≤n≤1000），表示给定非负整数的个数 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucc8895b1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第二行包含n个给定的非负整数，每个整数不超过10000 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0480e687\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub26900a2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 这n个非负整数中有多少对整数的值正好相差1 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"LpRse\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u14aecf53\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3f21584e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucae2b18b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2543f9a1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 2 6 3 7 8 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7b2f52ab\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u52dd320a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【样例说明】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc813b9d8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 相差为1的整数对包括(2,3), (6,7), (7,8) \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u99f6b07c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【问题分析】朴素的方法是逐个枚举，使用双重嵌套循环，时间复杂度为O( \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )。也可以先排序，然后检测相邻元素是否符合题目规定，时间复杂度为O( \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" log \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )，即排序的复杂度。根据题目说明，每个非负整数最大不超过10000，因此最佳方式是创建一个元素个数为10000的数组，将所有数据标定出来，再进行向量元素检测。时间复杂度降为O( \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"BEfZD\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.17\")]),_vm._v(\" 打表法\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\n\\nint main (  )\\n{\\n    int n;\\n    cin>>n;\\n    bool cnt[10010]= {0};\\t\\t\\t\\t//给定一些冗余空间，防止边界错误\\n    int x,min=10000,max=0,ans;\\n    for(int i=0; i<n; ++i){\\n        cin>>x;\\n        if(x<min)   min = x;\\t\\t\\t//求最小值\\n        if(x>max)   max = x;\\t\\t\\t//求最大值\\n        cnt[x] = 1;\\t\\t\\t\\t\\t\\t//对应x的位置有数值\\n    }\\n    for(int i=min+1;i<=max;++i)\\t\\t\\t//遍历所有有效数值\\n        ans += (cnt[i]+cnt[i-1]==2);\\t//如果相邻两个元素都有效，则相加必为2\\n    cout<<ans<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uad35a1c4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 本题目借助数组，虽然浪费了一定的空间，但是极大降低了算法的复杂度。当对 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" cnt \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 进行赋值后，实际上就是按空间顺序完成了排序，又不需要排序那么复杂。 \")])]),_c('li',{attrs:{\"id\":\"u1218e0ff\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行元素只有10000个，但是边界是最容易出问题的地方，因此额外定义了10个空间。 \")])]),_c('li',{attrs:{\"id\":\"u28c20882\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第16行的遍历，可以是0~10000，但本算法在输入过程中求解了最大值和最小值，降低了遍历的范围。 \")])]),_c('li',{attrs:{\"id\":\"u4856a8a6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第17行也可以修改为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ans += cnt[i]&&cnt[i-1] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，同样表示两个相邻元素都为1时计数加1。 \")])]),_c('li',{attrs:{\"id\":\"u88ade4e2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第17行也可以修改为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ans += cnt[i]&cnt[i-1] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，只有两个相邻元素都为1时，进行“位与”运算的结果才能为1。位运算是底层运算，计算效率最高。 \")])])]),_c('h3',{attrs:{\"id\":\"aIxI7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习5.3 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ud94c6621\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有N个非零且各不相同的整数。请你编一个程序求出它们中有多少对相反数(a和-a为一对相反数)。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （CSP2014年3月真题） \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u497b59e8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub6ad2482\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一行包含一个正整数N (1≤N≤500)。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uee6f0187\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第二行为N个用单个空格隔开的非零整数，每个数的绝对值不超过1000，保证这些整数各不相同。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7ec30186\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u87e5a5bf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 只输出一个整数， 即这N个数中包含多少对相反数。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"UiR5f\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf0333f61\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u103d05d0\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud55b44fc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub15ceffc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 3 -1 -2 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u08caf513\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])])])])])]),_c('h3',{attrs:{\"id\":\"oIzDD\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.9 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u85994bf8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给定n个整数，求第i~j之间所有数据的和。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4c62697a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u12943a79\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一行包含一个正整数N (1≤N≤10000)。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u51820b6a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第二行为N个用单个空格隔开的整数，每个数小于10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7bb9d509\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从第三行开始，每行输入两个整数 \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和 \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" j \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，1≤ \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ≤ \")]),_c('em',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" j \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ≤10000 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud396afe4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc93b914a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输出从输入第三行开始每行指定范围的所有整数的和 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"zsDlf\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf6fac26e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u875c72c5\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u35dfde0f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub64d09f7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 2 6 3 7 8 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接fc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub75c16fa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 6 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u00f4bb38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 11 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u307a54cd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 24 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4582ec1a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目分析】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uc12dd337\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 这个题目从表面上看就是一个简单的数据求和问题，但是求和范围可能有重叠，重叠部分如果范围较大，次数较多时，就会造成严重的时间浪费，从而出现超时问题。以下方法采用打表法进行解决。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"PeIpG\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.18\")]),_vm._v(\" 打表法求数据和\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\n\\nint main (  )\\n{\\n    int n,x;\\n    cin>>n;\\n    int table[10010]= {0};\\n    for(int i=0; i<n; ++i){\\n        cin>>x;\\n        table[i+1] = table[i]+x;\\n    }\\n    int i,j;\\n    while(cin>>i>>j)\\n        cout<<table[j]-table[i-1]<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u637e7aaa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行建立了一个数组，保存在第9~12行中输入数据的累积和。 \")])]),_c('li',{attrs:{\"id\":\"u276d0477\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第15行中，对应范围的两个累积和相减，就得到了这个范围内所有数据的和。这种方法的最大优势就体现在对于重复的范围只计算了一次，去除了时间的反复消耗。 \")])])]),_c('h3',{attrs:{\"id\":\"MUXsu\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.10 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucb538bec\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 计算小于给定非负整数n的所有素数的个数。0 ≤ n ≤ 5 * 10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，当n为0或1时，对应结果为0。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （ \")])]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://leetcode.cn/problems/count-primes/\",\"href\":\"https://leetcode.cn/problems/count-primes/\",\"target\":\"_blank\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣204 \")])])]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"ZQPjS\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接21\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud22a5519\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u466aa86f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u92a53031\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uec63c9f7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【样例说明】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6b83d2bb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 分别为2, 3, 5, 7。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7f91bad8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目分析】如果对范围内的每个数据都进行素数判断，会造成极大的时间浪费。利用打表法，把这个想法倒过来。从2开始向后遍历，将所有数据的倍数标记为非素数，这样统计起来非常简单。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"SQ1Tc\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.19\")]),_vm._v(\" 打表法求素数个数\\n\"),_c('code',[_vm._v(\"#include<iostream>\\nusing namespace std;\\n\\nint main (  )\\n{\\n    int n;\\n    cin>>n;\\n    int res = 0;\\n    bool prime[n+10];\\n    for(auto &e:prime)  e=true;\\n    for (int i = 2; i < n; ++i){\\n        if (prime[i]) {\\t\\t\\t\\t\\t\\t\\t//如果i是素数\\n            ++res;\\t\\t\\t\\t\\t\\t\\t\\t//答案加1\\n            for (int j = i+i; j < n; j+=i)\\t\\t//将i的所有倍数设置为false\\n                prime[j] = false;\\n        }\\n    }\\n    cout<<res<<endl;\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u2feed93a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行建立了一个数组保存所有可能的候选答案，通过第10行全部初始化为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('li',{attrs:{\"id\":\"u45296da0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11-17行从小到大遍历所有可能的候选答案，将素数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的所有倍数全部标记为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" false \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。剩余的就全部为素数。 \")])]),_c('li',{attrs:{\"id\":\"u5fe6714d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 虽然从表面上看是一个嵌套循环，时间复杂度应该为O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )，但是仔细分析就可以知道，第14行的循环是跳跃的，整个程序执行完毕后，数组中的每个元素只被第14行的循环访问一次。 \")])])]),_c('h3',{attrs:{\"id\":\"bDkij\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T526 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"DPUnD\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uaffd11eb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u78b9dae8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"61\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u00d59ae4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"64\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf883bdcc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接54\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0e85ac82\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 打表法是数组应用的最重要方法之一，需要重点掌握 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue02bf2b9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 空间消耗不能过大，一般在 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"j7aKi\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/c7022ea2f7be44ce2b2cc27bef201f60.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 以内，如果题目中没有缩减范围则不能用打表法 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7273c2cc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 尽量减少数组遍历的范围 \")])])]),_c('td',{attrs:{\"width\":\"61\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3c694ee5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#fakFb\",\"href\":\"#fakFb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T525 \")])])])]),_c('td',{attrs:{\"width\":\"64\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub270fa6c\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#cOtOt\",\"href\":\"ch8#cOtOt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T833 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#cR2Bd\",\"href\":\"ch8#cR2Bd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T871 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#jxNPL\",\"href\":\"ch8#jxNPL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T872 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#Yve1p\",\"href\":\"ch8#Yve1p\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T873 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"684\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5f52ed60\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX509) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX510) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"Tpq9G\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.6 排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ud8fc4d48\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 排序是多数值运算中的基本操作，一般分为升序和降序。排序的方法有很多，经典排序方法包括冒泡法、选择法、插入法和归并排序法等。这些算法的动画演示可以参见网站 \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://visualgo.net/zh/sorting\",\"href\":\"https://visualgo.net/zh/sorting\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" https://visualgo.net/zh/sorting \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('div',{staticClass:\"ne-quote\"},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u14bc16b7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" visualgo是一个非常好的算法动画演示平台，很多常用算法都在该网站有动画形式展现。 \")])])]),_c('h3',{attrs:{\"id\":\"wQDhG\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.6.1 冒泡排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u781c2e10\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\"}},[_vm._v(\" 冒泡排序是一种简单的排序算法，它也是一种稳定排序算法。 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 重复遍历要排序的元素，依次比较两个相邻的元素，如果顺序错误就进行交换，直到没有相邻元素需要交换，完成排序。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端（升序或降序排列），就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样，故名“冒泡排序”。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"链接e6\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\"}},[_vm._v(\" 假设对待排序序列(5,1,4,2,8)进行升序排列，第一轮排序将最大元素置于最后： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6d6708bb\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u68921a78\",\"src\":require(\"../assets/images/1658920317330-459be34e-07e0-4642-b243-de5fffd8bd98.gif\"),\"width\":\"800\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4e6c74d0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.3 冒泡排序的第一轮排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uceedb06b\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\"}},[_vm._v(\" 第二轮待排序序列只包含前 4 个元素，将其中最大元素放置在待排序序列尾部： \")]),_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u321c19bd\",\"src\":require(\"../assets/images/1658920445648-234a4e23-9637-405d-91e1-88f3b016d0c5.gif\"),\"width\":\"800\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\",\"text-align\":\"center\"},attrs:{\"id\":\"u3db7541a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.4 冒泡排序的第二轮排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u3eb4b2a8\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(68, 68, 68)\"}},[_vm._v(\" 第三轮待排序序列只包含前 3个元素，将其中最大元素放置在待排序序列尾部： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udb95ad8c\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u3b92afa2\",\"src\":require(\"../assets/images/1658920575968-02c2b058-9ea0-494e-a51c-045b28306f0f.gif\"),\"width\":\"800\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udadd12ea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.5 冒泡排序的第三轮排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u8634c3d1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第四轮只剩下2个元素，对其进行顺序调整，完成排序。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u573d8b85\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"u908d2632\",\"src\":require(\"../assets/images/1658920721916-5732318c-b1ad-40f9-bee8-d957776ba801.gif\"),\"width\":\"800\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua1c2b1e4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.6 冒泡排序的第四轮排序 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"udb1ca1d4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 由此可以推导，对于 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 个元素的排序，需要比较 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n-1 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 轮，对于第 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 轮排序，比较 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" n-i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 次。该算法时间复杂度为O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"mrjZR\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.20\")]),_vm._v(\" 冒泡排序\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\n\\nvoid bubble_sort(int n,int a[]) {\\n    for (int i = 0; i < n; i++) {\\n        //对待排序序列进行冒泡排序\\n        for (int j = 0; j + 1 < n - i; j++) {\\n            //相邻元素进行比较，当顺序不正确时，交换位置\\n            if (a[j] > a[j + 1]) {\\n                int temp = a[j];\\n                a[j] = a[j + 1];\\n                a[j + 1] = temp;\\n            }\\n        }\\n        cout<<\\\"第\\\"<<i+1<<\\\"轮排序：\\\";\\n        for(int j = 0; j< n; ++j)\\n            cout<<a[j]<<' ';\\n        cout<<endl;\\n    }\\n}\\n\\nint main(){\\n    int a[] = { 5,1,4,2,8 };\\n    bubble_sort(sizeof(a)/sizeof(int),a);\\n    return 0;\\n}\")])]),_c('h3',{attrs:{\"id\":\"bgmHW\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.6.2 其他典型排序方法 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uaf3021b1\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 选择法排序 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ：与冒泡法基本流程相同，但是每次比较的时候不进行交换，只是记录最优值的下标，每轮交换一次，将一个极值放到有序位置。只是交换的次数比冒泡法少。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u0ce5646c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 插入法排序 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ：每次取出一个元素，放到已有有序数组的对应位置上。类似打牌时一边摸牌，一边排序。例如山东流行的“保皇”“勾机”等玩法需要四副牌，这种摸牌方法尤其通用。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u7cd20bd0\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 快速排序 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ：每轮随机选取一个元素作为基准，将所有元素分为比基准大和小两组，分别放到基准的左侧和右侧，然后分别对两组采用相同的方法进行处理。这样排序轮次降低为 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"Q2ZuN\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cd40280cdc832013a593b2df92ed2275.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。C++中默认提供的sort函数就是采用的快速排序方法。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"QTNB9\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.21\")]),_vm._v(\" 快速排序函数\\n\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <algorithm>\\nusing namespace std;\\n\\nbool cmp(int a,int b){\\n    return a>b;\\n}\\n\\nint main()\\n{\\n    int n;\\n    cin >> n;\\n    int a[n+3];\\n    for (int i=0;i<n;++i){\\n        cin >> a[i];\\n    }\\n    sort(a,a+n);\\t\\t\\t//升序\\n    //reverse(a,a+n);\\t\\t//逆序\\n    for (int i=0;i<n;++i){\\n        cout << a[i] << \\\" \\\";\\n    }\\n    cout<<endl;\\n    sort(a,a+n,cmp);\\t\\t\\t//按照cmp函数指定的规则进行排序，此处为降序\\n    for (int i=0;i<n;++i){\\n        cout << a[i] << \\\" \\\";\\n    }\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"fe9Di\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc64e9462\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接01\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uadd4410b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua9c16f29\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 1 7 6 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua6197b86\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 5 6 7 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3812d3c5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 6 5 1 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u318c91fb\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" sort \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 默认按照升序排列，如果需要降序，将排列好的数组调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" reverse \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 进行逆序即可。 \")])]),_c('li',{attrs:{\"id\":\"u2e548913\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注意第5-7行自定义的比较函数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" cmp \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，要求返回值为布尔类型，两个参数的数据类型与数组中元素的数据类型相同。其中a和b代表数组中的两个元素。函数体中定义两个元素的比较规则。例如第6行中定义当 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a>b \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时返回为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" true \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，因此第23行的调用结果形成降序。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u762b0a2f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 一般情况下，称某个排序算法稳定，指的是当待排序序列中有相同的元素时，它们的相对位置在排序前后不会发生改变。在NOI竞赛中，经常考察算法的稳定性，下表列出常用排序算法的时间复杂度和稳定性。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\",\"text-align\":\"center\"},attrs:{\"id\":\"u10ca6adf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表5.2 常用排序算法的时间复杂度和稳定性 \")])]),_c('table',{staticClass:\"ne-table no-border\",staticStyle:{\"width\":\"855px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"NR6nV\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#101E60\"},attrs:{\"colspan\":\"7\",\"width\":\"855\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u1680db17\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"#FFFFFF\"}},[_vm._v(\" 各种常用排序算法 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"rowspan\":\"2\",\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2c40f95e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类别 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"rowspan\":\"2\",\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf7152c9c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 排序方法 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"colspan\":\"3\",\"width\":\"409\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6cfeb09f\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时间复杂度 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u58ce580e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 空间复杂度 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"rowspan\":\"2\",\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u83b0542e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 稳定性 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u004e90ac\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 平均情况 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6b8acef7\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最好情况 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ue3bac58b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最坏情况 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#CEF5F7\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u0daa17a5\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 辅助存储 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"rowspan\":\"2\",\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u40ed5293\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 插入排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u92729dc2\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 直接插入 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"udf56efdb\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"HGN1C\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u8d3fd7e5\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"NQ1Na\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/e65a67ac353abeeff44c359310d05c02.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u35d877f3\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"eKgbx\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4c6399fa\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"kCvAS\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u370c7fe7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接a6\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" shell排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u37889af5\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"MvQKF\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/057b59460eee88aad289b71782d747e2.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud8d18d45\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"pWGME\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/e65a67ac353abeeff44c359310d05c02.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua7f3c274\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"ebqyJ\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u730a7963\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"osgIF\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接f2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 不稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"rowspan\":\"2\",\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u1ed5767b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 选择排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ufb545f21\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 直接选择 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7fe9ef31\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"x1xB7\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u205cdd53\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"JBGw0\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua9d7f0c0\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"NmQGS\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6819ae9d\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"ZMn2t\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u74b89cc1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 不稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ued955eb8\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 堆排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua2274385\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"Fm5Y9\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc8839769\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"DnYvO\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u8c5a6c3b\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"zd56k\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u80b48ca2\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"l2ACv\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u52a5fc79\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 不稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"rowspan\":\"2\",\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub7f5a2fa\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 交换排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u63adc47a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 冒泡排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uff08789c\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"M3MEp\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u35912cc9\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"tF5C8\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/e65a67ac353abeeff44c359310d05c02.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u076cbcb0\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"rDZna\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u0f3be563\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"gHKLn\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6e4f51d6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"width\":\"107\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u750bacd4\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 快速排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7eb608aa\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"K9zRk\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u8ba5017e\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"b4kp9\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ufe372be1\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"GNze3\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u4452a5a1\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"Gc5Ot\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u96959b75\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 不稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"colspan\":\"2\",\"width\":\"214\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u069e59f1\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 归并排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub670663a\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"TuDp9\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7a6df89b\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"Lnovf\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u38aa211c\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"c4HQM\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u1a3b185c\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"YXRZA\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u85f71f0f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#F8B881\"},attrs:{\"colspan\":\"2\",\"width\":\"214\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ubbad094b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 基数排序 \")])])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u003ed9ff\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"DdBB5\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/09842c90e02b38248f6f9bca3bba2979.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"145\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua7a0166a\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"Zss1e\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/b4d3ac356aef6e64c1c425155c81b9d8.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uded5575c\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"OtUzu\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/09842c90e02b38248f6f9bca3bba2979.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"124\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uacf71304\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"MYB1Y\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/120f6e4d5da3fdac818f17632cc4f475.svg\")}})])])]),_c('td',{staticStyle:{\"background-color\":\"#F5D480\"},attrs:{\"width\":\"108\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc5c85f02\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 稳定 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{staticStyle:{\"background-color\":\"#8CCF17\"},attrs:{\"colspan\":\"7\",\"width\":\"855\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua5f2187d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 注：基数排序的复杂度中，r 代表关键字的基数，d 代表长度，n 代表关键字的个数 \")])])])])])]),_c('h3',{attrs:{\"id\":\"pyYpq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T527 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"y6HAe\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8cb5b9ba\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2a7d4f6b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub2d829b3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud4a78711\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u82f327cf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udea63818\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 排序是基本算法，理解冒泡法、选择法、插入法和快速排序的基本思想和时间效率；能使用algorithm库中的sort函数对数组进行快速排序，能自定义比较规则 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uaf408078\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/iz3dks#XPPV7\",\"href\":\"ch3#XPPV7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T312 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u80699b14\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"696\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucaf0af93\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX511) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"e3uMh\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2.7 动态规划* \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u4212ada1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 动态规划（Dynamic Programming, DP）是求解多阶段决策问题最优化的一种算法技术。为了解决复杂问题，它将大问题分解为相对简单的子问题，大问题的最优解取决于子问题的最优解。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u49f8e938\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果一个问题，能够把所有可能的答案穷举出来，并且穷举出来后，发现存在重叠子问题，就可以考虑使用动态规划。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 重叠子问题 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是指求解大问题时需要多次重复求解小问题，它曾在 \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#XV2Mo\",\"href\":\"#XV2Mo\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.7 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中被提及。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"链接f7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 下面以例题5.7为例，讲解使用动态规划解题的步骤。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u305d31e7\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一步：穷举分析 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u28ee8075\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 假设爬到第n级台阶共有f(n)种爬法。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ud056e690\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当台阶数n为1时，只有一种爬法，f(1) = 1。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u07eacb16\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当台阶数n为2时，有两种爬法。第一种是直接爬两级，第二种是先爬一级然后再爬一级。f(2) = 2。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u9069da46\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当台阶数n为3时，要么是先爬到第二级台阶然后再爬一级，要么是先爬到第一级台阶然后再直接爬两级。因此f(3) = f(2) + f(1) = 3。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u0c61c59e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当台阶数n为4时，要么是先爬到第三级台阶然后再爬一级，要么是先爬到第二级台阶然后再直接爬两级。因此f(4) = f(3) + f(2) = 5。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ueaefc84f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 以此类推。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接ce\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第二步：确定边界 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue47ffc8c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 通过穷举分析，发现当台阶数n是1或2时，能够直接求得有多少种爬法，即f(1) = 1, f(2) = 2。当台阶数 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"m0HJe\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/6cfed3df29ab5de9a8803963ff06dcd0.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时，已经呈现出规律：f(n) = f(n-1) + f(n-2)。因此f(1) = 1, f(2) = 2就是爬楼梯问题的边界。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc488b046\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第三步：找规律，确定最优子结构 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6a088195\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最优子结构 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是指大问题的最优解可以由其子问题的最优解有效地构造出来。当台阶数 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"zqyTG\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/6cfed3df29ab5de9a8803963ff06dcd0.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 时，有f(n) = f(n-1) + f(n-2)，因此 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\"}},[_vm._v(\" f(n-1)和f(n-2) 就是 f(n) 的最优子结构。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uedc6ea8c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第四步：写出状态转移方程 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u2a3e100f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 通过前面三个步骤，得到状态转移方程如下： \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ucdaa97fe\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"Y9TEb\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/2265b1d76248c03dc23a0239619d08dc.svg\")}})])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u87b7a629\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 使用动态规划解题的模板如下： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"ZtOXQ\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.22\")]),_vm._v(\" 动态规划解题的模板\\n\"),_c('code',[_vm._v(\"// 动态规划解题的模板\\n// dp[0][0][...] = 边界值;\\n// for(状态1: 所有状态1的值){\\n//     for(状态2: 所有状态2的值){\\n//         for(...){\\n//         \\t状态转移方程;\\n//         }\\n//     }\\n// }\\n#include<iostream>\\nusing namespace std;\\nint main ()\\n{\\n    int n;\\n    cin>>n;\\n    int a[n] = {1,2};\\t\\t\\t\\t//设定边界值\\n    for(int i=2;i<n;i++)\\t\\t\\t//遍历所有状态1的值\\n        a[i] = a[i-1]+a[i-2];\\t\\t//转移方程\\n\\tcout<<a[n-1];\\n    return 0;\\n}\")])]),_c('h3',{attrs:{\"id\":\"Eno2R\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.11 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u9cdbda59\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 给你一个整数数组 nums ，找到其中最长严格递增子序列(Longest Increasing Subsequence, LIS)的长度。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucfb6dd5a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 子序列 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （ \")])]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://leetcode.cn/problems/longest-increasing-subsequence/\",\"href\":\"https://leetcode.cn/problems/longest-increasing-subsequence/\",\"target\":\"_blank\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 力扣300 \")])])]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ） \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udeba5c2d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0b14e037\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一行，整数数组nums的元素个数。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub6c27511\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第二行，整数数组nums，整数之间用空格分隔。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc881a350\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 <= nums.length <= 2500，-10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" <= nums[i] <= 10 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0f375c92\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue32f320f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最长严格递增子序列的长度。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"BVIhn\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"37px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub5129e9c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue2f82da3\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0cea57e7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 8 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u88312d24\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 9 2 5 3 7 101 18 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uddfcb250\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])])])])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uecf2e9f4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目分析】 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"#DF2A3F\"}})]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u20f8ff78\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第一步：穷举分析 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u5bdd8e5d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 以样例输入中的数组[10, 9, 2, 5, 3, 7, 101, 18]为例，进行穷举分析： \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u53e3eb72\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums只有一个元素10时，最长严格递增子序列是{10}，长度是1。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1c421c12\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums加入一个元素9时，最长严格递增子序列是{10}或{9}，长度是1。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uac517123\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums再加入一个元素2时，最长严格递增子序列是{10}或{9}或{2}，长度是1。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1936f4cc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums再加入一个元素5时，最长严格递增子序列是{2, 5}，长度是2。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6f74c165\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums再加入一个元素3时，最长严格递增子序列是{2, 5}或{2, 3}，长度是2。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u66b7233e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums再加入一个元素7时，最长严格递增子序列是{2, 5, 7}或{2, 3, 7}，长度是3。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u2d89dc87\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums再加入一个元素101时，最长严格递增子序列是{2, 5, 7, 101}或{2, 3, 7, 101}，长度是4。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u0151f581\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 当nums再加入一个元素18时，最长严格递增子序列是{2, 5, 7, 101}或{2, 3, 7, 101}或{2, 5, 7, 18}或{2, 3, 7, 18}，长度是4。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u5aa4937b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 分析以上过程可得，在以数组每个元素结尾的最长严格递增子序列组成的集合中，元素最多的即为数组的最长严格递增子序列。因此原问题转化成先求出以每个元素结尾的最长严格递增子序列集合，再求最大长度。创建一个整型数组 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" dp \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" dp[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表示以 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 结尾的最长严格递增子序列的长度，得到表5.3。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\",\"text-align\":\"center\"},attrs:{\"id\":\"ubbacb82b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 表5.3 nums[i] 和 dp[i] 的取值 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"750px\",\"text-align\":\"center\"},attrs:{\"border\":\"1\",\"id\":\"CCine\",\"align\":\"center\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6f45551d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 下标 i \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uec4af441\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uec269dea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u354dd24d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ue6fca119\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7dc86c51\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u330d7f3c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2d943d3a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])])]),_c('td',{attrs:{\"width\":\"86\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6627b259\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5e013219\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[i] \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7123c9cd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 10 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u16931e47\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 9 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ue635fe3f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6050f650\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf1c02bb7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf6167094\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 7 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uad51f0cf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 101 \")])])]),_c('td',{attrs:{\"width\":\"86\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5eb4f9ae\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 18 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u52e601c5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" dp[i] \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ue8d1cbdd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ubcaac92c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接36\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6fa4fa7d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接18\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u91c56faf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])]),_c('td',{attrs:{\"width\":\"83\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud71bbc3e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])])]),_c('td',{attrs:{\"width\":\"86\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u27bdeff5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 \")])])])])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"udf0872ab\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 事实上，只要在前面找到 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[j]<nums[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，以 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[j] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 结尾的严格递增子序列加上 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 即可得到以 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 结尾的严格递增子序列。显然，可能形成多种新的子序列，选择最长的子序列，即为以 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" nums[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 结尾的最长严格递增子序列。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u01f51cce\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第二步：确定边界 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u3cb1c1e4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对于某个数组，dp[0] = 1，dp[1] = 2或1， 因此边界就是 dp[0] =1。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub081aa5a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第三步：找规律，确定最优子结构 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u19f13249\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 根据穷举分析，发现如下规律： \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6b5dec73\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对于 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"TO8lP\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f027975f2de3791a604840f12c6665eb.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 并且 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"XTAS7\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/64739660eac42c9283467327709c9699.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，有 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"EUBFD\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/6f0ea4852110e17bda5840375cc33f90.svg\")}})])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue59be560\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"HX6WB\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/f212db0d8037d680672b6dcf97bbcccd.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 就是最优子结构。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucd18944c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第四步：写出状态转移方程 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u04aba16a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 通过前面三个步骤，得到状态转移方程如下： \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u8a69bc4a\"}},[_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"po02K\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/7ebb873bdac3d4b6b21b7846c426e04d.svg\")}})])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u69cea09f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 因此数组nums的最长严格递增子序列的长度为max(dp[i])。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"RWsDJ\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.23\")]),_vm._v(\" 动态规划求最长递增子序列的长度\\n\"),_c('code',[_vm._v(\"# include<iostream>\\nusing namespace std;\\n\\nint lengthOfLIS(int array[], int length){\\n        if(length == 0) return 0;\\n        int dp[length];\\n        int ans = 1;\\n        for(int i = 0; i < length; ++i){\\n            dp[i] = 1;\\n            for(int j = 0; j < i; ++j) \\n                if(array[j] < array[i]) \\n                    dp[i] = max(dp[i], dp[j] + 1);\\n            ans = max(ans, dp[i]);\\n        }\\n        return ans;\\n}\\n\\nint main(){\\n    int length;\\n    cin>>length;\\n    int nums[length];\\n    for(int i = 0; i < length; ++i)\\n        cin>>nums[i];\\n\\tcout<<lengthOfLIS(nums, length);\\n    return 0;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ua96001c8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第4行，数组作为函数的参数时，必须同时传递数组地址和数组中元素的数量，否则无法知道数组的有效范围。详细内容见本章1.5小节。 \")])]),_c('li',{attrs:{\"id\":\"u28b5e8a1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11-12行，只有 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" array[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 大于 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" array[j] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，才能将 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" array[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 放在 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" array[j] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 后面以形成更长的严格递增子序列。 \")])]),_c('li',{attrs:{\"id\":\"u06fd4a0a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第12行用于计算 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"rhsFW\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/7f452a3568af766a0838b1c9d8dee2a3.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，从而确定最终的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" dp[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，这与 \")]),_c('span',{staticClass:\"ne-math\",attrs:{\"id\":\"CnZl6\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/7124203268a26612b2a44250dfc91d17.svg\")}})]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是等价的。 \")])]),_c('li',{attrs:{\"id\":\"u4eaed9ed\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第13行用于计算所有 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" dp[i] \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中的最大值。 \")])]),_c('li',{attrs:{\"id\":\"uc36e49c0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 分析lengthOfLIS函数可知，该函数先解决子问题再递推到大问题，具体过程为使用多个for循环填写数组，根据已计算的结果，逐步递推出大问题的解决方案。这便是动态规划的解题思路。 \")])])]),_c('h3',{attrs:{\"id\":\"Km6tT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T528 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"iMJcI\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5680fc5b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7688ac58\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uabb9314e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0af822ff\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u35f0bac4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T528 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7645f82d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 动态规划将大问题分解为子问题，求解时从子问题递推到大问题 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub51f8eb2\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#pNT2u\",\"href\":\"#pNT2u\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T513 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9e21fa1e\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#fakFb\",\"href\":\"#fakFb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T525 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud8db5685\"}},[_c('br')])])])])]),_c('h1',{attrs:{\"id\":\"rxqUf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3. 二维数组 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ubec09511\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"font-size\":\"14px\"}},[_vm._v(\" C++ 支持多维数组。多维数组声明的一般形式如下： \")])]),_c('details',{staticClass:\"lake-collapse\"},[_c('summary',{attrs:{\"id\":\"ufb553712\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" type name \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" [ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" size1 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ][ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" size2 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ]...[ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" sizeN \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ]; \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uf2bc85f4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" type 可以是任意有效的 C++ 数据类型，arrayName 是一个有效的 C++ 标识符。 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\"}},[_vm._v(\" 例如，下面的声明创建了一个三维 5X10X4 整型数组： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4153bb41\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 136)\"}},[_vm._v(\" int \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" threedim \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" [ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 5 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ][ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 10 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ][ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 4 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ]; \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u1600e452\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\"}},[_vm._v(\" 一个二维数组可以被认为是一个带有 x 行和 y 列的表格。下面是一个二维数组，包含 3 行和 4 列： \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u285e514b\"}},[_c('img',{staticClass:\"ne-image\",attrs:{\"id\":\"M8GwC\",\"src\":require(\"../assets/images/1658992813726-9373dc7b-e339-4b3f-8985-85e8923a0f8f.jpeg\"),\"width\":\"427\"}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u10fe7d60\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.7 二维数组的示意图 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u51b03844\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 多维数组可以通过在括号内为每行指定值来进行初始化。下面是一个带有 3 行 4 列的数组。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud873fac2\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 136)\"}},[_vm._v(\" int \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" a \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" [ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 3 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ][ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 4 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ] \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" = \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" { \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" { \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 0 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 1 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 2 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 3 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" } \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(136, 0, 0)\"}},[_vm._v(\" /* 初始化索引号为 0 的行 */ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}})])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"margin-left\":\"6em\"},attrs:{\"id\":\"u7d5b1997\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}}),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" { \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 4 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 5 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 6 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 7 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" } \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(136, 0, 0)\"}},[_vm._v(\" /* 初始化索引号为 1 的行 */ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}})])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"margin-left\":\"6em\"},attrs:{\"id\":\"u67c79983\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}}),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" { \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 8 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 9 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 10 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 11 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" } \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(136, 0, 0)\"}},[_vm._v(\" /* 初始化索引号为 2 的行 */ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" }; \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue7d88871\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 内部嵌套的括号是可选的，下面的初始化与上面是等同的： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4b6ad1c0\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 136)\"}},[_vm._v(\" int \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}},[_vm._v(\" a \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" [ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 3 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ][ \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 4 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" ] \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" = \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 0, 0)\"}}),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" { \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 0 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 1 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 2 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 3 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 4 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 5 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 6 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 7 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 8 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 9 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 10 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" , \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(0, 102, 102)\"}},[_vm._v(\" 11 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(102, 102, 0)\"}},[_vm._v(\" }; \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ubce31078\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 多维数组如果被进行初始化，或作为函数参数时，紧挨变量名的第一个维度的长度可以省略，其余的元素数量必须明确定义。否则编译器无法获知每个维度的长度。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6b4b00ff\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 编程时，无论是输入输出还是遍历，多维数组通常是和嵌套循环搭配使用的。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"qaU4R\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.24\")]),_vm._v(\" 二维数组遍历\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\n\\nint main ()\\n{\\n    int a[2][5] = { {3,5,7,6,8}, {1,8,2,5,3}};\\n    cout<<\\\"行\\\\\\\\列\\\";\\n    for ( int j = 0; j < 5; j++ )\\n        cout<<'\\\\t'<<j;\\n    cout<<endl;\\n    for ( int i = 0; i < 2; i++ ){\\n        cout<<i;\\n        for ( int j = 0; j < 5; j++ ){\\n            cout <<'\\\\t'<< a[i][j];\\n        }\\n        cout<<endl;\\n    }\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"lB0jP\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueef96383\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc7c9c639\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub8accd82\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u32adee92\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 行\\\\列 0 1 2 3 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0c39d4d2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 3 5 7 6 8 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u14b48965\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 1 8 2 5 3 \")])])])])])]),_c('h3',{attrs:{\"id\":\"uiPXq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.12 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ub4c4ed69\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 旋转是图像处理的基本操作，在这个问题中，你需要将一个图像逆时针旋转90 \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。计算机中的图像可以用一个矩阵来表示。为了旋转一个图像，只需要旋转对应的矩阵即可。 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （CSP2015年3月真题） \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2a9c27cb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6a4550a1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输入的第一行包含两个整数 n、m,分别表示图像矩阵的行数和列数。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2614b15e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 接下来n行，每行包含m个整数，表示输入的图像。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2b201bd7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1≤n,m≤1000， 矩阵中的数都是不超过1000的非负整数。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接8d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uef65a8ce\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输出m行，每行包含n个整数，表示原始矩阵逆时针旋转90° 后的矩阵。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"KXcFh\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubaec865d\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1b5c4907\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uac2722f4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub28eb368\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 5 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubf3ade96\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 2 4 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua127b29b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4c1a9eb9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接fe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 3 \")])])])])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"Utgvz\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.25\")]),_vm._v(\" 旋转矩阵\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\nint a[1005][1005];\\nint main ()\\n{\\n    int n,m;\\n    cin>>n>>m;\\n    for ( int i = 0; i < n; i++ ){\\n        for ( int j = 0; j < m; j++ ){\\n            cin>>a[i][j];\\n        }\\n    }\\n    for ( int j = m-1; j >=0; j-- ){\\n        for ( int i = 0; i < n; i++ ){\\n            cout<<a[i][j]<<' ';\\n        }\\n        cout<<endl;\\n    }\\n    return 0;\\n}\")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ufab44283\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 在二维数组中，最重要的是对角线、上三角和下三角的概念。对角线上行列坐标相等，上三角中的行坐标小于列坐标，下三角中列坐标小于行坐标。 \")])]),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('img',{staticStyle:{\"display\":\"block\",\"width\":\"30%\"},attrs:{\"id\":\"WyisE\",\"src\":require(\"../assets/images/1672278331640-e88682f1-c4d1-407c-8494-2f6ef7177fc2.jpeg\")}})]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub096f195\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 图5.8 二维数组的主对角线和上三角、下三角 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"aN3VP\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.26\")]),_vm._v(\" 对角线图案\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\n\\nint main ()\\n{\\n    int n;\\n    cin>>n;\\n    int a[n][n];\\n    for ( int i = 0; i < n; i++ ){\\n        for ( int j = 0; j < n; j++ ){\\n            a[i][j]=abs(i-j);\\n            cout<<a[i][j]<<' ';\\n        }\\n        cout<<endl;\\n    }\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"Ralfh\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u04cda78a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u03261e32\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2177d376\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf39f0907\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 1 2 3 4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub32124db\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 0 1 2 3 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud3198c2e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 1 0 1 2 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u62ab26cd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 2 1 0 1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u78d4ff60\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4 3 2 1 0 \")])])])])])]),_c('h3',{attrs:{\"id\":\"D8kyt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T531 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"j8JCx\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5085b907\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ufd179469\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u16ecd914\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u69dd8e6c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2beb1e10\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T531 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc4085f83\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握二维数组的基本使用方法，掌握主对角线、上三角、下三角的概念 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue6d00adb\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#sDNu2\",\"href\":\"#sDNu2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T511 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接22\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/qvzagc#WC0X9\",\"href\":\"ch6#WC0X9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T623 \")])])])])])])]),_c('h1',{attrs:{\"id\":\"JEgY6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4. C++的字符串 \")])]),_c('h2',{attrs:{\"id\":\"gItBo\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.1 字符串的基本操作 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ude345260\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串是常见的基本类型，在C++中提供了string类型进行字符串处理。可以将字符串理解成一个数组，其中每个元素都是一个字符，可以按照数组的形式进行访问。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"jHFGi\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.27\")]),_vm._v(\" 以数组的形式访问字符串\\n\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <string>\\nusing namespace std;\\nint main(){\\n    string s = \\\"1234567890\\\";\\n    for(int i=0,len=s.length(); i<len; i++){//采用数组形式进行遍历\\n        cout<<s[i]<<\\\" \\\";\\n    }\\n    cout<<endl;\\n    s[5] = 'a';\\t\\t\\t//修改字符串中某个字符\\n    cout<<s<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"YliaL\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6d4e95c2\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u705cceb8\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8acd97ad\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u31b98cee\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 2 3 4 5 6 7 8 9 0 \"),_c('br')]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 12345a7890 \")])])])])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u95fefb43\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串在C语言中是用'\\\\0'结尾的字符数组进行表达的，但是操作和理解上都比较复杂，按照数组的基本规定，不能进行整体赋值，不能进行整体比较。因此在在C++中将字符数组封装成了一个类string，通过成员函数和操作符重载等一系列面向对象的处理，string类在处理上变得非常简单。例如当需要将两个字符串进行拼接时，只需要用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" + \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 进行完成。此外string还提供了增删改查等基本操作： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"eaCxb\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.28\")]),_vm._v(\" string类提供的基本操作\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\n\\nint main(){\\n    cout<<\\\"字符串拼接：\\\"<<endl;\\n    string s1 = \\\"first \\\";\\n    string s2 = \\\"second \\\";\\n    cout<<s1+s2<<endl<<s1+\\\"third\\\"<<endl;\\n    cout<<\\\"插入子字符串：\\\"<<endl;\\n    s1.insert(3,\\\"aaa\\\");\\n    cout<<s1<<endl;\\n    cout<<\\\"删除子字符串：\\\"<<endl;\\n    s1.erase(3);\\n    s2.erase(3,2);\\n    cout<<s1<<endl<<s2<<endl;\\n    cout<<\\\"抽取子字符串：\\\"<<endl;\\n    s1 = \\\"first third second\\\";\\n    s2 = s1.substr(6, 5);\\n    cout<<s2<<endl;\\n    cout<<\\\"字符串查找：\\\"<<endl;\\n    s1 = \\\"first second third second\\\";\\n    s2 = \\\"second\\\";\\n    size_t index = s1.find(s2,7);\\n    if(index < s1.length())\\n        cout<<\\\"Found at index : \\\"<< index <<endl;\\n    else\\n        cout<<\\\"Not found\\\"<<endl;\\n    index = s1.rfind(s2,7);\\n    if(index < s1.length())\\n        cout<<\\\"Found at index : \\\"<< index <<endl;\\n    else\\n        cout<<\\\"Not found\\\"<<endl;\\n    cout<<\\\"查找子字符串任意字符在字符串中首次出现的位置：\\\"<<endl;\\n    index = s1.find_first_of(s2);\\n    if(index < s1.length())\\n        cout<<\\\"Found at index : \\\"<< index <<endl;\\n    else\\n        cout<<\\\"Not found\\\"<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"h46DV\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u825d0821\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4e997850\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接61\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucc226c1a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串拼接： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接36\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" first second \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u25c2e7fb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" first third \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u60325d9c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 插入子字符串： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8de432ca\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" firaaast \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue472f3bd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 删除子字符串： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf955d9b4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" fir \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接af\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" secd \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u70f6851f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 抽取子字符串： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue3267cc6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" third \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua62c9ecb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串查找： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9d2fb2c5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Found at index : 19 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6bc0543e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Found at index : 6 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2e4bf8a7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 查找子字符串任意字符在字符串中首次出现的位置： \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u945d951c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Found at index : 3 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ubaf6ee95\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" insert() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数可以在 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串中指定的位置插入另一个字符串，第一个参数表示要插入的位置，也就是下标；第二个参数表示要插入的字符串。第10行在下标为3的位置插入了一个子串\\\"aaa\\\"。 \")])]),_c('li',{attrs:{\"id\":\"u2714a4f3\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"background-color\":\"rgb(238, 238, 238)\",\"font-size\":\"14px\"}},[_vm._v(\" erase() \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数可以删除 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中的一个子字符串。第一个参数表示要删除子字符串的起始下标，第二个参数表示要删除子字符串的长度。如果没有第二个参数，那么直接删除到字符串结束处的所有字符。 \")])]),_c('li',{attrs:{\"id\":\"u811f72d7\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(51, 51, 51)\",\"background-color\":\"rgb(238, 238, 238)\",\"font-size\":\"14px\"}},[_vm._v(\" substr() \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数用于从 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串中提取子字符串。第一个参数为要提取的子字符串的起始下标，第二个参数为要提取的子字符串的长度。 \")])]),_c('li',{attrs:{\"id\":\"u2a53ad25\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" find() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数用于在 string字符串中查找子字符串出现的位置。第一个参数为待查找的子字符串，第二个参数为开始查找的位置（下标）；如果不指明，则从第0个字符开始查找。最终返回的是子字符串第一次出现在字符串中的起始下标。如果没有查找到子字符串，那么会返回一个无穷大值。第23行的查找从下标7开始，因此找到的是第二个second出现的位置19。 \")])]),_c('li',{attrs:{\"id\":\"u02e08b73\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" rfind() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数与 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" find() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类似，但是它最多查找到第二个参数处，如果到了第二个参数所指定的下标还没有找到子字符串，则返回一个无穷大值。 \")])]),_c('li',{attrs:{\"id\":\"u2926ca9f\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" find_first_of() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数不把子串作为一个整体，而是查找子串中任意字符在字符串中第一次出现的位置。第34行进行查找时，'s'出现在second中，并且它在s1中的下标为3，因此返回结果为3，并不是second的6。 \")])]),_c('li',{attrs:{\"id\":\"链接43\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" 在string的众多函数中，涉及位置、长度信息时，使用的数据类型都是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" size_t \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" ，在64位系统中 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" size_t \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" 定义为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" long long unsigned int \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" ，在32位系统中定义为 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" unsigned int \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(77, 77, 77)\",\"font-size\":\"16px\"}},[_vm._v(\" ，也就是一个无符号的整型。 \")])])]),_c('h3',{attrs:{\"id\":\"eRcMx\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T541 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"oCLEW\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接0c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"461\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u44a295c4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc93f9fc6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"105\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udd375b4b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udb43b1e7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T541 \")])])]),_c('td',{attrs:{\"width\":\"461\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue50bb5f1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握string字符串增删改查的基本操作和对应的函数 \")])])]),_c('td',{attrs:{\"width\":\"94\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u29d1a12b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/afrstd#LBVF5\",\"href\":\"ch2#LBVF5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T243 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#sDNu2\",\"href\":\"#sDNu2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T511 \")])])])]),_c('td',{attrs:{\"width\":\"105\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接aa\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#ucMFa\",\"href\":\"ch8#ucMFa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T832 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#kYcFw\",\"href\":\"ch8#kYcFw\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T842 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"660\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf034c48d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX513) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX514) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"AUfOt\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.2 字符串的容量和长度* \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uc310ba21\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 字符串的长度和存储容量是两个概念，二者并不一致。长度指字符串中实际有效的字符数量，而存储容量是指对该字符串分配的存储空间大小。长度可以用size()或length()函数获取，两个函数是完全等价的；存储容量用capacity()获取。长度和容量为什么会不相等呢？因为字符串本质上是一个字符构成的数组，数组中所有元素在内存中必须连续分配。当字符串长度发生变化，已有空间不能满足需求时，就需要重新分配空间，而为了保证空间的连续性，只能进行全部存储空间的重新分配。字符串作为常用数据类型，其基本操作增删改都会涉及到长度变化，如果每次都全部重新分配内存空间，运行效率将会变得非常低。因此通常字符串的容量都要大于有效字符的长度，这样当字符串长度进行小范围变化时，不需要重新分配空间。而当出现空间不足的情况时，重新分配的新空间还是会有一定的冗余度。至于新空间具体是多少，是由操作系统提供的策略进行保障的，用户不需要过多了解。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"vFA73\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.29\")]),_vm._v(\" 字符串的容量和长度\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\n\\nint main(){\\n    string s;\\n    cout<<s.empty()<<endl;\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    s=\\\"abcdefghijklmnopqrstuvwxyz\\\";\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    s=\\\"abcdefghijklmnopqrstuvwxyzabcdefg\\\";\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    s.resize(20);\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    s.resize(70);\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    s.reserve(80);\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    s.reserve(50);//或s.reserve()\\n    cout<<s.size()<<'\\\\t'<<s.capacity()<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"v67O8\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udf465b03\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9be33970\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua46e4da5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc6fccaf1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u59f65a8b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 0 15 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf2d70a4d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 26 30 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uce58d709\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 33 60 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub9e82173\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 20 60 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua77f0941\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 70 120 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue772ac33\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 70 80 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udef5bd7e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 70 70 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ufd4cde6d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 实际输出结果与执行环境有关，可能会有所差异，但是原理上相同。 \")])]),_c('li',{attrs:{\"id\":\"u99ef2917\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 可以通过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" resize() \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 函数调整字符串的长度(size)，通过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" reserve() \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 函数调整字符串的容量(capacity)。size调整时会导致capacity跟随发生变化，但是capacity调整时，size不会发生变化。 \")])]),_c('li',{attrs:{\"id\":\"u4e88e11b\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" empty \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 可以判断一个字符串是否为空，其效率比 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" size() \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 函数要高。 \")])]),_c('li',{attrs:{\"id\":\"u8689a38f\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 第7行看到空字符的size为0，但是其容量并非为0，也就是说，当字符数量小于15时，不需要为该字符串重新分配空间。 \")])]),_c('li',{attrs:{\"id\":\"ue7c2cf7b\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 第8行因为新字符串长度超过15，size变为实际长度26，但是capacity=30>26，第10行再次打破capacity的限制变成33后，capacity被调整为60。第12行通过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" resize \")])]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"font-size\":\"16px\"}},[_vm._v(\" 函数将size变小后，capacity不会发生变化，但第14行将size变大后超过了当前的capacity，capacity被再次扩容。可以确定，capacity会一直大于等于size，但具体的值是根据操作系统的策略进行动态调整的。 \")])]),_c('li',{attrs:{\"id\":\"ua1725432\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string可以调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" reserve() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 缩减实际容量。但用一个“小于现有容量”的参数调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" reserve() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，是一种非强制性请求。也就是说可能想要缩减容量至某个目标，但不保证一定达成。string的 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" reserve() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 参数默认值为0，所以调用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" reserve() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 并且不给参数，就是一种“非强制性适度缩减请求”。第18行缩放目标小于size的值，但新的capacity变为70，并没有按照目标指示变成50或0。 \")])])]),_c('h3',{attrs:{\"id\":\"MuqMr\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.13 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u99810e85\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 完成函数string str_remove(string s, char ch)，从s中删除指定的字符ch，并将剩余字符串作为返回值。 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"evXWR\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub59cfe6a\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u909b8f93\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2a488e3b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" s=\\\"abbce\\\", ch='b' \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5d3dd7fa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ace \")])])])])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"s01yL\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.30\")]),_vm._v(\" 删除指定字符\\n\"),_c('code',[_vm._v(\"string str_remove(string s, char ch)\\n{\\n    size_t j=0;\\n    for(size_t i=0; i<s.size(); i++)\\n        if(s[i]!=ch)\\n            s[j++]=s[i];\\n    s.resize(j);\\n    return s; \\n}\")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ub287144e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string在本质上是由字符组成的数组。不能做物理删除，只能形成逻辑删除。比较自然的思路是，每次遇到指定字符时，都进行前移操作，形成逻辑上的删除效果。但这种方法需要嵌套循环，算法复杂度为O(n \")]),_c('sup',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" )。代码5.30中，借助了复制形成新字符串的想法，将留存的字符形成新的字符串。因为删除后的字符串长度一定小于或等于原字符串，即 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i>=j \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，因此可以在原字符串的空间上完成复制操作。j只有在找到符合要求的字符后，才执行加1操作。这种想法将算法复杂度降为O(n)，并且不需要开辟新的空间。 \")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u52c4cdbe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第3-4行中 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" i \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" j \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的数据类型定义为size_t，无论是size()还是length()返回的数据类型都是size_t，保证数据类型的兼容性。size_t依赖于编译器，在32位编译器下等同于unsigned int，在64位编译器下等同于unsigned long long，其值永远非负。 \")])]),_c('li',{attrs:{\"id\":\"u69755ee1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第7行中用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" resize() \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 重新调整了s的长度，否则删除处理后s的长度保持不变。 \")])])]),_c('h3',{attrs:{\"id\":\"zTfai\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T542 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"XqduF\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc1cdf6cf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u61e65e71\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6f07bdca\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6b55ad32\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接5f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T542 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud9c7fc21\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 明确区分字符串的物理空间和逻辑上的有效空间，新建立的字符串一定要重新resize，否则逻辑空间长度不正确 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u78637a5d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#pNT2u\",\"href\":\"#pNT2u\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T513 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucea8028d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#BPKTU\",\"href\":\"ch8#BPKTU\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T825 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"Vfxnc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.3 字符串与整型的相互转换 \")])]),_c('h3',{attrs:{\"id\":\"Stkta\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.3.1 字符串转数值 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u5923d9d8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" cin可以从标准输入流中读取整型或其他类型的数据，因此可以将字符串首先转换为流数据，然后从流中读取相应类型的数据，这就是转换的第一种方法；此外，C语言的库函数中存在字符串转换其他标准数据类型的函数，例如：字符串转整型atoi，字符串转浮点数atof等，但C语言中不存在string类型，需要先调用string的c_str()函数将string转换为C风格字符串，才能得到正确的结果。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"ER6fd\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.31\")]),_vm._v(\" 字符串转数值\\n\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<cstdlib>      //atoi,atof\\n#include<sstream>       //istringstream\\nusing namespace std;\\n\\nint main()\\n{\\n    string a=\\\"1234\\\";\\n    //使用字符串流将字符串转换为整型\\n    istringstream is(a); //构造输入字符串流，流的内容初始化为“12”的字符串\\n    int i;\\n    is >> i; //从is流中读入一个int整数存入i中\\n    cout<<i+1<<endl;  //i已经是整型，可以进行数学运算\\n    //atoi和atof的使用方式\\n    cout<<atoi(a.c_str())-1<<endl;     //注意一定要使用c_str函数将string转换为C风格字符串\\n    cout<<atof(\\\"1212.34\\\")+1<<endl;     //双引号构成的字符串是C风格字符串\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"Uelpq\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8c832ce9\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1e9f8a6b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uba51633b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4ea75a3f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1235 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0af9fec1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1233 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue2d0c03c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1213.34 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ua1c1e480\"}},[_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" atoi \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 和 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" atof \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 是C语言函数，只支持C语言风格字符串，即以 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" \\\\0 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 结尾的字符数组。如果用到 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" string \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 类型，必须通过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" c_str \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 函数转换为C风格字符串。 \")])])]),_c('h3',{attrs:{\"id\":\"AhO5J\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T543-T544 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"kKhdp\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubcaad7e8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uad510df1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u84b54ee1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u58e4bad2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u30993e50\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T543 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2aeb5c91\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握字符串转数值的常用方法。istringstream虽然使用上比较繁琐，但是好用 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc0b89462\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FpCPw\",\"href\":\"ch4#FpCPw\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T484 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u519f65b0\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u590b48d5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T544 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue2ff300e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 了解string与C风格字符串不同，以及通过 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" c_str \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 完成转换 \")])])]),_c('td',{attrs:{\"width\":\"70\"}}),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('h3',{attrs:{\"id\":\"JeULu\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.3.2 数值转字符串 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u4ebfe2da\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C++中的std提供了标准的函数to_string()可以将基础数据类型转换为字符串，不需要任何头文件。函数to_string()可以满足绝大多数情况下的转换需求，但是如果有精度和宽度限制，或其他特殊需求时，处理比较繁琐。这时可以使用sprintf函数将需要的内容转换为C风格字符串，然后再将C风格字符串转换为string类型。sprintf函数与函数printf的使用方法几乎完全类似，只是printf将结果打印到标准输出中，而sprintf将结果打印到一个C风格的字符串中。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"H9HcS\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.32\")]),_vm._v(\" 数值转字符串\\n\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<sstream>\\t\\t//ostringstream的头文件\\nusing namespace std;\\n\\nint main()\\n{\\n    //to_string方式\\n    cout<<to_string(1234)<<endl;\\n    cout<<to_string(1234.56)<<endl;\\n    //sprintf方式转换为C风格字符串\\n    char str[1000];\\t\\t//C风格的字符数组用来存储C风格的字符串\\n    sprintf(str,\\\"%.2f\\\",1.2345);\\n    //C风格字符串转换为string类型\\n    string s=str;\\t\\t//初始化\\n    string s1(str);\\t\\t//构造函数\\n    string s2 {str};\\t//初始化\\n    cout<<s<<endl;\\n    cout<<s1<<endl;\\n    cout<<s2<<endl;\\n    ostringstream oss;\\n    oss<<3.14;\\n    oss<<\\\" \\\";\\n    oss<<55555555;\\n    cout<<oss.str();\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"k34j7\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接44\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5ef407bd\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u82c7b1b9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1529fbca\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1234 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubbe18caa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1234.560000 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u74cb39d1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.23 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u81f79acc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.23 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u7ead3c76\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1.23 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue1d78aa1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3.14 55555555 \")])])])])])]),_c('h3',{attrs:{\"id\":\"ADJJr\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T545 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"FndsP\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufb180b32\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua18200e5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u77e0b94f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub053fbcd\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua9c80eb7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T545 \")])])]),_c('td',{attrs:{\"width\":\"559\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8550f575\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握数值转字符串的基本方法，最重要的方法是 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" to_string \")])])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udbeed6ae\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ostringstream是C++中拼接字符串的重要方法 \")])])]),_c('td',{attrs:{\"width\":\"70\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u67ab53a5\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubc255612\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#CUEPT\",\"href\":\"#CUEPT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T546 \")])])])])])])]),_c('h2',{attrs:{\"id\":\"ROwVJ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.4 字符串分割 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue26beeb1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串分割是常见操作，在Python，Java等语言中，可以通过简单的调用split完成分割，但是C/C++中不存在这样的函数。C语言中可以采用“循环+strtok”的方式完成分割，但代码比较繁琐。本节提供两种基于字符串数据流的方法，简单有效地完成分割操作。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"XFh3o\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.33\")]),_vm._v(\" 字符串分割\\n\"),_c('code',[_vm._v(\"#include <iostream>\\n#include <sstream>\\nusing namespace std;\\nint main()\\n{\\n    string str = \\\"good good study day day up\\\";\\n    istringstream in(str);\\t\\t\\t\\t\\t\\t//将字符串转换为数据流\\n// 方法1：借助数据流以空白符分割的特性，形成字符串的分割\\n    string s;\\n    while (in >> s){\\n        cout<<s<<' ';\\n    }\\n    cout<<endl;\\n\\n    str = \\\"good,good,study,day,day,up\\\";\\n    istringstream in2(str);\\t\\t\\t\\t\\t\\t//将字符串转换为数据流\\n// 方法2：利用自定义分割符的getline函数，达到采用任意字符分割的效果\\n    while (getline(in2, s, ',')){  \\t//这里单引号要注意，第3个参数可以是任意字符\\n        cout<<s<<' ';\\n    }\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"G9Zvy\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接3d\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue8c28edd\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2d1063c7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u079dbb94\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" good good study day day up \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u871dd33f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" good good study day day up \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"链接90\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果分割符为空白符，采用方法1更加简单；如果分割符为任意字符，只能采用方法2。 \")])]),_c('li',{attrs:{\"id\":\"u60711e1f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 采用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ostringstream \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对字符串进行拼接，采用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" istringstream \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对字符串进行分割。 \")])])]),_c('h3',{attrs:{\"id\":\"CUEPT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T546 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"uP0mE\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ube9fef26\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u23b655ea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua45d6998\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucf0a1e39\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"37px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc48f8683\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T546 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接f8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握用数据流对字符串进行分割的方法 \")])])]),_c('td',{attrs:{\"width\":\"132\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u81eeb202\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/afrstd#ri2d9\",\"href\":\"ch2#ri2d9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T271 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FpCPw\",\"href\":\"ch4#FpCPw\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T484 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#ADJJr\",\"href\":\"#ADJJr\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T545 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf94e1411\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#K2mZX\",\"href\":\"#K2mZX\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T547 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"684\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua347047d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX514) \")])]),_c('span',{staticClass:\"ne-text\"}),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX515) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h2',{attrs:{\"id\":\"o43D1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.5 子串问题 \")])]),_c('h3',{attrs:{\"id\":\"nES6r\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.14 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u66d2ea1d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 昕哥有一串很长的英文字母，可能包含大写和小写。在这串字母中，有很多连续的是重复的。昕哥想了一个办法将这串字母表达得更短：将连续的几个相同字母写成字母+出现次数的形式。例如，连续的5个a，即 aaaaa，简写成 a5。对于这个例子：aaaaaCCeeelHH，昕哥可以简写成 a5C2e3lH2。为了方便表达，昕哥不会将连续的超过9个相同的字符写成简写的形式。请帮助昕哥完成简写。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua621594f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"u6a9ffb01\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输入一行为一个由大写字母和小写字符构成的字符串，长度不超过100000。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2f3e916d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"ua54693d8\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输出为一行字符串，表示简写后的字符串。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"iJmhe\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.34\")]),_vm._v(\" 子串问题\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\nvoid print(const string& s){\\n    if(s.size()==1||s.size()>9)\\n        cout<<s;\\n    else\\n        cout<<s[0]<<s.size();\\n}\\nint main() {\\n\\tstring a;\\n\\tcin>>a;\\n\\tsize_t left=0;\\n    a += '$';\\n\\tfor(size_t j=1;j<a.size();j++){\\n        if(a[j]^a[left]){\\t\\t\\t\\t\\t//或写成if(a[j]!=a[left])\\n            print(a.substr(left,j-left));\\n            left = j;\\n        }\\n    }\\n\\treturn 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"KNf10\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接92\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接39\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc894fc48\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" aaaaaCCeeelHH \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u39bece20\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" a5C2e3lH2 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u643ad9e5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 对于每个子串的缩写，是一个相对比较独立的过程。以上代码中将其独立成一个函数 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" print \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，这样能有效降低程序的复杂度，强烈建议使用。 \")])]),_c('li',{attrs:{\"id\":\"u8defc159\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 用变量 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" left \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 记录每个子串的起点，然后用 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" substr \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 截取每个子串，分别送到 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" print \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中去进行缩写。这是子串拆分的经典方法。其本质上就是采用尺取法的同向扫描，利用快慢指针形成字符完全相同的“移动窗口”，然后对移动窗口做出相应的简写处理。尺取法是处理子串分隔的一种基本方法。 \")])]),_c('li',{attrs:{\"id\":\"uff3ac3f5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第15行用异或操作判断两个元素不相等，它与直接书写不等于是等价的。 \")])]),_c('li',{attrs:{\"id\":\"ucfbefef7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 特别注意第13行的操作。因为循环是对有效部分进行操作，当第14行循环结束时，最后一个子串并未得到相应的处理。因此在第13行中插入一个原有字符串中不可能出现的字符，保证原字符串中的最后一个子串被处理，又对题目要求的结果没有任何影响。这种方法也称为 \")]),_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 边界填充法 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。这是一个非常便捷的技巧。如果没有这行处理，必须在循环结束时对最后一个子串进行处理。这也是一个非常容易产生错误的地方。 \")])])]),_c('h3',{attrs:{\"id\":\"K2mZX\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T547-T548 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"ejdjy\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u93757bb4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6c8eb9a2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9caa0abe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2cfcec7d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue4cdfe26\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T547 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9cb37961\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握使用尺取法进行子串分隔，特别注意最后一个子串的处理，掌握边界填充法 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucc69dd49\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#o8Kxq\",\"href\":\"#o8Kxq\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T524 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#CUEPT\",\"href\":\"#CUEPT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T546 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u51f8eb20\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"677\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u558a493b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX516) \")])]),_c('span',{staticClass:\"ne-text\"})])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucec4ad73\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T548 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u75d60bab\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 将相对独立的功能抽取为函数，将极大减轻程序书写逻辑 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u8f58cdd8\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/iz3dks#VKSK4\",\"href\":\"ch3#VKSK4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T331 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}})])])]),_c('h2',{attrs:{\"id\":\"F1rgU\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 4.6 高精度计算 \")])]),_c('h3',{attrs:{\"id\":\"JkiCi\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.15 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u5a7801fe\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输入两个不超过100位的位数相等的正整数，求其和。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u938fca7b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【题目分析】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"u8d7e38fb\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" C++中提供的最大整数类型为long long，为64位，大概表示 \")]),_c('span',{staticClass:\"ne-math\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"},attrs:{\"id\":\"e1aok\"}},[_c('img',{attrs:{\"src\":require(\"../assets/images/fccc9702a18cbf05973072ab08a6c8d4.svg\")}})]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 量级，显然无法表示题目所述的整数。因此需要用字符串表达这两个100位的整数，通过小学所学的逐位计算的方法计算加法。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"fBFW8\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.35\")]),_vm._v(\" 大数计算\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\nstring plus(const string& s1,const string& s2){\\n    string r=s1;\\n    int carry = 0;\\n    for(size_t i=r.size()-1;i<r.size();i--){\\n        int temp = s1[i]-'0'+s2[i]-'0'+carry;\\n        r[i] = temp%10+'0';\\n        carry = temp/10;\\n    }\\n    return carry?\\\"1\\\"+r:r;\\n}\\nint main() {\\n\\tstring s1,s2;\\n\\tcin>>s1>>s2;\\n\\tcout<<plus(s1,s2)<<endl;\\n\\treturn 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"N6lTE\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u61ab441b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u057d528f\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u11526eea\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 686897979708804564328634 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2a311c95\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 475825687845753588322687 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u36838e1f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1162723667554558152651321 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u0dc33f76\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 这是一个模拟加法计算过程的算法，第4行让结果 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" r \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 有一个初始长度，然后第6行的循环逐位执行加法操作。注意循环条件有点不合常规，这是因为size_t是unsigned类型，-1是该类型的最大值，一定大于字符串长度。 \")])]),_c('li',{attrs:{\"id\":\"u5b245d30\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 按照加法计算规则，每位的结果都是对应两位相加，并且加上进位。设置初始进位为0。 \")])]),_c('li',{attrs:{\"id\":\"u416a909d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11行是为了防止最高位有进位，根据加法规则，进位只能是1。 \")])])]),_c('h3',{attrs:{\"id\":\"bKBAL\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习5.4 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2e7b8ee5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果两个大数相加，且位数不相等，应该如何处理？ \")])]),_c('h3',{attrs:{\"id\":\"TSGz6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T549 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"ZnNPV\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue76c4a8e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u47043fa0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufb759d17\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub2d26512\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"rowspan\":\"2\",\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6a0a2153\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T549 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub26ab69d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握大数计算的基本方法 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uba96efc5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/afrstd#wG8i3\",\"href\":\"ch2#wG8i3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T242 \")])])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接b5\"}},[_c('br')])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"colspan\":\"3\",\"width\":\"677\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u651d7b63\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" (LX517) \")])]),_c('span',{staticClass:\"ne-text\"})])])])])]),_c('h1',{attrs:{\"id\":\"NrvLX\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5. C风格的字符串 \")])]),_c('h2',{attrs:{\"id\":\"Y4dUN\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5.1 C风格字符串的定义和初始化 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"ue60eec28\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C语言并没有提供“字符串”这种复杂数据类型，它借助字符类型的数组来存储一个串的内容，以特殊字符'\\\\0'作为串的结束标志。从存储结构上来说，C语言的字符串就是“以'\\\\0'结尾的字符数组”，长度指串中位于'\\\\0'之前的字符个数。字符串一定是一个字符数组，但字符数组未必是字符串，关键看是否包含'\\\\0'。一个字符数组可以存储多个'\\\\0'，但它存储的字符串内容到第一个'\\\\0'出现的位置就结束了。字符串的查找、求长度、复制、比较等常见算法都是紧紧围绕“以'\\\\0'结尾”这一特性，对字符数组进行操作。 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u6250a3ad\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 定义字符串类型的变量其实就是定义字符数组类型的变量，必须保证数组大小足够容纳末尾的'\\\\0'。例如： \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"JQHpX\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.36\")]),_vm._v(\"  C风格字符串的定义和初始化\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\nint main ()\\n{\\n    char s1[10]; //数组s1是一维数组，它可以存放10个字符，或者一个长度不大于9的字符串\\n    char s2[6]=\\\"China\\\"; \\t\\t\\t\\t\\t\\t\\t\\t\\t//用字符串常量赋值\\n    char s3[6]= {'C', 'h', 'i', 'n', 'a', '\\\\0'};\\t\\t\\t//用字符常量赋值\\n    char name[3][10];\\t\\t//数组name是二维数组，存放3个长度不大于9的字符串\\n    char w_day[ ][10]={\\\"Sunday\\\",\\\"Monday\\\", \\\"Tuesday\\\",\\n            \\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\", \\\"Saturday\\\" };\\t//二维字符串初始化\\n    int num;\\n    cin>>num;\\n    cout<<s2<<' '<<s3<<endl;\\n    s2[3]='\\\\0';\\n    cout<<s2<<' '<<w_day[num]<<endl;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"ir2ht\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u287c8f8c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u77fde59b\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u1f046a8e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 3 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4122f694\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" China China \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u50cd5577\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Chi Wednesday \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"链接e7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C风格字符串分为两个长度：物理长度和逻辑长度。定义时字符数组的长度为其物理长度，表示了该字符数组能够存储字符的数量。而字符串要求至少有一个'\\\\0'，第一个'\\\\0'前的字符数量为其逻辑长度，也是字符串的长度。物理长度至少要比逻辑长度大1，用于存储'\\\\0'。 \")])]),_c('li',{attrs:{\"id\":\"uee3e13d0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第6行和第9行用字符串常量进行初始化，会自动在尾部添加一个'\\\\0'，表示字符串的结束。 \")])]),_c('li',{attrs:{\"id\":\"u23bfd64b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14行将字符串 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" s2 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的第3个字符设置为'\\\\0'，因此其逻辑长度修改为3，第15行只输出Chi三个字符。 \")])]),_c('li',{attrs:{\"id\":\"ud5e9d9c2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8-9行定义了两个二维字符串，用于存储多个字符串，每个字符串都要以'\\\\0'结束。 \")])])]),_c('h3',{attrs:{\"id\":\"vSfer\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T551 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"dTV9o\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud90d743d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u20d8623b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf934b21b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u179f7133\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3b47cce6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T551 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0ae240bc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握C风格字符串的定义和初始化，理解物理长度和逻辑长度 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u2746b4f9\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue9d1212c\"}},[_c('br')])])])])]),_c('h2',{attrs:{\"id\":\"poKOJ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5.2 C风格字符串的基本操作 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"uabd779ce\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" C风格字符串本质上是字符数组，因此不能整体赋值和整体比较。对于字符串的常见操作，都存放在头文件<cstring>中，求长度函数strlen，赋值函数strcpy，比较函数strcmp，连接函数为strcat。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"wAIma\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.37\")]),_vm._v(\"  C风格字符串的常见函数\\n\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<cstring>\\nusing namespace std;\\nint main ()\\n{\\n    char source[30] = \\\"Why always me?\\\",target[20];\\n    cout<<strlen(source)<<' '<<sizeof(source)<<endl;\\n    strcpy(target, source);\\n    cout<<strlen(target)<<' '<<target<<endl;\\n    char other[] = \\\"Why not he?\\\";\\n    cout<<strcmp(source,other)<<endl;\\n    cout<<strcat(source,other)<<endl;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"PHNo9\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3b370339\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9ac00455\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ufa94edcc\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" （无） \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接3f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 14 30 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u76f2f948\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 14 Why always me? \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4186dc8f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" -1 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ub7337be7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" Why always me?Why not he? \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u6d6b4360\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第7行输出结果显示， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" source \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的逻辑长度为14，物理长度为30，strlen的返回结果为字符串的逻辑长度。 \")])]),_c('li',{attrs:{\"id\":\"ua94f5b04\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行将 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" source \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的内容赋值给 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" target \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，这里特别注意C风格字符串是数组，不能进行整体赋值，因此绝对不能写成 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" target=source \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，只能采用strcpy对字符串进行赋值。 \")])]),_c('li',{attrs:{\"id\":\"u1f80a011\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11行进行字符串的大小比较，采用结果为：0（相等），正数（第一个字符串大），负数（第二个字符串大）。这里的大小指字典序，即单词在字典中的排列顺序。从左到右依次遍历字符，当遇到第一个不相同的字符时，该字符的ASCII码比较结果就是两个字符串的大小关系。例如： \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" strcmp(\\\"abcd\\\",\\\"abck\\\")<0 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" strcmp(\\\"abc\\\",\\\"ab\\\")>0 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ， \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" strcmp(\\\"abc\\\",\\\"b\\\")<0 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 。 \")])]),_c('li',{attrs:{\"id\":\"u28fbc478\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第12行对两个字符串进行了连接，并将连接的结果放在第一个字符串 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" source \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 中，函数的返回值也是连接的结果。 \")])])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-indent\":\"2em\"},attrs:{\"id\":\"u91b7c10a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 以下内容将C风格字符串中的常见操作进行了具体的代码实现。使用时可以采用库函数，以下实现是为了更好地从基础操作中理解C风格字符串的使用。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"KitS2\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.38\")]),_vm._v(\"  字符串串长\\n\"),_c('code',[_vm._v(\"int my_strlen(char s[])\\n{\\n    int len=0; //len计算串长\\n    while (s[len]!='\\\\0') len++; //统计'\\\\0'前的字符数\\n    return len;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ue2ff687d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 根据C风格字符串的特点，求串长就是统计'\\\\0'前的字符数。 \")])]),_c('li',{attrs:{\"id\":\"u22d80871\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第4行用while循环实现，这使得代码的可读性更强；在熟练使用for循环后也可以写成 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" for (len = 0; s[len]!='\\\\0'; len++); \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ，注意不要遗漏了末尾的分号，这表示循环条件成立时执行空语句，仅改变计数变量 \")]),_c('code',{staticClass:\"ne-code\"},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" len \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 的值。 \")])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"AlPNW\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.39\")]),_vm._v(\"  字符串复制\\n\"),_c('code',[_vm._v(\"void my_strcpy(char target[], char source[])\\n{\\n    int i=0; //两个字符串从首位开始复制\\n    while((target[i++]=source[i])); //将source字符串中'\\\\0'及之前的字符复制给target\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"uc5810002\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 根据C风格字符串的特点，字符串复制就是将source字符串中'\\\\0'及之前的字符复制给target。常规的写法有很多种，这里采用了尽量简洁的写法。 \")])]),_c('li',{attrs:{\"id\":\"u1d26c5e4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 该函数使用时注意一定要保证target数组的大小足够保存source字符串，必要的话可以在上面函数中添加一段长度验证程序（略）。 \")])]),_c('li',{attrs:{\"id\":\"u12bf5c98\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第4行用到了几个知识点：①C语言用0代表“false”，非0代表“true”；②赋值表达式的终值是赋值符左边的数值；③变量i的自加运算符'++'在后，先取i的值进行运算，然后自增1。因此整个执行过程为：先将source[i]赋值给target[i]，然后i自增1，然后判断条件表达式结果是否为“true”，当source[i]为'\\\\0'时结束循环。 \")])]),_c('li',{attrs:{\"id\":\"ufefcabfe\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 特别注意，source字符串末尾的'\\\\0'一定也要复制过来，或者手动添加。 \")])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"MfJO4\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.40\")]),_vm._v(\"  字符串比较\\n\"),_c('code',[_vm._v(\"int my_strcmp(char str1[], char str2[])\\n{\\n    int res,i=0 ; //res保存第一个出现的不同字符的ASCII码差值。\\n    while((res = str1[i] - str2[i]) == 0 && str1[i]) i++; //字符相同且str1未到末尾时i下移。\\n    return res;\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ua596483f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 根据C风格字符串的特点，字符串比较就是依次对比str1和str2的同位置字符的ASCII码数值，直到不同为止，结果为：0（相等），正数（str1大），负数（str2大）。常规的写法有很多种，这里采用了尽量简洁的写法。 \")])]),_c('li',{attrs:{\"id\":\"udd56ebd5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第4行的条件逻辑是str1未到末尾（不是'\\\\0'），且同位置字符不相同时，位移变量i下移一位；不用判断str2是否到末尾，因为如果str1长度大于str2，str2先到末尾，那么此处字符是'\\\\0'，必然小于str1同位置字符。 \")])]),_c('li',{attrs:{\"id\":\"udf68cf53\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" res返回的结果是str1和str2首次出现不同字符时，两个字符的ASCII码差值。 \")])]),_c('li',{attrs:{\"id\":\"ub2acd85d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 后面的练习题期望结果为：0（相等），1（str1大），-1（str2大），即：将任意正值变成1，任意负值变成-1。这里提供一个解法：将上述代码第5行改为return (res>0)-((-res)>0)。 \")])])]),_c('h3',{attrs:{\"id\":\"uBitN\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 随堂练习5.5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua109e5d9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如何让my_strcmp的返回值为-1,0,1，即正数返回1，负数返回-1。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u6e7c297e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 提示：知识点 \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.yuque.com/upcxailixin/ua125n/afrstd#MIXWN\",\"href\":\"ch2#MIXWN\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T267 \")])])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"v4pKy\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.41\")]),_vm._v(\"  字符串串联\\n\"),_c('code',[_vm._v(\"void my_strcat(char target[], char source[])\\n{\\n    int lt=strlen(target),i=0; //lt保存target串长，i标记source串下标\\n    while((target[lt++]=source[i++])); //将source字符串中'\\\\0'及之前的字符串联到target末尾\\n}\")])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"ue0f8874b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 该函数实现思想类似于字符串复制，只是运算位置从target末尾的'\\\\0'处开始。 \")])]),_c('li',{attrs:{\"id\":\"udf06269d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 该函数使用时注意一定要保证target数组的大小足够保存串联后的字符串，必要的话可以在上面函数中添加一段长度验证程序（略）。 \")])]),_c('li',{attrs:{\"id\":\"u138e7c2c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第3行求target串长时用到了strlen函数，也可以自己写个循环代替，参考求串长代码。上述算法考虑到运算效率，不希望每次调用strlen函数重新计算target串长，因此用了临时变量lt记录target初始长度，这也是空间换时间的思想体现。 \")])]),_c('li',{attrs:{\"id\":\"u41c66120\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 其他知识点参考my_strcpy的实现，第4行代码在复制source的'\\\\0'后结束循环。 \")])]),_c('li',{attrs:{\"id\":\"ua18fe737\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 特别注意，source字符串末尾的'\\\\0'一定也要复制过来，或者手动添加。 \")])])]),_c('h3',{attrs:{\"id\":\"hoc5F\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点：T552 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"KrEpt\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"链接29\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 索引 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u83acebae\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 要点 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue4385963\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 正链 \")])])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud76b678c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 反链 \")])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"58\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u9003e9be\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T552 \")])])]),_c('td',{attrs:{\"width\":\"485\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uef1b3251\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 掌握C风格字符串的基本操作以及实现方式，通过代码示例掌握C风格字符串的基本操作，掌握字典序 \")])])]),_c('td',{attrs:{\"width\":\"125\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ubea73b17\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"67\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4de7a682\"}},[_c('br')])])])])]),_c('h2',{attrs:{\"id\":\"TGdg3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5.3 C风格字符的应用 \")])]),_c('h3',{attrs:{\"id\":\"Spxl1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.16 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"ua8467dcb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从字符串str中查找某个字符ch第一次出现的位置 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u66fe7eb5\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"ue22856da\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输入一个字符串str和一个字符ch，以空格分隔。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf3c2c990\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"uc6f9bf1d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输出 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" ch在str中第一次出现的位置 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"RZsRb\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.42\")]),_vm._v(\"  查找字符\\n\"),_c('code',[_vm._v(\"#include <iostream>\\nusing namespace std;\\nint main()\\n{\\n    char str[100],ch;\\n    int i=0;\\n    cin.getline(str,100); //读入字符串str\\n    cin.get(ch); //读入要查找的字符ch\\n    while(str[i]!='\\\\0' && str[i]!=ch) i++; //未到串尾且未找到ch时，下标下移\\n    //找到则输出位置，否则提示未找到\\n    str[i] == ch ? cout<<\\\"at position: \\\"<<i<<endl : cout<<\\\"not found!\\\"<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"nX70t\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u24fb26e9\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud3c91951\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uda89279a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" asdsf1234567 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"udb759bbf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 6 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u00fb2d51\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" at position: 10 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u047e3b75\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行将找到/找不到的条件合并在一起。 \")])]),_c('li',{attrs:{\"id\":\"u14e6bc03\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11行用了条件运算符输出结果，注意不要遗漏了找不到的情况。 \")])])]),_c('h3',{attrs:{\"id\":\"gHWBk\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.17 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"u86f705fb\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 从字符串str中查找第一个只出现一次的字符，如果没有找到，输出\\\"-1\\\"。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u99643e49\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"uf317567a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输入一个字符串str，可能包含空格。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u17838a3f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"uc6c327c0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果找到符合条件的字符则输出，否则输出\\\"-1\\\"。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"yO3dU\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.43\")]),_vm._v(\"  查找第一个只出现一次的字符\\n\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<cstring>\\nusing namespace std;\\nint main()\\n{\\n    char str[100];\\n    int a[128] = {0};//记录字符串str中每个字符的出现次数\\n    cin.getline(str,100); //读入字符串str\\n    int len = strlen(str); //保存字符串长度\\n    int i;\\n    for(i=0; i<len; i++) //统计字符串str中每个字符的出现次数\\n        a[str[i]] ++;\\n    for(i=0; i<len; i++) //按出现顺序查找只出现一次的字符\\n        if (1 == a[str[i]]) break;\\n    i<len ? cout<<str[i]<<endl : cout<<\\\"-1\\\"<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"tvuH8\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3c40d20e\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud4c58efd\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ucc826bf7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" asdf fdsa 123 \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueb271e7b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 1 \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u84647cc9\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 该程序也是一个比较经典的以空间换时间的操作，比较自然的思路是对每个字符统计出现次数，这需要用到嵌套循环，算法复杂度比本程序高。 \")])]),_c('li',{attrs:{\"id\":\"uec38df38\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第7行定义的数组a记录字符串str中每个字符的出现次数，因为ASCII表有128个字符，因此数组大小至少定义为128。 \")])]),_c('li',{attrs:{\"id\":\"ua960b8a7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第9行变量len保存字符串str的长度，因为要多次使用，所以用变量保存下来，节约调用strlen函数的次数。 \")])]),_c('li',{attrs:{\"id\":\"u95c0b13c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第14行将常量1放在'=='左边，这是一个良好的习惯，当粗心将'=='误写为'='时编译器会报错。 \")])]),_c('li',{attrs:{\"id\":\"u19d24a0d\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 如果查找到，str字符串中i的位置就是符合条件的字符；查找不到则最终i的值等于len。 \")])])]),_c('h3',{attrs:{\"id\":\"ZnDf4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 例题5.18 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\",\"text-indent\":\"2em\"},attrs:{\"id\":\"链接53\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 输入若干单词，将它们从小到大排列后输出。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5c308729\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输入】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"ub2fd622d\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 第一个输入数字n，然后n行，每行输入一个单词，每个单词无空格。 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uef9460ac\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 【输出】 \")])]),_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"uf0a9b93b\"}},[_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 输出 \")]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 排序后的单词，每行一个单词 \")]),_c('span',{staticClass:\"ne-text\",staticStyle:{\"color\":\"rgb(64, 64, 64)\"}},[_vm._v(\" 。 \")])]),_c('pre',{staticClass:\"ne-codeblock language-cpp\",attrs:{\"data-language\":\"cpp\",\"id\":\"P0mNY\"}},[_c('span',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"代码5.44\")]),_vm._v(\"  单词排序\\n\"),_c('code',[_vm._v(\"#include<iostream>\\n#include<cstring>\\nusing namespace std;\\nint main()\\n{\\n    int n;\\n    cin>>n;//首先读入第一行的整数，即单词数\\n    cin.ignore();//清除残留的回车符\\n    char str[n][100], t[100];//str保存读取的n个单词\\n    for (int i=0; i<n; i++) cin.getline(str[i],100);\\n    for(int i=0; i<n-1; i++)//交换法排序\\n        for (int j=i+1; j<n; j++)\\n            if (strcmp( str[i], str[j]) > 0 )\\n            {\\n                strcpy ( t, str[i]);\\n                strcpy (str[i], str[j]);\\n                strcpy(str[j], t);\\n            }\\n    for (int i=0; i<n; i++)  cout<<str[i]<<endl;\\n    return 0;\\n}\")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"y1lWw\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u5ff80fb8\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输入 \")])])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uaa5b8dee\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 样例输出 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ud6e87821\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 5 \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ua068a994\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" word \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ue57a45e3\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" work \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc2887b26\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" homework \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u3adbcc6e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" job \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u100d20b4\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" good \")])])]),_c('td',{attrs:{\"width\":\"375\"}},[_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u0840ed92\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" good \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"u4a47ac94\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" homework \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"ueff98189\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" job \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uc90942aa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" word \")])]),_c('p',{staticClass:\"ne-p\",attrs:{\"id\":\"uf803a470\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" work \")])])])])])]),_c('ul',{staticClass:\"ne-ul\"},[_c('li',{attrs:{\"id\":\"u656ce580\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 程序用一个字符串数组保存单词，在C语言中存储结构用二维字符数组描述。 \")])]),_c('li',{attrs:{\"id\":\"链接25\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第8行不要忘了用cin.ignore()清除读走整数后缓冲区中残留的回车符，否则接下来读到的第一个单词是空串。当然也有其他解决方法，例如用cin.get()读走单个字符、用getline读走空行等等。 \")])]),_c('li',{attrs:{\"id\":\"u752fc9ef\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 第11-18行是交换法排序，需要注意的是，字符串的比较、赋值要用专用的处理函数strcmp、strcpy，而不是用于简单变量的运算符。 \")])])]),_c('h1',{attrs:{\"id\":\"dHWol\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题单 \")])]),_c('table',{staticClass:\"ne-table\",staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"1\",\"id\":\"Pbqom\"}},[_c('tbody',[_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud3f4f331\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 序号 \")])])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua5bc6756\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目名称 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接f7\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uac19ee35\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 序号 \")])])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5008ef0c\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 题目名称 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u3e749bf0\"}},[_c('strong',[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 知识点 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5bf275a1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX501 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ubb3c77c6\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 逆序输出数组 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub1fb718f\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#sDNu2\",\"href\":\"#sDNu2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T511 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u3ec9922b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX502 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u23f6521b\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 数组求和 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc6537786\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#wVcOg\",\"href\":\"#wVcOg\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T514 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub2b3855b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX503 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u198c854f\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 昨天 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接22\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Dr2WK\",\"href\":\"#Dr2WK\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T512 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf283bf9a\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX504 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u39cbc626\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 求最值 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u472d9719\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#wVcOg\",\"href\":\"#wVcOg\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T514 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2f40170b\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX505 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u3ee51409\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 平均之上 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ucd2e11e4\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#wVcOg\",\"href\":\"#wVcOg\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T514 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u293e2aaa\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX506 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u73a2b0a8\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 编程团体赛 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf3092b24\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#s7C1R\",\"href\":\"#s7C1R\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T516 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5569af40\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX507 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ub2b3d382\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 光棍串 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7373d7ad\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#qQ3m1\",\"href\":\"#qQ3m1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T522 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接8c\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX508 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc90ecfca\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 小写数转大写 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf4a581de\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#qQ3m1\",\"href\":\"#qQ3m1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T522 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"链接d8\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX509 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc003dd01\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 最小正整数 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud0d371e7\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#KKCom\",\"href\":\"#KKCom\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u79bd3c70\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX510 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ud07d8e8e\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 建国的难题 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uf2b05e25\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#KKCom\",\"href\":\"#KKCom\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T526 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ubaea98c7\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX511 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uaea82665\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 排序 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ued38cbc2\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#Tpq9G\",\"href\":\"#Tpq9G\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T527 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u6bc47215\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX512 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u9a413cd5\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 矩阵运算 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"ua600fa9d\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#rxqUf\",\"href\":\"#rxqUf\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T515 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc19f34b2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX513 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u04f7645c\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串测试 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u5d308137\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#gItBo\",\"href\":\"#gItBo\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T541 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u0b361db0\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX514 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc7558304\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 字符串跨距 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uce597bb3\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#gItBo\",\"href\":\"#gItBo\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T541 \")])]),_c('span',{staticClass:\"ne-text\"},[_vm._v(\" , \")]),_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#CUEPT\",\"href\":\"#CUEPT\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T546 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u38912f4f\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX515 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u72d02d62\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 首字母大写 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u3e5c85b1\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#ROwVJ\",\"href\":\"#ROwVJ\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T546 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u19ea83f2\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX516 \")])])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u89ccbb14\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 交替01串 \")])])])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u24029c44\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#o43D1\",\"href\":\"#o43D1\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T547 \")])])])])]),_c('tr',{staticStyle:{\"height\":\"33px\"}},[_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uee22cb6e\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" LX517 \")])])]),_c('td',{attrs:{\"width\":\"117\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u93197e95\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\",\"href\":\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" 大数加1 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"uc4f3bfca\"}},[_c('a',{staticClass:\"ne-link\",attrs:{\"data-href\":\"#TSGz6\",\"href\":\"#TSGz6\"}},[_c('span',{staticClass:\"ne-text\"},[_vm._v(\" T549 \")])])])]),_c('td',{attrs:{\"width\":\"93\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u7671f783\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"121\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u86fd8e38\"}},[_c('br')])]),_c('td',{attrs:{\"width\":\"99\"}},[_c('p',{staticClass:\"ne-p\",staticStyle:{\"text-align\":\"center\"},attrs:{\"id\":\"u2737e2b0\"}},[_c('br')])])])])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!-- 以下是网页源代码 -->\r\n<h1 style=\"text-align:center\">\r\n 第五章 数组与字符串\r\n</h1>\r\n<div class=\"lake-content\" typography=\"classic\">\r\n <h1 id=\"vftx2\">\r\n  <span class=\"ne-text\">\r\n   1. 一维数组的定义和初始化\r\n  </span>\r\n </h1>\r\n <h2 id=\"docsq\">\r\n  <span class=\"ne-text\">\r\n   1.1 一维数组的定义\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u1389aad7\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(68, 68, 68)\">\r\n   在程序设计中，为了便于程序处理，通常把具有相同类型的若干变量按有序的形式组织在一起，这些按序排列的同类数据元素的集合称为数组。其中，集合中的每一个元素都相当于一个与数组同类型的变量；集合中的每一个元素用同一个名字（数组名）和它在集合中的序号（下标）来区分引用。语法格式如下：\r\n  </span>\r\n </p>\r\n <details class=\"lake-collapse\">\r\n  <summary id=\"ub5c5d47b\">\r\n   <span class=\"ne-text\">\r\n    数据类型 数组名[元素数量];\r\n   </span>\r\n  </summary>\r\n </details>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"h4xuI\"><span\r\nstyle=\"font-weight:bold;\">代码5.1</span> 一维数组的定义\r\n<code>int a[10];\t\t//语法格式：//定义了长度为10的整型数组</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u0b9fc52d\">\r\n   <span class=\"ne-text\">\r\n    第1行定义了一个包含10个\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     int\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    类型元素的数组，数组名为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，这10个元素分别是\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a[0]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ,\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a[1]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    , …\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a[9]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </li>\r\n  <li id=\"u01a845cb\">\r\n   <span class=\"ne-text\">\r\n    特别强调，C/C++中区分定义语句和非定义语句。同样的符号，在定义语句和非定义语句中表达的含义可能完全不同。\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    在数组定义时表示数组中元素的个数，而在数组使用时表示下标，即第\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     n\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    个元素。\r\n   </span>\r\n  </li>\r\n  <li id=\"链接4b\">\r\n   <span class=\"ne-text\">\r\n    下标从0开始，以\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     int a[10];\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    为例，第一个元素是\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a[0]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，最后一个元素是a[9]。\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a[10]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    并不存在，对其访问存在下标越界错误。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"sDNu2\">\r\n  <span class=\"ne-text\">\r\n   知识点：T511\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"BBzxw\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u7f46a344\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"543\">\r\n     <p class=\"ne-p\" id=\"u740c940a\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"57\">\r\n     <p class=\"ne-p\" id=\"ue01922b6\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"105\">\r\n     <p class=\"ne-p\" id=\"udaec95f4\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u487f0a74\">\r\n      <span class=\"ne-text\">\r\n       T511\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"543\">\r\n     <p class=\"ne-p\" id=\"u58d0930d\">\r\n      <span class=\"ne-text\">\r\n       掌握数组的基本定义，索引从0开始，中括号在定义语句和非定义语句中的含义\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"57\">\r\n     <p class=\"ne-p\" id=\"uea6e9b8f\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"105\">\r\n     <p class=\"ne-p\" id=\"u70d3a523\">\r\n      <a class=\"ne-link\" data-href=\"#D8kyt\" href=\"#D8kyt\">\r\n       <span class=\"ne-text\">\r\n        T531\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#eRcMx\" href=\"#eRcMx\">\r\n       <span class=\"ne-text\">\r\n        T541\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"705\">\r\n     <p class=\"ne-p\" id=\"ua8093131\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX501)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"T4QOe\">\r\n  <span class=\"ne-text\">\r\n   1.2 一维数组的初始化\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u6c094f71\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   定义后用大括号中的数值对各个元素依次进行赋值。数值个数不能超过数组定义时的元素数量。如果用全部数值进行了初始化，元素数量在定义时可以省略。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"YqhAq\"><span\r\nstyle=\"font-weight:bold;\">代码5.2</span> 一维数组的初始化\r\n<code>int main(){\r\n    int a[5] = {1, 2, 3, 4, 5};\r\n    double b[] = {7.1, 8.2, 9.3};\r\n    double c1[10] = {0.5,1.0,1.5,2.0};\r\n    long long c2[100] = {0};\r\n    long long c3[100] = {};\r\n    int d[50];\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uf3d565ba\">\r\n   <span class=\"ne-text\">\r\n    数组b根据初始化数值的数量确定元素个数为3。\r\n   </span>\r\n  </li>\r\n  <li id=\"uc6a2aea9\">\r\n   <span class=\"ne-text\">\r\n    数组c1的前4个数据为与初始化列表对应，根据C/C++的规则，部分初始化时，未赋值元素为0，因此c1[4]以后的元素为0。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <img id=\"a8vfs\" src=\"../assets/images/1676858457207-e52af739-7027-4ed0-9978-d25f7452d5f4.jpeg\" style=\"display: block; width: 100%\"/>\r\n <p class=\"ne-p\" id=\"u2dde51fc\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.1 部分初始化时的数组c1\r\n  </span>\r\n </p>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u6e6f5ac1\">\r\n   <span class=\"ne-text\">\r\n    根据部分初始化规则，可以用第5行的方法将所有数值初始化为全0。这是利用了规则，并不存在全1或其他数值的全部初始化操作。\r\n   </span>\r\n  </li>\r\n  <li id=\"u94be4cea\">\r\n   <span class=\"ne-text\">\r\n    采用第6行的方式，也可以将数组全部初始化为0\r\n   </span>\r\n  </li>\r\n  <li id=\"u5eeffd2c\">\r\n   <span class=\"ne-text\">\r\n    但是如果没有初始化，数值中所有元素的值是不确定的。变量定义时，只会分配空间，没有自动赋值为0的操作。例如数组d中的所有值是不确定的。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"ua78ab0fb\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   元素数量必须是非负整数，可以是常量，也可以是变量。如果定义数组时元素数量为常量，称为静态数组，在编译时分配存储空间，因为存储空间确定，所以可以进行初始化；但是如果元素数量是变量，称为动态数组，在运行时分配存储空间，编译时不能确定存储空间的大小。从C++11开始，动态数组可以进行初始化。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"IvVzf\"><span\r\nstyle=\"font-weight:bold;\">代码5.3</span> 定义动态数组\r\n<code>int main(){\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    int arr[n]={1,2};\t\t//动态数组，从C++11开始支持初始化\r\n    for(int i=0;i&lt;n;i++)\r\n        cout&lt;&lt;arr[i]&lt;&lt;' ';\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"DxOZF\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 37px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u392f0c40\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u487d18ed\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u17b7d0e4\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua096d203\">\r\n      <span class=\"ne-text\">\r\n       1 2 0 0 0\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"Dr2WK\">\r\n  <span class=\"ne-text\">\r\n   知识点：T512\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"eFZuq\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ufb3c903f\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u711c1477\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u4bc49089\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u2ff086be\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u682eecb6\">\r\n      <span class=\"ne-text\">\r\n       T512\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u429b81d1\">\r\n      <span class=\"ne-text\">\r\n       掌握数组的初始化方法，尤其是部分初始化的作用；理解动态数组\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u46bcd3c7\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u07e96257\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"ub6610ace\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX503)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"CSiAQ\">\r\n  <span class=\"ne-text\">\r\n   1.3 一维数组的内存模型\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u75c72bbb\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   从数组的定义中可以获知，一个数组中所有元素的数据类型必须相同。从存储角度，当定义一个数组\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    a\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   时，编译器根据指定的元素个数和元素的类型分配确定大小（元素类型大小*元素个数）的一块内存，并把这块内存的名字命名为\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    a\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，名字\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    a\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   一旦与这块内存匹配就不能再改变。由此可知，一个数组中所有元素的存储空间是连续的。对于一个数组\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    float a[]={1.2, 2.3, 3.4, 4.5,5.6}\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    sizeof(a)=20=sizeof(float)*5\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，各元素的相关数据如下：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"fHktw\"><span\r\nstyle=\"font-weight:bold;\">代码5.4</span> 数组元素的地址\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\nint main (  )\r\n{\r\n    float a[]={1.2, 2.3, 3.4, 4.5,5.6};\r\n    cout&lt;&lt;\"下标\";\r\n    for(int i=0;i&lt;5;i++)\r\n        cout&lt;&lt;\"\\ta[\"&lt;&lt;i&lt;&lt;']';\r\n    cout&lt;&lt;endl;\r\n    cout&lt;&lt;\"值\";\r\n    for(int i=0;i&lt;5;i++)\r\n        cout&lt;&lt;'\\t'&lt;&lt;a[i];\r\n    cout&lt;&lt;endl;    \r\n    cout&lt;&lt;\"地址\";\r\n    for(int i=0;i&lt;5;i++)\r\n        cout&lt;&lt;'\\t'&lt;&lt;&amp;a[i];\r\n    cout&lt;&lt;endl;\r\n    cout&lt;&lt;\"a+i\";\r\n    for(int i=0;i&lt;5;i++)\r\n        cout&lt;&lt;'\\t'&lt;&lt;a+i;\r\n    cout&lt;&lt;endl;\r\n    cout&lt;&lt;endl;\r\n}</code></pre>\r\n <p class=\"ne-p\" id=\"udfe715c2\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   表5.1 数组各元素的相关数据\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"uVkYL\" style=\"width: 742px;text-align:center\" align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"ud11151ba\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       下标\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u905e224c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       a[0]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u84d97ee0\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       a[1]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u54abcbdf\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       a[2]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u02ae78e2\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       a[3]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"127\">\r\n     <p class=\"ne-p\" id=\"ubab4c90a\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       a[4]\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"ua1242f02\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       值\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u2e0bbe7f\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1.2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"udb49ddbb\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       2.3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u450b5935\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       3.4\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"ub1556f3f\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       4.5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"127\">\r\n     <p class=\"ne-p\" id=\"u5dcb7449\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       5.6\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u4a4a0bc9\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       地址\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u8a3cfde8\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe00\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"uf2be43e9\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe04\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u35a106b7\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe08\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u37faa00f\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe0c\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"127\">\r\n     <p class=\"ne-p\" id=\"u4fd9ee82\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe10\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u88b34330\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       a+i\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u5421bbfc\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe00\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u1d85b11d\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe04\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u69ef1d0d\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe08\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"123\">\r\n     <p class=\"ne-p\" id=\"u9256ea22\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe0c\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"127\">\r\n     <p class=\"ne-p\" id=\"udf2932f4\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0x61fe10\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u21f0f76b\">\r\n   <span class=\"ne-text\">\r\n    从输出结果中可以看出，第5行相当于同时定义了5个变量，下标从0开始，每个变量存储对应的值。\r\n   </span>\r\n  </li>\r\n  <li id=\"u0adef987\">\r\n   <span class=\"ne-text\">\r\n    从表格第3行可以看到，所有元素的内存地址连续，间隔为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     sizeof(float)\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </li>\r\n  <li id=\"u1adb9b1e\">\r\n   <span class=\"ne-text\">\r\n    从\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a+i\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的输出结果中可以看出，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a+i\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    与\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     &amp;a[i]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    相同，都是表示第i个元素的地址。这是因为数组名代表了数组首元素的地址，简称首地址，即\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    +0=\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    =0x61fe00，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a+1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    不代表一个字节，而是表示一个元素的空间，即\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     sizeof(float)\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。因此第\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     i\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    个元素的地址为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a+i*sizeof(float)\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u8daf9b97\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   总而言之，数组可以通过偏移快速定位第\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    i\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   个元素。偏移在计算机中是一个非常快速的基本运算，这也是数组能够进行快速访问的根本原因。\r\n  </span>\r\n </p>\r\n <h3 id=\"pNT2u\">\r\n  <span class=\"ne-text\">\r\n   知识点：T513\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"EHD3a\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue4891310\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"522\">\r\n     <p class=\"ne-p\" id=\"ua90f617b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u6a593e6f\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"97\">\r\n     <p class=\"ne-p\" id=\"ue861e59c\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 71px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u732ec138\">\r\n      <span class=\"ne-text\">\r\n       T513\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"522\">\r\n     <p class=\"ne-p\" id=\"uf51a7786\">\r\n      <span class=\"ne-text\">\r\n       数组的连续内存分配模型，通过偏移快速定位元素是数组的突出优势。\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ud72f191f\">\r\n      <span class=\"ne-text\">\r\n       理解数组的物理空间和有效元素个数是不同的\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u69d646e0\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/iz3dks#QAfJZ\" href=\"ch3#QAfJZ\">\r\n       <span class=\"ne-text\">\r\n        T341\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"97\">\r\n     <p class=\"ne-p\" id=\"ub03b9280\">\r\n      <a class=\"ne-link\" data-href=\"#AE9qD\" href=\"#AE9qD\">\r\n       <span class=\"ne-text\">\r\n        T521\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#fakFb\" href=\"#fakFb\">\r\n       <span class=\"ne-text\">\r\n        T525\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#Km6tT\" href=\"#Km6tT\">\r\n       <span class=\"ne-text\">\r\n        T528\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#zTfai\" href=\"#zTfai\">\r\n       <span class=\"ne-text\">\r\n        T542\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/qvzagc#IS3uW\" href=\"ch6#IS3uW\">\r\n       <span class=\"ne-text\">\r\n        T621\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"wVcOg\">\r\n  <span class=\"ne-text\">\r\n   1.4 数组的基本运算\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u8d7a303f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   C/C++中的数组虽然可以看做一个整体，但并不是一种独立存在的数据类型。按照语法规定，不能整体赋值、整体比较、整体输入输出。当需要进行赋值或比较或输入输出时，需要通过循环逐个元素的进行。\r\n  </span>\r\n </p>\r\n <h3 id=\"Px9Hv\">\r\n  <span class=\"ne-text\">\r\n   例题5.1\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ue04db5b5\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   输入n个同学的成绩，输出其中小于平均分的成绩。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"DbXBx\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4f7622fd\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u7225ce7f\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u0bb9a191\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u264f6db0\">\r\n      <span class=\"ne-text\">\r\n       7 6 5 3 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ue10644a4\">\r\n      <span class=\"ne-text\">\r\n       3 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"eF4bW\"><span\r\nstyle=\"font-weight:bold;\">代码5.5</span> 数组的输入和比较\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\nint main (  )\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    int score[n];\r\n    double sum=0;\r\n    for(int i=0;i&lt;n;++i){\r\n        cin&gt;&gt;score[i];\r\n        sum += score[i];\r\n    }\r\n    for(int i=0;i&lt;n;++i)\r\n        if(score[i]&lt;sum/n)\r\n            cout&lt;&lt;score[i]&lt;&lt;' ';\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u809c1cbe\">\r\n   <span class=\"ne-text\">\r\n    数组毕竟占据较多存储空间，如果能用简单变量解决，可以尽量避免使用数组。本例题中所有元素要使用两遍，当得到平均值后，必须第二次遍历数组，因此必须使用数组记录每个元素。\r\n   </span>\r\n  </li>\r\n  <li id=\"u4e3ce849\">\r\n   <span class=\"ne-text\">\r\n    数组在第7行定义时，元素数量是变量，因此是一个动态数组，不可以直接进行初始化。只能通过第9-12行的循环，逐个进行赋值。\r\n   </span>\r\n  </li>\r\n  <li id=\"u49abb90d\">\r\n   <span class=\"ne-text\">\r\n    当需要对每个元素与平均值进行比较时，必须逐个元素进行比较，C/C++中没有提供整体比较的语法支持。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"nbQfZ\">\r\n  <span class=\"ne-text\">\r\n   知识点：T514\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"Y2ByV\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u64df8305\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ubed3eae9\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u7f8c9ff3\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uf751fea4\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"uda671436\">\r\n      <span class=\"ne-text\">\r\n       T514\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7afe5085\">\r\n      <span class=\"ne-text\">\r\n       只有多个数据反复利用时，才需要数组；单次使用多个数据尽量不用数组\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u70a4c804\">\r\n      <span class=\"ne-text\">\r\n       数组不能整体赋值、整体比较、整体输入输出，必须与循环结合\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u6d0f394e\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ue627c818\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u40d79084\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX502)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX504)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX505)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"AxwhE\">\r\n  <span class=\"ne-text\">\r\n   1.5 数组作为函数参数\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"uc5cf79ab\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当定义一个数组\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    int a[10];\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   时，根据前文所述内容可知，同时分配了10个\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    sizeof(int)\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   大小的空间。\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    a\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   存储了首地址。但并不存储元素的数量，只是从首地址开始，通过偏移访问各个元素。因此当把数组作为函数的参数时，实参数组会把它的地址传递给形参数组，但数组的元素数量并不会被传递。因此数组作为函数的参数时，必须同时传递数组地址和数组中元素的数量，否则无法知道数组的有效范围。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"TXxsb\"><span\r\nstyle=\"font-weight:bold;\">代码5.6</span> 最小值下标\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint argmin(int n,int arr[]){\t//数组的元素数量n和数组的首地址\r\n    int min = 0;\t\t\t\t//默认下标为0的元素最小\r\n    for(int i=1;i&lt;n;++i)\r\n        if(arr[i]&lt;arr[min])\t\t//当前元素和最小值元素进行比较\r\n            min = i;\t\t\t//min保留最小值的下标\r\n    return min;\r\n}\r\n\r\nint main (  )\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    int a[n+10];\r\n    for(int i=0;i&lt;n;++i)\r\n        cin&gt;&gt;a[i];\r\n    cout&lt;&lt;argmin(n,a)&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"x9EBh\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 37px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ufec18252\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4303b9ac\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"udcd9f220\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u4db32bef\">\r\n      <span class=\"ne-text\">\r\n       7 3 8 1 9\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"udc96391b\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u8be6f4b7\">\r\n   <span class=\"ne-text\">\r\n    由代码5.6可以看出，把数组作为函数的参数时，必须同时传递元素的数量和数组的地址。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2eea9997\">\r\n   <span class=\"ne-text\">\r\n    关注第4行的形参\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     arr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，可以看到\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    为空。数组定义时，理论上\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中应该注明元素的数量。但是\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     arr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    是形参，在\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     argmin\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数被调用之前，它没有存储空间。在\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     argmin\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数被调用之后，它的作用就是存放实参的首地址，因此元素数量对它没有任何意义。\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    在此仅仅表明\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     arr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    是一个数组，即整型数组类型；更准确的说，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     arr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    只是为了存储一个\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     int\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    类型的地址。因此\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    为空，或者写成\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     [0]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    或其他任何整数，对程序运行都没有任何影响。甚至可以将\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     int arr[]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    改写成\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     auto arr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，根据实参赋值决定形参\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     arr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的数据类型，也是可以的。由此可以进一步了解，数组名不包含任何的元素数量信息。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"TFSS3\">\r\n  <span class=\"ne-text\">\r\n   知识点：T515-T516\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"BeKKq\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ufc0bd50a\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua81ccbf6\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u2bbb6415\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u8e1cfc14\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u9256bc32\">\r\n      <span class=\"ne-text\">\r\n       T515\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uc53b48a9\">\r\n      <span class=\"ne-text\">\r\n       数组作为函数的参数，只是传递首元素地址，与实参共享存储空间\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u94387ee5\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"链接ca\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/qvzagc#aplSt\" href=\"ch6#aplSt\">\r\n       <span class=\"ne-text\">\r\n        T625\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u7ab60e50\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX512)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u13c1d37f\">\r\n      <span class=\"ne-text\">\r\n       T516\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u691cf4d0\">\r\n      <span class=\"ne-text\">\r\n       掌握求数组极值及极值对应下标的方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"ub4caaabe\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX506)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"s7C1R\">\r\n  <span class=\"ne-text\">\r\n   2. 一维数组的应用\r\n  </span>\r\n </h1>\r\n <h2 id=\"eVqvU\">\r\n  <span class=\"ne-text\">\r\n   2.1 数组的插入与删除\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ua76cdc5f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   因为数组的存储空间一定是连续的，因此对于非尾部数据的插入和删除是无法物理实现的，只能通过逻辑方式满足需求。删除时，将被删除元素右侧的所有元素向前平移，插入时将所有元素向后平移，留出插入空间。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"BNQMS\"><span\r\nstyle=\"font-weight:bold;\">代码5.7</span> 删除和插入元素\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\nbool remove(int n,int arr[],int pos){\t//删除长度为n的数组的第pos个元素\r\n    if(pos&lt;0 || pos&gt;=n)  return false;\r\n    for(int i=pos;i&lt;n-1;++i)\t//正序遍历\r\n        arr[i]=arr[i+1];\t\t//删除位置右侧的值向左移动\r\n    return true;\r\n}\r\nbool insert(int n,int arr[],int pos,int val){//在长度为n的数组的第pos个位置插入新元素val\r\n    if(pos&lt;0)  return false;\r\n    if(pos&gt;n)\tpos = n;\t\t//如果插入位置过大，把数据添加到数组的末尾\r\n    for(int i=n-1;i&gt;=pos;--i)\t//必须倒序循环，保证数据不被覆盖\r\n        arr[i+1] = arr[i];\t\t//插入位置右侧的值向右移动\r\n    arr[pos] = val;     \t\t//将新值放到空白处\r\n    return true;\r\n}\r\nvoid print(int n,int arr[]){\r\n    for(int i=0;i&lt;n;++i)\r\n        cout&lt;&lt;arr[i]&lt;&lt;(i&lt;n-1?' ':'\\n');//控制输出间隔\r\n}\r\nint main (  )\r\n{\r\n    int n,index;\r\n    cin&gt;&gt;n&gt;&gt;index;\r\n    int values[n];\r\n    for(int i=0;i&lt;n;++i)\r\n        cin&gt;&gt;values[i];\r\n    n-=remove(n,values,index);\r\n    print(n,values);\r\n    n+=insert(n,values,index,37);\r\n    print(n,values);\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"gY1s4\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u0fde5374\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5c8074d2\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc591be8e\">\r\n      <span class=\"ne-text\">\r\n       5 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u02c4e45a\">\r\n      <span class=\"ne-text\">\r\n       1 2 3 4 5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u315f3d0f\">\r\n      <span class=\"ne-text\">\r\n       1 2 4 5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u1ffb4f4d\">\r\n      <span class=\"ne-text\">\r\n       1 2 37 4 5\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u1b9c6e78\">\r\n   <span class=\"ne-text\">\r\n    利用元素左移模拟删除，利用元素右移模拟插入。插入时一定要倒序移位，因为正序移位会出现元素覆盖和数据丢失。请自行尝试体验。\r\n   </span>\r\n  </li>\r\n  <li id=\"ub90944a1\">\r\n   <span class=\"ne-text\">\r\n    插入或删除成功返回\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，否则返回\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     false\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，借助\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    /\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     false\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    和1/0的对应关系，对数据总元素进行修正（第28和30行）。也就是说，数组的物理存储空间不会改变的，只是从逻辑上认为元素的总量发生变化。\r\n   </span>\r\n  </li>\r\n  <li id=\"uc789237a\">\r\n   <span class=\"ne-text\">\r\n    对于插入而言，一定要保证物理存储空间足够用，不要在插入时发生下标超上限的现象。\r\n   </span>\r\n  </li>\r\n  <li id=\"u0231c0ef\">\r\n   <span class=\"ne-text\">\r\n    第18-19行对数据分隔显示做了一个示范。从视觉上一个元素加一个空格是没有问题的，但是对于在线评测系统，多出一个空格，可能会导致整个题目被判错，一定严格遵守题目的输出规范和要求。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"AE9qD\">\r\n  <span class=\"ne-text\">\r\n   知识点：T521\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"LXOiv\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u15df0f02\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7ca76b81\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u189df400\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u8ab69cf7\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue9c63e1e\">\r\n      <span class=\"ne-text\">\r\n       T521\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uefe75c83\">\r\n      <span class=\"ne-text\">\r\n       数组只能对单个元素做逻辑插入和删除，注意循环移位时的元素覆盖问题\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ue78ed875\">\r\n      <a class=\"ne-link\" data-href=\"#pNT2u\" href=\"#pNT2u\">\r\n       <span class=\"ne-text\">\r\n        T513\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u32bf7359\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"qQ3m1\">\r\n  <span class=\"ne-text\">\r\n   2.2 数组与循环的联动\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"链接51\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   有时在题目中没有明显需要数组的提示，可以采用数组记录已知的数据，利用数组可以跟循环联动的特点，极大简化程序的流程。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7e32dc06\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   在例题5.2中，由于每月天数的不规律性，导致无法直接使用循环，只能通过多分支进行逐条处理，代码非常冗余。但是通过把每月天数预置到数组中，让循环与数组形成联动，对程序书写进行了极大的简化，降低了出错的概率。\r\n  </span>\r\n </p>\r\n <h3 id=\"NA6mZ\">\r\n  <span class=\"ne-text\">\r\n   例题5.2\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u68d94f5f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   把1月1日当做第1天，当用户输入年份和第n天时，输出第n天是几月几日？\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"UdIsw\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub46570f9\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5858feb8\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接38\">\r\n      <span class=\"ne-text\">\r\n       2022 33\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc27a8536\">\r\n      <span class=\"ne-text\">\r\n       2月2日\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"RBvZK\"><span\r\nstyle=\"font-weight:bold;\">代码5.8</span> 数组与循环的联动\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main (  )\r\n{\r\n    int year,n;\r\n    cin&gt;&gt;year&gt;&gt;n;\r\n    int month[12]={31,28,31,30,31,30,31,31,30,31,30,31};\r\n    auto leapyear = [](int year){return year%400==0||(year%4==0 &amp;&amp; year%100!=0);};\r\n    month[1]+=leapyear(year);\r\n    int i=0;\r\n    while(n&gt;month[i])\r\n        n-=month[i++];\r\n    cout&lt;&lt;i+1&lt;&lt;\"月\"&lt;&lt;n&lt;&lt;\"日\"&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u2c70fb0b\">\r\n   <span class=\"ne-text\">\r\n    第8行定义了一个数组，记录了每个月的天数。\r\n   </span>\r\n  </li>\r\n  <li id=\"uf7353724\">\r\n   <span class=\"ne-text\">\r\n    第9行赋值号右侧是一个匿名函数，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     []\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    表示后面定义了一个函数，参数和函数体的写法和普通函数定义相同。将定义后的匿名函数赋值给\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     auto\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    变量\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     leapyear\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，此时的leapyear就是一个函数。auto表示根据赋值号右侧的内容自动解析变量的类型。此处的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     leapyear\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    就被解析为函数。对于简单的函数，或只需要使用一次的函数，可以采用匿名函数的方式进行定义。\r\n   </span>\r\n  </li>\r\n  <li id=\"u020fd781\">\r\n   <span class=\"ne-text\">\r\n    第10行将二月增加是否为闰年，因为闰年的二月比其他年份的二月多一天，同样是利用了\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    /\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     false\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    和1/0的对应关系。\r\n   </span>\r\n  </li>\r\n  <li id=\"uf81ae3eb\">\r\n   <span class=\"ne-text\">\r\n    第12-13行，利用数组和循环的联动，快速简单的定位了月份和日期。\r\n   </span>\r\n  </li>\r\n  <li id=\"u6aac6b47\">\r\n   <span class=\"ne-text\">\r\n    第13行的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ++\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    在\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     i\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    后面，表示先执行当前表达式的运算，然后再对i进行加1操作。即先执行\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     n-=month[i]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，再执行\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     i++\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。将两条语句简化成了一条语句，但是功能完全相同。初学者如果掌握不好这种技巧，可以将第13行的表达式拆成两条语句，保证代码理解的清晰度。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"WGgmO\">\r\n  <span class=\"ne-text\">\r\n   知识点：T522-T523\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"WDS2Y\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u82ab1817\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uc77b216c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"链接d6\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"udc33556b\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue9fa759b\">\r\n      <span class=\"ne-text\">\r\n       T522\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u19bef5cc\">\r\n      <span class=\"ne-text\">\r\n       单循环与数组搭配使用，嵌套循环与二维数组搭配使用\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u73e3e40c\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ub35f09ed\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#mu9UI\" href=\"ch8#mu9UI\">\r\n       <span class=\"ne-text\">\r\n        T874\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"u580ca9e4\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX507)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX508)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"链接45\">\r\n      <span class=\"ne-text\">\r\n       T523\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7add7016\">\r\n      <span class=\"ne-text\">\r\n       掌握匿名函数的基本使用方法，理解这种形式，不做重点掌握\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"FCrRm\">\r\n  <span class=\"ne-text\">\r\n   2.3 尺取法\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"uf2277451\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   尺取法又称双指针法，用来解决序列的区间问题，是一种常见的优化技巧。分为反向扫描法和同向扫描法。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u65f7e5cd\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   反向扫描法又称为左右指针法，即设定两个指针i和j，分别指向数组的头和尾，i和j方向相反，i从头向尾，j从尾向头，在中间集合。虽然设定两个指针，但是对同一个数组同时遍历，算法复杂度为O(n)。初学者由于对语法的不熟悉，容易写成嵌套循环，这样算法复杂度变为O(n\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   )，造成了大量无效的遍历。\r\n  </span>\r\n </p>\r\n <h3 id=\"b9kDc\">\r\n  <span class=\"ne-text\">\r\n   例题5.3\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ude83e839\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定一个数组arr，判断数组是否对称。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"uAz0V\"><span\r\nstyle=\"font-weight:bold;\">代码5.9</span> 数组的多变量遍历\r\n<code>bool sym(int n,int arr[])\r\n{\r\n    for(int i=0,j=n-1;i&lt;j;++i,--j)\r\n        if(arr[i]!=arr[j])\r\n            return false;\r\n    return true;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u23a28952\">\r\n   <span class=\"ne-text\">\r\n    注意第3行两个变量同时变化遍历数组的方法。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u48ce52db\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   同向扫描法同样是即设定两个指针i和j，同时指向数组的头或尾，i和j移动方向相同，但偏移速度不同，因此又称为快慢指针法。关键是一个指针处的修改不能影响另外一个指针的遍历。\r\n  </span>\r\n </p>\r\n <h3 id=\"UP8pF\">\r\n  <span class=\"ne-text\">\r\n   随堂练习5.1\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ubd75b3ae\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定一个数组，采用尺取法将数组逆序。\r\n  </span>\r\n </p>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"ua0777c31\">\r\n   <span class=\"ne-text\">\r\n    提示：注意交换要在数组的中间停止，否则会把已经逆序的数组重新修改为正序。\r\n   </span>\r\n  </p>\r\n </div>\r\n <h3 id=\"xecmX\">\r\n  <span class=\"ne-text\">\r\n   例题5.4\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u2ece06eb\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定一个数组arr，要求删除其中的指定值val。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"链接03\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud5db7a06\">\r\n  <span class=\"ne-text\">\r\n   方案一：基于第2.1小节中的删除元素方法，每次删除一个值，算法复杂度为O(n\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   )。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u17ac0c7e\">\r\n  <span class=\"ne-text\">\r\n   方案二：新建一个数组，将原数组中的有效值添加到新数组中。以空间换时间，算法复杂度降为O(n)。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud25a8d1a\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   显然第二种方法更好一些。但在一些特殊情况下，要求在原数组上删除指定元素，不允许建立新数组。仔细分析可以发现，一个删除后的数组，元素的数量一定小于或等于原数组，因此可以设置两个索引i和index，i遍历原数组，index遍历保留的元素。因为index小于等于i，因此index处的赋值不会影响i的遍历。具体如下：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"Henlz\"><span\r\nstyle=\"font-weight:bold;\">代码5.10</span> 删除指定元素\r\n<code>int remove(int n,int arr[],int val)\r\n{\r\n    int index = 0;\r\n    for(int i=0;i&lt;n;++i){\r\n        if(arr[i]!=val){\r\n            arr[index] = arr[i];\r\n            index++;\r\n        }\r\n    }\r\n    return index;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ueb7df5ca\">\r\n   <span class=\"ne-text\">\r\n    index一定小于或等于i，因此第6行的赋值操作对第4行正在进行的遍历操作不会造成任何影响。\r\n   </span>\r\n  </li>\r\n  <li id=\"u27c0912c\">\r\n   <span class=\"ne-text\">\r\n    一次性删除所有指定的值val。函数最后返回index，代表了保留元素的个数。\r\n   </span>\r\n  </li>\r\n  <li id=\"ueafbbc07\">\r\n   <span class=\"ne-text\">\r\n    第八章将要提到的STL的remove算法与以上代码的想法完全一致。既不需要创建新空间，算法复杂度也降低到O(n)。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"HPdn9\">\r\n  <span class=\"ne-text\">\r\n   随堂练习5.2\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u6b66711d\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   移除一个数组中的重复元素。\r\n  </span>\r\n </p>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"链接53\">\r\n   <span class=\"ne-text\">\r\n    提示：依次遍历每个元素，删除其后继元素中与其值相同的元素。\r\n   </span>\r\n  </p>\r\n </div>\r\n <h3 id=\"BNafm\">\r\n  <span class=\"ne-text\">\r\n   例题5.5\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u3efeb884\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定两个按非递减顺序的整数数组 nums1 和 nums2，元素数量分别为m\r\n            和 n 。合并 nums2 到 nums1 中，使合并后的数组同样保持非递减顺序。nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7aa23ef5\">\r\n  <span class=\"ne-text\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u94188e20\">\r\n  <span class=\"ne-text\">\r\n   方案一、将nums2直接拼接到nums1的尾部，然后采用快速排序，重新达成非递减顺序，算法复杂度为O((m+n)log(m+n))。并没有用到原数组已经有序的条件。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua8fd307e\">\r\n  <span class=\"ne-text\">\r\n   方案二、新建一个数组，依次将两个数组中复合条件的数据添加到新数组中。以空间换时间，算法复杂度降为O(m+n)。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u9dad5e63\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   如果不允许建立新空间呢？主要存在的问题是一个数据可能未被处理前，就被新数据覆盖。但是如果倒序遍历，先让一个索引p指向最后一个元素的位置m+n-1，这样p一定大于或等于m或n，因此可以得到以下方法：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"KCBjU\"><span\r\nstyle=\"font-weight:bold;\">代码5.11</span> 合并有序数组 I\r\n<code>void merge(int nums1[], int m, int nums2[], int n) {\r\n    int p=m--+(--n);\r\n    while(m&gt;=0&amp;&amp;n&gt;=0){\t\t//或while(m+1&amp;&amp;n+1)\r\n        nums1[p--] = nums1[m]&gt;nums2[n]?nums1[m--]:nums2[n--];\r\n    }\r\n    while(n&gt;=0){\t\t\t//或while(n+1)\r\n        nums1[p--] = nums2[n--];\r\n    }\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u3dba40a2\">\r\n   <span class=\"ne-text\">\r\n    第2行将p指向数据尾部，注意\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     m--\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    和\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     --n\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的使用，之所以使用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     --n\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，是因为p应该等于\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     m+n-1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，所以要先减1。（知识点：\r\n   </span>\r\n   <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/afrstd#t5tWx\" href=\"ch2#t5tWx\">\r\n    <span class=\"ne-text\">\r\n     T268\r\n    </span>\r\n   </a>\r\n   <span class=\"ne-text\">\r\n    ）\r\n   </span>\r\n  </li>\r\n  <li id=\"u2d6eb975\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     p\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    一定大于或等于m或n，因此第4行的赋值操作对第3行正在进行的遍历操作不会造成任何影响。\r\n   </span>\r\n  </li>\r\n  <li id=\"u5230aca4\">\r\n   <span class=\"ne-text\">\r\n    第6-8行的循环是为了处理\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     nums1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    已经被处理完毕，但是\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     nums2\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    还有残留数据，这些数据必须迁移到\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     nums1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中。如果\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     nums1\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    还有残留，那么正好处于应有的位置，不需要处理。\r\n   </span>\r\n  </li>\r\n  <li id=\"ua7d8316a\">\r\n   <span class=\"ne-text\">\r\n    如果nums1已经处理完毕，可以只处理nums2，因此可以将以上代码中的两个循环简化成一个循环。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"mpDPc\"><span\r\nstyle=\"font-weight:bold;\">代码5.12</span> 合并有序数组 II\r\n<code>void merge(int nums1[], int m, int nums2[], int n) {\r\n    int p=m--+(--n);\r\n    while(n&gt;=0){\t\t//或while(m+1&amp;&amp;n+1)\r\n        nums1[p--] = m&gt;=0&amp;&amp;nums1[m]&gt;nums2[n]?nums1[m--]:nums2[n--];\r\n    }\r\n}</code></pre>\r\n <h3 id=\"o8Kxq\">\r\n  <span class=\"ne-text\">\r\n   知识点：T524\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"oB63X\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uf4969c5f\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"549\">\r\n     <p class=\"ne-p\" id=\"udaf7c6eb\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u4b73a5cc\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u4286ba57\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"链接32\">\r\n      <span class=\"ne-text\">\r\n       T524\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"549\">\r\n     <p class=\"ne-p\" id=\"u2207db94\">\r\n      <span class=\"ne-text\">\r\n       掌握尺取法多指针反向或同向扫描法，掌握多变量方式对序列的遍历，能够把对称判断、原地删除和合并等方法作为解题模板。\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u43b7ca9b\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FdHGv\" href=\"ch4#FdHGv\">\r\n       <span class=\"ne-text\">\r\n        T475\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FdHGv\" href=\"ch4#FdHGv\">\r\n       <span class=\"ne-text\">\r\n        T476\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"链接ac\">\r\n      <a class=\"ne-link\" data-href=\"#K2mZX\" href=\"#K2mZX\">\r\n       <span class=\"ne-text\">\r\n        T547\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"Aw7Ea\">\r\n  <span class=\"ne-text\">\r\n   2.4 空间换时间\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u4b1163b7\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   有时需要在两个以上的多维度上对数据进行遍历，或多单一维度进行多重遍历时，计算复杂度高。通过把数组作为中间媒介，可以实现降维，把嵌套循环简化为并列循环，甚至单循环，能够极大地降低算法的复杂度。这是一种用空间换时间的思路。嵌套循环体现了乘法的思想，并列循环体现了加法的思想，嵌套循环简化为并列循环能对计算效率进行极大地提升。\r\n  </span>\r\n </p>\r\n <h3 id=\"yuD60\">\r\n  <span class=\"ne-text\">\r\n   例题5.6\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"链接35\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   长度为\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    L\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   的长江路上有一排树。如果把长江路看成一个0~\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    L\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   的数轴，则数轴上的每个整数0,1,2,...\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    L\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   都种有一棵树。由于长江路部分区域要建地铁。这些区域用它们在数轴上的起始点（整数）和终止点（整数）表示，区域之间可能有重合的部分。现在要把建地铁区域的树(包括区域端点)移走，计算移走后路上还有多少棵树。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"B425Z\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u91534c10\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u954f7127\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua2ae780a\">\r\n      <span class=\"ne-text\">\r\n       10\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ude2a280d\">\r\n      <span class=\"ne-text\">\r\n       3 6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u0c175316\">\r\n      <span class=\"ne-text\">\r\n       5 7\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u0ec83477\">\r\n      <span class=\"ne-text\">\r\n       10 10\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u66f5a055\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u24e773f9\">\r\n  <span class=\"ne-text\">\r\n   【问题分析】从简单的思维出发，判断每棵树是否在给定的所有范围里。这样需要遍历所有的树\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    L\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，对于每棵树，再次遍历所有范围（假定共有\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    R\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   个范围），树和范围两个维度进行嵌套遍历，时间复杂度为O(L*R)，其中O为算法复杂度表示方法。这种嵌套循环复杂度高，而且容易出错。仔细分析，每棵树只有保留或移走两种状态，可以通过数组记录状态变化。更重要的是，以数组为媒介，可以将嵌套循环拆解为并列循环，时间复杂度降为O(L+R)。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"PVS4D\"><span\r\nstyle=\"font-weight:bold;\">代码5.13</span> 空间换时间\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main (  )\r\n{\r\n    int L;\r\n    cin&gt;&gt;L;\r\n    bool tree[L+1];\r\n    for(auto &amp;e:tree)    e = 1;\r\n    int left,right;\r\n    while(cin&gt;&gt;left&gt;&gt;right)\r\n        for(int i=left;i&lt;=right;++i)\t//将删除区域的值修改为0\r\n            tree[i] = 0;\r\n    int sum = 0;\r\n    for(auto e:tree)\r\n        sum += e;\r\n    cout&lt;&lt;sum&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u83a4478b\">\r\n   <span class=\"ne-text\">\r\n    因为第8行定义的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     tree\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    是一个动态数组，不能进行直接初始化。第9行用范围\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     for\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的形式将数组全部初始化为1。注意这里要改变每个元素的值，因此\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     e\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    必须采用引用形式。\r\n   </span>\r\n  </li>\r\n  <li id=\"u8f7dd609\">\r\n   <span class=\"ne-text\">\r\n    第14-16行借助true/false和1/0的对应关系，不采用判断，直接将所有数值求和得到剩余树的数量。\r\n   </span>\r\n  </li>\r\n  <li id=\"ud44d039f\">\r\n   <span class=\"ne-text\">\r\n    第9行和第15-16行遍历所有的树，第11-13行遍历所有的范围。这两个遍历的中间媒介是数组tree，两个遍历形成并列关系而不是嵌套关系。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"XV2Mo\">\r\n  <span class=\"ne-text\">\r\n   例题5.7\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u25c3d26d\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   假设你正在爬楼梯。需要 n 阶你才能到达楼顶。每次你可以爬 1 或 2\r\n            个台阶。你有多少种不同的方法可以爬到楼顶呢？其中\r\n  </span>\r\n  <span class=\"ne-math\" id=\"l0bKX\">\r\n   <img src=\"../assets/images/2d1ce477ad43aec77a0cf4b5d550f3f8.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    (\r\n   </span>\r\n  </strong>\r\n  <a class=\"ne-link\" data-href=\"https://leetcode.cn/problems/climbing-stairs/description/\" href=\"https://leetcode.cn/problems/climbing-stairs/description/\" target=\"_blank\">\r\n   <strong>\r\n    <span class=\"ne-text\">\r\n     力扣70\r\n    </span>\r\n   </strong>\r\n  </a>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    )\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u3cd4ba49\">\r\n  <span class=\"ne-text\" style=\"font-size: 16px\">\r\n   【题目解析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uaba1a2ec\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"font-size: 16px\">\r\n   仔细分析题目，如果上到第n-2阶台阶共有f(n-2)种方法，上到第n-1阶台阶共有f(n-1)种方法，则f(n)=f(n-1)+f(n-2)，这其实就是一个斐波那契数列。因此采用递归求解非常简单。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"DpG5i\"><span\r\nstyle=\"font-weight:bold;\">代码5.14</span> 递归求斐波那契数列 I\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\nlong long fib(int n){\r\n    if(n==1||n==2)return n;\r\n    return fib(n-1)+fib(n-2);\r\n}\r\nint main ()\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    long long num = fib(n);\r\n    cout&lt;&lt;num&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u3eee3ede\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    整个程序一目了然，但是当输入为50时，在codeblocks上的运行时间为55.5秒。耗时的主要原因是重复计算。n越大，重复的越多，耗时就越长。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"ue509986b\" style=\"text-align: center\">\r\n  <img class=\"ne-image\" id=\"ua8c5fe6f\" src=\"../assets/images/1675564329857-752bcb8b-e6a5-40d0-8d7e-d4d03a4f12dd.png\" width=\"682\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5d840fbd\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.2 斐波那契数列的递归展开，以fib(6)为例\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u85eff2c0\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"font-size: 16px\">\r\n   事实上，如果已经计算过fib(n)，可以存储起来，下次用到的时候直接使用，就可以极大的加快计算速度。这是一个比较经典的以空间换时间的操作。这种方法称为带备忘录的递归方法，可以解决绝大部分递归超时问题。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"z8BKM\"><span\r\nstyle=\"font-weight:bold;\">代码5.15</span> 递归求斐波那契数列 II\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\nlong long ret[100]={0,1,2};\t\t\t\t//建立一个备忘录\r\nlong long fib(int n){\r\n    if(n &amp;&amp; !ret[n])\t\t\t\t\t//如果需要更新备忘录\r\n    \tret[n]=fib(n-1)+fib(n-2);\t\t//更新备忘录\r\n    return ret[n];\t\t\t\t\t\t//返回备忘录中对应的值\r\n}\r\nint main ()\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    long long num = fib(n);\r\n    cout&lt;&lt;num&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uc1d5e7c9\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    第3行给定了一个全局变量数组，并初始化了fib(1)和fib(2)的值，其余默认为0。全局变量的生命周期贯穿整个程序的运行，可以在任意位置使用。\r\n   </span>\r\n  </li>\r\n  <li id=\"u35dfe888\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    第6行将每次计算的结果保存到数组\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     ret\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    中的对应位置上。计算时第5行先进行判断，如果fib(n)已经计算过（不为0），这直接返回结果，这样极大的加快了计算速度。当输入为50甚至90时，运行时间在codeblocks上大约都为3.5秒，这还是因为包括了输入输出的时间。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"uce603abc\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"font-size: 16px\">\r\n   因为全局变量可以在任意处使用，可能会造成程序的混乱，因此并不建议使用。以下代码采用static静态变量，其作用域在局部，但是生命周期与全局变量相同。初始化操作只会执行一次。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"RKoQP\"><span\r\nstyle=\"font-weight:bold;\">代码5.16</span> 递归求斐波那契数列 III\r\n<code>long long fib(int n){\r\n    static long long ret[100]={0,1,2};\t//建立一个备忘录\r\n    if(n &amp;&amp; !ret[n])\t\t\t\t\t//如果需要更新备忘录\r\n    \tret[n]=fib(n-1)+fib(n-2);\t\t//更新备忘录\r\n    return ret[n];\t\t\t\t\t\t//返回备忘录中对应的值\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"链接1a\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    第2行定义的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     ret\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    是静态变量，只能在函数内部使用。但是其生命周期与全局变量一致，贯穿整个程序的运行过程。第2行的代码在反复调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     fib\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    函数的过程中会多次执行到该位置，但是这条语句只在第一次执行的时候起作用，后继执行到该位置的时候，会自动忽略第2行语句，因此整个变量的定义和初始化只会执行一次，其效果与全局变量完全相同。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"fakFb\">\r\n  <span class=\"ne-text\">\r\n   知识点：T525\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"V1psN\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u5ba8d48f\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"链接91\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ud830860d\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u155c4cd1\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u317ae03a\">\r\n      <span class=\"ne-text\">\r\n       T525\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u873f98d0\">\r\n      <span class=\"ne-text\">\r\n       以空间消耗换取时间效率是算法优化的基本方法\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uce1fc837\">\r\n      <span class=\"ne-text\">\r\n       利用全局变量或静态变量构建数组，实现递归的快速计算，注意静态变量的使用\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"udca1f575\">\r\n      <a class=\"ne-link\" data-href=\"#pNT2u\" href=\"#pNT2u\">\r\n       <span class=\"ne-text\">\r\n        T513\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ud4ca7379\">\r\n      <a class=\"ne-link\" data-href=\"#bDkij\" href=\"#bDkij\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u5dbfa2f6\">\r\n      <a class=\"ne-link\" data-href=\"#Km6tT\" href=\"#Km6tT\">\r\n       <span class=\"ne-text\">\r\n        T528\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"KKCom\">\r\n  <span class=\"ne-text\">\r\n   2.5 打表法\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ue2be086f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   在一些题目中，某些计算过程需要反复使用，这就造成了时间的严重消耗，可能造成超时问题。遇到这种情况，可以一次性计算所有可能输入对应的的结果，并保存到数组中，之后直接查询。这种方式主要对每个可能的计算只操作一遍，从而达到了节省时间的目的。这种利用数组的方式称为打表法。注意这个技巧只适用于输入的值域不大的问题，否则可能会导致内存超限、时间超限等问题。\r\n  </span>\r\n </p>\r\n <h3 id=\"AuYzI\">\r\n  <span class=\"ne-text\">\r\n   例题5.8\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ub03a1782\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定n个不同的非负整数，求这些数中有多少对整数的值正好相差1。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    （CSP2014年9月真题）\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"ubf4899ac\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u9d6dd9df\">\r\n  <span class=\"ne-text\">\r\n   第一行包含一个整数n（1≤n≤1000），表示给定非负整数的个数\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ucc8895b1\">\r\n  <span class=\"ne-text\">\r\n   第二行包含n个给定的非负整数，每个整数不超过10000\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0480e687\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ub26900a2\">\r\n  <span class=\"ne-text\">\r\n   这n个非负整数中有多少对整数的值正好相差1\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"LpRse\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u14aecf53\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u3f21584e\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ucae2b18b\">\r\n      <span class=\"ne-text\">\r\n       6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2543f9a1\">\r\n      <span class=\"ne-text\">\r\n       10 2 6 3 7 8\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u7b2f52ab\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u52dd320a\">\r\n  <span class=\"ne-text\">\r\n   【样例说明】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc813b9d8\">\r\n  <span class=\"ne-text\">\r\n   相差为1的整数对包括(2,3), (6,7), (7,8)\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u99f6b07c\">\r\n  <span class=\"ne-text\">\r\n   【问题分析】朴素的方法是逐个枚举，使用双重嵌套循环，时间复杂度为O(\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    n\r\n   </span>\r\n  </em>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   )。也可以先排序，然后检测相邻元素是否符合题目规定，时间复杂度为O(\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    n\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   log\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    n\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   )，即排序的复杂度。根据题目说明，每个非负整数最大不超过10000，因此最佳方式是创建一个元素个数为10000的数组，将所有数据标定出来，再进行向量元素检测。时间复杂度降为O(\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    n\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   )。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"BEfZD\"><span\r\nstyle=\"font-weight:bold;\">代码5.17</span> 打表法\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main (  )\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    bool cnt[10010]= {0};\t\t\t\t//给定一些冗余空间，防止边界错误\r\n    int x,min=10000,max=0,ans;\r\n    for(int i=0; i&lt;n; ++i){\r\n        cin&gt;&gt;x;\r\n        if(x&lt;min)   min = x;\t\t\t//求最小值\r\n        if(x&gt;max)   max = x;\t\t\t//求最大值\r\n        cnt[x] = 1;\t\t\t\t\t\t//对应x的位置有数值\r\n    }\r\n    for(int i=min+1;i&lt;=max;++i)\t\t\t//遍历所有有效数值\r\n        ans += (cnt[i]+cnt[i-1]==2);\t//如果相邻两个元素都有效，则相加必为2\r\n    cout&lt;&lt;ans&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uad35a1c4\">\r\n   <span class=\"ne-text\">\r\n    本题目借助数组，虽然浪费了一定的空间，但是极大降低了算法的复杂度。当对\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     cnt\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    进行赋值后，实际上就是按空间顺序完成了排序，又不需要排序那么复杂。\r\n   </span>\r\n  </li>\r\n  <li id=\"u1218e0ff\">\r\n   <span class=\"ne-text\">\r\n    第8行元素只有10000个，但是边界是最容易出问题的地方，因此额外定义了10个空间。\r\n   </span>\r\n  </li>\r\n  <li id=\"u28c20882\">\r\n   <span class=\"ne-text\">\r\n    第16行的遍历，可以是0~10000，但本算法在输入过程中求解了最大值和最小值，降低了遍历的范围。\r\n   </span>\r\n  </li>\r\n  <li id=\"u4856a8a6\">\r\n   <span class=\"ne-text\">\r\n    第17行也可以修改为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ans += cnt[i]&amp;&amp;cnt[i-1]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，同样表示两个相邻元素都为1时计数加1。\r\n   </span>\r\n  </li>\r\n  <li id=\"u88ade4e2\">\r\n   <span class=\"ne-text\">\r\n    第17行也可以修改为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ans += cnt[i]&amp;cnt[i-1]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，只有两个相邻元素都为1时，进行“位与”运算的结果才能为1。位运算是底层运算，计算效率最高。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"aIxI7\">\r\n  <span class=\"ne-text\">\r\n   随堂练习5.3\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ud94c6621\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   有N个非零且各不相同的整数。请你编一个程序求出它们中有多少对相反数(a和-a为一对相反数)。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    （CSP2014年3月真题）\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u497b59e8\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ub6ad2482\">\r\n  <span class=\"ne-text\">\r\n   第一行包含一个正整数N (1≤N≤500)。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uee6f0187\">\r\n  <span class=\"ne-text\">\r\n   第二行为N个用单个空格隔开的非零整数，每个数的绝对值不超过1000，保证这些整数各不相同。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7ec30186\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u87e5a5bf\">\r\n  <span class=\"ne-text\">\r\n   只输出一个整数， 即这N个数中包含多少对相反数。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"UiR5f\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf0333f61\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u103d05d0\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud55b44fc\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub15ceffc\">\r\n      <span class=\"ne-text\">\r\n       1 2 3 -1 -2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u08caf513\">\r\n      <span class=\"ne-text\">\r\n       2\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"oIzDD\">\r\n  <span class=\"ne-text\">\r\n   例题5.9\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u85994bf8\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给定n个整数，求第i~j之间所有数据的和。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4c62697a\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u12943a79\">\r\n  <span class=\"ne-text\">\r\n   第一行包含一个正整数N (1≤N≤10000)。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u51820b6a\">\r\n  <span class=\"ne-text\">\r\n   第二行为N个用单个空格隔开的整数，每个数小于10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    5\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7bb9d509\">\r\n  <span class=\"ne-text\">\r\n   从第三行开始，每行输入两个整数\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    i\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   和\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    j\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   ，1≤\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    i\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   ≤\r\n  </span>\r\n  <em>\r\n   <span class=\"ne-text\">\r\n    j\r\n   </span>\r\n  </em>\r\n  <span class=\"ne-text\">\r\n   ≤10000\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud396afe4\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc93b914a\">\r\n  <span class=\"ne-text\">\r\n   输出从输入第三行开始每行指定范围的所有整数的和\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"zsDlf\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf6fac26e\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u875c72c5\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u35dfde0f\">\r\n      <span class=\"ne-text\">\r\n       6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub64d09f7\">\r\n      <span class=\"ne-text\">\r\n       10 2 6 3 7 8\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"链接fc\">\r\n      <span class=\"ne-text\">\r\n       2 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub75c16fa\">\r\n      <span class=\"ne-text\">\r\n       3 6\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u00f4bb38\">\r\n      <span class=\"ne-text\">\r\n       11\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u307a54cd\">\r\n      <span class=\"ne-text\">\r\n       24\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u4582ec1a\">\r\n  <span class=\"ne-text\">\r\n   【题目分析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc12dd337\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   这个题目从表面上看就是一个简单的数据求和问题，但是求和范围可能有重叠，重叠部分如果范围较大，次数较多时，就会造成严重的时间浪费，从而出现超时问题。以下方法采用打表法进行解决。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"PeIpG\"><span\r\nstyle=\"font-weight:bold;\">代码5.18</span> 打表法求数据和\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main (  )\r\n{\r\n    int n,x;\r\n    cin&gt;&gt;n;\r\n    int table[10010]= {0};\r\n    for(int i=0; i&lt;n; ++i){\r\n        cin&gt;&gt;x;\r\n        table[i+1] = table[i]+x;\r\n    }\r\n    int i,j;\r\n    while(cin&gt;&gt;i&gt;&gt;j)\r\n        cout&lt;&lt;table[j]-table[i-1]&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u637e7aaa\">\r\n   <span class=\"ne-text\">\r\n    第8行建立了一个数组，保存在第9~12行中输入数据的累积和。\r\n   </span>\r\n  </li>\r\n  <li id=\"u276d0477\">\r\n   <span class=\"ne-text\">\r\n    第15行中，对应范围的两个累积和相减，就得到了这个范围内所有数据的和。这种方法的最大优势就体现在对于重复的范围只计算了一次，去除了时间的反复消耗。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"MUXsu\">\r\n  <span class=\"ne-text\">\r\n   例题5.10\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ucb538bec\">\r\n  <span class=\"ne-text\">\r\n   计算小于给定非负整数n的所有素数的个数。0 ≤ n ≤ 5 * 10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    6\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   ，当n为0或1时，对应结果为0。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    （\r\n   </span>\r\n  </strong>\r\n  <a class=\"ne-link\" data-href=\"https://leetcode.cn/problems/count-primes/\" href=\"https://leetcode.cn/problems/count-primes/\" target=\"_blank\">\r\n   <strong>\r\n    <span class=\"ne-text\">\r\n     力扣204\r\n    </span>\r\n   </strong>\r\n  </a>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    ）\r\n   </span>\r\n  </strong>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"ZQPjS\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接21\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud22a5519\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u466aa86f\">\r\n      <span class=\"ne-text\">\r\n       10\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u92a53031\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"uec63c9f7\">\r\n  <span class=\"ne-text\">\r\n   【样例说明】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6b83d2bb\">\r\n  <span class=\"ne-text\">\r\n   分别为2, 3, 5, 7。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7f91bad8\">\r\n  <span class=\"ne-text\">\r\n   【题目分析】如果对范围内的每个数据都进行素数判断，会造成极大的时间浪费。利用打表法，把这个想法倒过来。从2开始向后遍历，将所有数据的倍数标记为非素数，这样统计起来非常简单。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"SQ1Tc\"><span\r\nstyle=\"font-weight:bold;\">代码5.19</span> 打表法求素数个数\r\n<code>#include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main (  )\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    int res = 0;\r\n    bool prime[n+10];\r\n    for(auto &amp;e:prime)  e=true;\r\n    for (int i = 2; i &lt; n; ++i){\r\n        if (prime[i]) {\t\t\t\t\t\t\t//如果i是素数\r\n            ++res;\t\t\t\t\t\t\t\t//答案加1\r\n            for (int j = i+i; j &lt; n; j+=i)\t\t//将i的所有倍数设置为false\r\n                prime[j] = false;\r\n        }\r\n    }\r\n    cout&lt;&lt;res&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u2feed93a\">\r\n   <span class=\"ne-text\">\r\n    第9行建立了一个数组保存所有可能的候选答案，通过第10行全部初始化为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </li>\r\n  <li id=\"u45296da0\">\r\n   <span class=\"ne-text\">\r\n    第11-17行从小到大遍历所有可能的候选答案，将素数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     i\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的所有倍数全部标记为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     false\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。剩余的就全部为素数。\r\n   </span>\r\n  </li>\r\n  <li id=\"u5fe6714d\">\r\n   <span class=\"ne-text\">\r\n    虽然从表面上看是一个嵌套循环，时间复杂度应该为O(n\r\n   </span>\r\n   <sup>\r\n    <span class=\"ne-text\">\r\n     2\r\n    </span>\r\n   </sup>\r\n   <span class=\"ne-text\">\r\n    )，但是仔细分析就可以知道，第14行的循环是跳跃的，整个程序执行完毕后，数组中的每个元素只被第14行的循环访问一次。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"bDkij\">\r\n  <span class=\"ne-text\">\r\n   知识点：T526\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"DPUnD\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uaffd11eb\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u78b9dae8\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"61\">\r\n     <p class=\"ne-p\" id=\"u00d59ae4\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"64\">\r\n     <p class=\"ne-p\" id=\"uf883bdcc\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"链接54\">\r\n      <span class=\"ne-text\">\r\n       T526\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u0e85ac82\">\r\n      <span class=\"ne-text\">\r\n       打表法是数组应用的最重要方法之一，需要重点掌握\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue02bf2b9\">\r\n      <span class=\"ne-text\">\r\n       空间消耗不能过大，一般在\r\n      </span>\r\n      <span class=\"ne-math\" id=\"j7aKi\">\r\n       <img src=\"../assets/images/c7022ea2f7be44ce2b2cc27bef201f60.svg\"/>\r\n      </span>\r\n      <span class=\"ne-text\">\r\n       以内，如果题目中没有缩减范围则不能用打表法\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u7273c2cc\">\r\n      <span class=\"ne-text\">\r\n       尽量减少数组遍历的范围\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"61\">\r\n     <p class=\"ne-p\" id=\"u3c694ee5\">\r\n      <a class=\"ne-link\" data-href=\"#fakFb\" href=\"#fakFb\">\r\n       <span class=\"ne-text\">\r\n        T525\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"64\">\r\n     <p class=\"ne-p\" id=\"ub270fa6c\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#cOtOt\" href=\"ch8#cOtOt\">\r\n       <span class=\"ne-text\">\r\n        T833\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#cR2Bd\" href=\"ch8#cR2Bd\">\r\n       <span class=\"ne-text\">\r\n        T871\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#jxNPL\" href=\"ch8#jxNPL\">\r\n       <span class=\"ne-text\">\r\n        T872\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#Yve1p\" href=\"ch8#Yve1p\">\r\n       <span class=\"ne-text\">\r\n        T873\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"684\">\r\n     <p class=\"ne-p\" id=\"u5f52ed60\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX509)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX510)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"Tpq9G\">\r\n  <span class=\"ne-text\">\r\n   2.6 排序\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ud8fc4d48\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   排序是多数值运算中的基本操作，一般分为升序和降序。排序的方法有很多，经典排序方法包括冒泡法、选择法、插入法和归并排序法等。这些算法的动画演示可以参见网站\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://visualgo.net/zh/sorting\" href=\"https://visualgo.net/zh/sorting\" target=\"_blank\">\r\n   <span class=\"ne-text\">\r\n    https://visualgo.net/zh/sorting\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   。\r\n  </span>\r\n </p>\r\n <div class=\"ne-quote\">\r\n  <p class=\"ne-p\" id=\"u14bc16b7\">\r\n   <span class=\"ne-text\">\r\n    visualgo是一个非常好的算法动画演示平台，很多常用算法都在该网站有动画形式展现。\r\n   </span>\r\n  </p>\r\n </div>\r\n <h3 id=\"wQDhG\">\r\n  <span class=\"ne-text\">\r\n   2.6.1 冒泡排序\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u781c2e10\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(68, 68, 68)\">\r\n   冒泡排序是一种简单的排序算法，它也是一种稳定排序算法。\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   重复遍历要排序的元素，依次比较两个相邻的元素，如果顺序错误就进行交换，直到没有相邻元素需要交换，完成排序。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端（升序或降序排列），就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样，故名“冒泡排序”。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"链接e6\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(68, 68, 68)\">\r\n   假设对待排序序列(5,1,4,2,8)进行升序排列，第一轮排序将最大元素置于最后：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6d6708bb\">\r\n  <img class=\"ne-image\" id=\"u68921a78\" src=\"../assets/images/1658920317330-459be34e-07e0-4642-b243-de5fffd8bd98.gif\" width=\"800\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4e6c74d0\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.3 冒泡排序的第一轮排序\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uceedb06b\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(68, 68, 68)\">\r\n   第二轮待排序序列只包含前 4 个元素，将其中最大元素放置在待排序序列尾部：\r\n  </span>\r\n  <img class=\"ne-image\" id=\"u321c19bd\" src=\"../assets/images/1658920445648-234a4e23-9637-405d-91e1-88f3b016d0c5.gif\" width=\"800\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u3db7541a\" style=\"text-indent: 2em; text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.4\r\n            冒泡排序的第二轮排序\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u3eb4b2a8\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(68, 68, 68)\">\r\n   第三轮待排序序列只包含前 3个元素，将其中最大元素放置在待排序序列尾部：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"udb95ad8c\">\r\n  <img class=\"ne-image\" id=\"u3b92afa2\" src=\"../assets/images/1658920575968-02c2b058-9ea0-494e-a51c-045b28306f0f.gif\" width=\"800\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"udadd12ea\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.5 冒泡排序的第三轮排序\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8634c3d1\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   第四轮只剩下2个元素，对其进行顺序调整，完成排序。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u573d8b85\">\r\n  <img class=\"ne-image\" id=\"u908d2632\" src=\"../assets/images/1658920721916-5732318c-b1ad-40f9-bee8-d957776ba801.gif\" width=\"800\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua1c2b1e4\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.6 冒泡排序的第四轮排序\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"udb1ca1d4\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   由此可以推导，对于\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    n\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   个元素的排序，需要比较\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    n-1\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   轮，对于第\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    i\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   轮排序，比较\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    n-i\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   次。该算法时间复杂度为O(n\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   )。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"mrjZR\"><span\r\nstyle=\"font-weight:bold;\">代码5.20</span> 冒泡排序\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid bubble_sort(int n,int a[]) {\r\n    for (int i = 0; i &lt; n; i++) {\r\n        //对待排序序列进行冒泡排序\r\n        for (int j = 0; j + 1 &lt; n - i; j++) {\r\n            //相邻元素进行比较，当顺序不正确时，交换位置\r\n            if (a[j] &gt; a[j + 1]) {\r\n                int temp = a[j];\r\n                a[j] = a[j + 1];\r\n                a[j + 1] = temp;\r\n            }\r\n        }\r\n        cout&lt;&lt;\"第\"&lt;&lt;i+1&lt;&lt;\"轮排序：\";\r\n        for(int j = 0; j&lt; n; ++j)\r\n            cout&lt;&lt;a[j]&lt;&lt;' ';\r\n        cout&lt;&lt;endl;\r\n    }\r\n}\r\n\r\nint main(){\r\n    int a[] = { 5,1,4,2,8 };\r\n    bubble_sort(sizeof(a)/sizeof(int),a);\r\n    return 0;\r\n}</code></pre>\r\n <h3 id=\"bgmHW\">\r\n  <span class=\"ne-text\">\r\n   2.6.2 其他典型排序方法\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"uaf3021b1\" style=\"text-indent: 2em\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    选择法排序\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\">\r\n   ：与冒泡法基本流程相同，但是每次比较的时候不进行交换，只是记录最优值的下标，每轮交换一次，将一个极值放到有序位置。只是交换的次数比冒泡法少。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0ce5646c\" style=\"text-indent: 2em\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    插入法排序\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\">\r\n   ：每次取出一个元素，放到已有有序数组的对应位置上。类似打牌时一边摸牌，一边排序。例如山东流行的“保皇”“勾机”等玩法需要四副牌，这种摸牌方法尤其通用。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7cd20bd0\" style=\"text-indent: 2em\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    快速排序\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\">\r\n   ：每轮随机选取一个元素作为基准，将所有元素分为比基准大和小两组，分别放到基准的左侧和右侧，然后分别对两组采用相同的方法进行处理。这样排序轮次降低为\r\n  </span>\r\n  <span class=\"ne-math\" id=\"Q2ZuN\">\r\n   <img src=\"../assets/images/cd40280cdc832013a593b2df92ed2275.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   。C++中默认提供的sort函数就是采用的快速排序方法。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"QTNB9\"><span\r\nstyle=\"font-weight:bold;\">代码5.21</span> 快速排序函数\r\n<code>#include &lt;iostream&gt;\r\n#include &lt;algorithm&gt;\r\nusing namespace std;\r\n\r\nbool cmp(int a,int b){\r\n    return a&gt;b;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin &gt;&gt; n;\r\n    int a[n+3];\r\n    for (int i=0;i&lt;n;++i){\r\n        cin &gt;&gt; a[i];\r\n    }\r\n    sort(a,a+n);\t\t\t//升序\r\n    //reverse(a,a+n);\t\t//逆序\r\n    for (int i=0;i&lt;n;++i){\r\n        cout &lt;&lt; a[i] &lt;&lt; \" \";\r\n    }\r\n    cout&lt;&lt;endl;\r\n    sort(a,a+n,cmp);\t\t\t//按照cmp函数指定的规则进行排序，此处为降序\r\n    for (int i=0;i&lt;n;++i){\r\n        cout &lt;&lt; a[i] &lt;&lt; \" \";\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"fe9Di\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc64e9462\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接01\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uadd4410b\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua9c16f29\">\r\n      <span class=\"ne-text\">\r\n       5 1 7 6\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua6197b86\">\r\n      <span class=\"ne-text\">\r\n       1 5 6 7\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u3812d3c5\">\r\n      <span class=\"ne-text\">\r\n       7 6 5 1\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u318c91fb\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     sort\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    默认按照升序排列，如果需要降序，将排列好的数组调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     reverse\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    进行逆序即可。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2e548913\">\r\n   <span class=\"ne-text\">\r\n    注意第5-7行自定义的比较函数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     cmp\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，要求返回值为布尔类型，两个参数的数据类型与数组中元素的数据类型相同。其中a和b代表数组中的两个元素。函数体中定义两个元素的比较规则。例如第6行中定义当\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     a&gt;b\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    时返回为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     true\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，因此第23行的调用结果形成降序。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u762b0a2f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   一般情况下，称某个排序算法稳定，指的是当待排序序列中有相同的元素时，它们的相对位置在排序前后不会发生改变。在NOI竞赛中，经常考察算法的稳定性，下表列出常用排序算法的时间复杂度和稳定性。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u10ca6adf\" style=\"text-indent: 2em; text-align: center\">\r\n  <span class=\"ne-text\">\r\n   表5.2\r\n            常用排序算法的时间复杂度和稳定性\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table no-border\" id=\"NR6nV\" style=\"width: 855px;text-align:center\" align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"7\" style=\"background-color: #101E60\" width=\"855\">\r\n     <p class=\"ne-p\" id=\"u1680db17\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\" style=\"color: #FFFFFF\">\r\n        各种常用排序算法\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" style=\"background-color: #CEF5F7\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"u2c40f95e\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        类别\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"2\" style=\"background-color: #CEF5F7\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"uf7152c9c\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        排序方法\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td colspan=\"3\" style=\"background-color: #CEF5F7\" width=\"409\">\r\n     <p class=\"ne-p\" id=\"u6cfeb09f\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        时间复杂度\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #CEF5F7\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u58ce580e\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        空间复杂度\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td rowspan=\"2\" style=\"background-color: #CEF5F7\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u83b0542e\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        稳定性\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: #CEF5F7\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u004e90ac\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        平均情况\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #CEF5F7\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"u6b8acef7\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        最好情况\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #CEF5F7\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"ue3bac58b\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        最坏情况\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #CEF5F7\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u0daa17a5\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        辅助存储\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"u40ed5293\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        插入排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"u92729dc2\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        直接插入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"udf56efdb\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"HGN1C\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"u8d3fd7e5\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"NQ1Na\">\r\n       <img src=\"../assets/images/e65a67ac353abeeff44c359310d05c02.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u35d877f3\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"eKgbx\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u4c6399fa\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"kCvAS\">\r\n       <img src=\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u370c7fe7\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"链接a6\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        shell排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u37889af5\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"MvQKF\">\r\n       <img src=\"../assets/images/057b59460eee88aad289b71782d747e2.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"ud8d18d45\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"pWGME\">\r\n       <img src=\"../assets/images/e65a67ac353abeeff44c359310d05c02.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"ua7f3c274\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"ebqyJ\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u730a7963\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"osgIF\">\r\n       <img src=\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"链接f2\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       不稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"u1ed5767b\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        选择排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"ufb545f21\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        直接选择\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u7fe9ef31\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"x1xB7\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"u205cdd53\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"JBGw0\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"ua9d7f0c0\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"NmQGS\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u6819ae9d\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"ZMn2t\">\r\n       <img src=\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u74b89cc1\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       不稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"ued955eb8\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        堆排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"ua2274385\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"Fm5Y9\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"uc8839769\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"DnYvO\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u8c5a6c3b\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"zd56k\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u80b48ca2\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"l2ACv\">\r\n       <img src=\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u52a5fc79\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       不稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"ub7f5a2fa\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        交换排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"u63adc47a\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        冒泡排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"uff08789c\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"M3MEp\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"u35912cc9\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"tF5C8\">\r\n       <img src=\"../assets/images/e65a67ac353abeeff44c359310d05c02.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u076cbcb0\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"rDZna\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u0f3be563\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"gHKLn\">\r\n       <img src=\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u6e4f51d6\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td style=\"background-color: #F8B881\" width=\"107\">\r\n     <p class=\"ne-p\" id=\"u750bacd4\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        快速排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u7eb608aa\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"K9zRk\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"u8ba5017e\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"b4kp9\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"ufe372be1\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"GNze3\">\r\n       <img src=\"../assets/images/f2d5f588234eb61a559ff90c41511b85.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u4452a5a1\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"Gc5Ot\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u96959b75\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       不稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"2\" style=\"background-color: #F8B881\" width=\"214\">\r\n     <p class=\"ne-p\" id=\"u069e59f1\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        归并排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"ub670663a\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"TuDp9\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"u7a6df89b\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"Lnovf\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u38aa211c\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"c4HQM\">\r\n       <img src=\"../assets/images/cc25c72f0ea4026e2d48746dc93d855d.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"u1a3b185c\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"YXRZA\">\r\n       <img src=\"../assets/images/a2006f1ac61cb1902beacb3e29fff089.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"u85f71f0f\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"2\" style=\"background-color: #F8B881\" width=\"214\">\r\n     <p class=\"ne-p\" id=\"ubbad094b\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        基数排序\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"u003ed9ff\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"DdBB5\">\r\n       <img src=\"../assets/images/09842c90e02b38248f6f9bca3bba2979.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"145\">\r\n     <p class=\"ne-p\" id=\"ua7a0166a\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"Zss1e\">\r\n       <img src=\"../assets/images/b4d3ac356aef6e64c1c425155c81b9d8.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"132\">\r\n     <p class=\"ne-p\" id=\"uded5575c\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"OtUzu\">\r\n       <img src=\"../assets/images/09842c90e02b38248f6f9bca3bba2979.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"124\">\r\n     <p class=\"ne-p\" id=\"uacf71304\" style=\"text-align: center\">\r\n      <span class=\"ne-math\" id=\"MYB1Y\">\r\n       <img src=\"../assets/images/120f6e4d5da3fdac818f17632cc4f475.svg\"/>\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td style=\"background-color: #F5D480\" width=\"108\">\r\n     <p class=\"ne-p\" id=\"uc5c85f02\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       稳定\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"7\" style=\"background-color: #8CCF17\" width=\"855\">\r\n     <p class=\"ne-p\" id=\"ua5f2187d\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       注：基数排序的复杂度中，r\r\n                            代表关键字的基数，d 代表长度，n 代表关键字的个数\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"pyYpq\">\r\n  <span class=\"ne-text\">\r\n   知识点：T527\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"y6HAe\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u8cb5b9ba\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u2a7d4f6b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ub2d829b3\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ud4a78711\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u82f327cf\">\r\n      <span class=\"ne-text\">\r\n       T527\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"udea63818\">\r\n      <span class=\"ne-text\">\r\n       排序是基本算法，理解冒泡法、选择法、插入法和快速排序的基本思想和时间效率；能使用algorithm库中的sort函数对数组进行快速排序，能自定义比较规则\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uaf408078\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/iz3dks#XPPV7\" href=\"ch3#XPPV7\">\r\n       <span class=\"ne-text\">\r\n        T312\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u80699b14\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"696\">\r\n     <p class=\"ne-p\" id=\"ucaf0af93\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX511)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"e3uMh\">\r\n  <span class=\"ne-text\">\r\n   2.7 动态规划*\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"u4212ada1\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   动态规划（Dynamic Programming,\r\n            DP）是求解多阶段决策问题最优化的一种算法技术。为了解决复杂问题，它将大问题分解为相对简单的子问题，大问题的最优解取决于子问题的最优解。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u49f8e938\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   如果一个问题，能够把所有可能的答案穷举出来，并且穷举出来后，发现存在重叠子问题，就可以考虑使用动态规划。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    重叠子问题\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\">\r\n   是指求解大问题时需要多次重复求解小问题，它曾在\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"#XV2Mo\" href=\"#XV2Mo\">\r\n   <span class=\"ne-text\">\r\n    例题5.7\r\n   </span>\r\n  </a>\r\n  <span class=\"ne-text\">\r\n   中被提及。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"链接f7\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   下面以例题5.7为例，讲解使用动态规划解题的步骤。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u305d31e7\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第一步：穷举分析\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u28ee8075\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   假设爬到第n级台阶共有f(n)种爬法。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud056e690\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当台阶数n为1时，只有一种爬法，f(1) = 1。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u07eacb16\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当台阶数n为2时，有两种爬法。第一种是直接爬两级，第二种是先爬一级然后再爬一级。f(2) = 2。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u9069da46\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当台阶数n为3时，要么是先爬到第二级台阶然后再爬一级，要么是先爬到第一级台阶然后再直接爬两级。因此f(3) = f(2) + f(1) = 3。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0c61c59e\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当台阶数n为4时，要么是先爬到第三级台阶然后再爬一级，要么是先爬到第二级台阶然后再直接爬两级。因此f(4) = f(3) + f(2) = 5。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ueaefc84f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   以此类推。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"链接ce\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第二步：确定边界\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue47ffc8c\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   通过穷举分析，发现当台阶数n是1或2时，能够直接求得有多少种爬法，即f(1)\r\n            = 1, f(2) = 2。当台阶数\r\n  </span>\r\n  <span class=\"ne-math\" id=\"m0HJe\">\r\n   <img src=\"../assets/images/6cfed3df29ab5de9a8803963ff06dcd0.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   时，已经呈现出规律：f(n) = f(n-1) + f(n-2)。因此f(1) = 1, f(2) = 2就是爬楼梯问题的边界。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc488b046\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第三步：找规律，确定最优子结构\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6a088195\" style=\"text-indent: 2em\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    最优子结构\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\">\r\n   是指大问题的最优解可以由其子问题的最优解有效地构造出来。当台阶数\r\n  </span>\r\n  <span class=\"ne-math\" id=\"zqyTG\">\r\n   <img src=\"../assets/images/6cfed3df29ab5de9a8803963ff06dcd0.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   时，有f(n) = f(n-1) + f(n-2)，因此\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(77, 77, 77)\">\r\n   f(n-1)和f(n-2) 就是 f(n) 的最优子结构。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uedc6ea8c\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第四步：写出状态转移方程\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2a3e100f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   通过前面三个步骤，得到状态转移方程如下：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ucdaa97fe\" style=\"text-align: center\">\r\n  <span class=\"ne-math\" id=\"Y9TEb\">\r\n   <img src=\"../assets/images/2265b1d76248c03dc23a0239619d08dc.svg\"/>\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u87b7a629\">\r\n  <span class=\"ne-text\">\r\n   使用动态规划解题的模板如下：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"ZtOXQ\"><span\r\nstyle=\"font-weight:bold;\">代码5.22</span> 动态规划解题的模板\r\n<code>// 动态规划解题的模板\r\n// dp[0][0][...] = 边界值;\r\n// for(状态1: 所有状态1的值){\r\n//     for(状态2: 所有状态2的值){\r\n//         for(...){\r\n//         \t状态转移方程;\r\n//         }\r\n//     }\r\n// }\r\n#include&lt;iostream&gt;\r\nusing namespace std;\r\nint main ()\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    int a[n] = {1,2};\t\t\t\t//设定边界值\r\n    for(int i=2;i&lt;n;i++)\t\t\t//遍历所有状态1的值\r\n        a[i] = a[i-1]+a[i-2];\t\t//转移方程\r\n\tcout&lt;&lt;a[n-1];\r\n    return 0;\r\n}</code></pre>\r\n <h3 id=\"Eno2R\">\r\n  <span class=\"ne-text\">\r\n   例题5.11\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u9cdbda59\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   给你一个整数数组 nums ，找到其中最长严格递增子序列(Longest\r\n            Increasing Subsequence, LIS)的长度。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ucfb6dd5a\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    子序列\r\n   </span>\r\n  </strong>\r\n  <span class=\"ne-text\">\r\n   是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7]\r\n            的子序列。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    （\r\n   </span>\r\n  </strong>\r\n  <a class=\"ne-link\" data-href=\"https://leetcode.cn/problems/longest-increasing-subsequence/\" href=\"https://leetcode.cn/problems/longest-increasing-subsequence/\" target=\"_blank\">\r\n   <strong>\r\n    <span class=\"ne-text\">\r\n     力扣300\r\n    </span>\r\n   </strong>\r\n  </a>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    ）\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"udeba5c2d\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0b14e037\">\r\n  <span class=\"ne-text\">\r\n   第一行，整数数组nums的元素个数。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ub6c27511\">\r\n  <span class=\"ne-text\">\r\n   第二行，整数数组nums，整数之间用空格分隔。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc881a350\">\r\n  <span class=\"ne-text\">\r\n   1 &lt;= nums.length &lt;= 2500，-10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    4\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   &lt;= nums[i] &lt;= 10\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    4\r\n   </span>\r\n  </sup>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0f375c92\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue32f320f\">\r\n  <span class=\"ne-text\">\r\n   最长严格递增子序列的长度。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"BVIhn\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 37px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub5129e9c\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ue2f82da3\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u0cea57e7\">\r\n      <span class=\"ne-text\">\r\n       8\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u88312d24\">\r\n      <span class=\"ne-text\">\r\n       10 9 2 5 3 7 101 18\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uddfcb250\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"uecf2e9f4\">\r\n  <span class=\"ne-text\">\r\n   【题目分析】\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: #DF2A3F\">\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u20f8ff78\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第一步：穷举分析\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5bdd8e5d\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   以样例输入中的数组[10, 9, 2, 5, 3, 7, 101,\r\n            18]为例，进行穷举分析：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u53e3eb72\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums只有一个元素10时，最长严格递增子序列是{10}，长度是1。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1c421c12\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums加入一个元素9时，最长严格递增子序列是{10}或{9}，长度是1。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uac517123\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums再加入一个元素2时，最长严格递增子序列是{10}或{9}或{2}，长度是1。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1936f4cc\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums再加入一个元素5时，最长严格递增子序列是{2,\r\n            5}，长度是2。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6f74c165\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums再加入一个元素3时，最长严格递增子序列是{2, 5}或{2,\r\n            3}，长度是2。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u66b7233e\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums再加入一个元素7时，最长严格递增子序列是{2, 5, 7}或{2,\r\n            3, 7}，长度是3。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2d89dc87\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums再加入一个元素101时，最长严格递增子序列是{2, 5, 7,\r\n            101}或{2, 3, 7, 101}，长度是4。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u0151f581\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   当nums再加入一个元素18时，最长严格递增子序列是{2, 5, 7,\r\n            101}或{2, 3, 7, 101}或{2, 5, 7, 18}或{2, 3, 7, 18}，长度是4。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5aa4937b\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   分析以上过程可得，在以数组每个元素结尾的最长严格递增子序列组成的集合中，元素最多的即为数组的最长严格递增子序列。因此原问题转化成先求出以每个元素结尾的最长严格递增子序列集合，再求最大长度。创建一个整型数组\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    dp\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，用\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    dp[i]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   表示以\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    nums[i]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   结尾的最长严格递增子序列的长度，得到表5.3。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ubbacb82b\" style=\"text-indent: 2em; text-align: center\">\r\n  <span class=\"ne-text\">\r\n   表5.3 nums[i] 和\r\n            dp[i] 的取值\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"CCine\" style=\"width: 750px;text-align:center\" align=\"center\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u6f45551d\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       下标 i\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"uec4af441\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       0\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"uec269dea\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u354dd24d\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"ue6fca119\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u7dc86c51\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u330d7f3c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u2d943d3a\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       6\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"86\">\r\n     <p class=\"ne-p\" id=\"u6627b259\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       7\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u5e013219\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       nums[i]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u7123c9cd\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       10\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u16931e47\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       9\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"ue635fe3f\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u6050f650\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"uf1c02bb7\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"uf6167094\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       7\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"uad51f0cf\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       101\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"86\">\r\n     <p class=\"ne-p\" id=\"u5eb4f9ae\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       18\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u52e601c5\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       dp[i]\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"ue8d1cbdd\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"ubcaac92c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"链接36\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u6fa4fa7d\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"链接18\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       2\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"u91c56faf\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"83\">\r\n     <p class=\"ne-p\" id=\"ud71bbc3e\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"86\">\r\n     <p class=\"ne-p\" id=\"u27bdeff5\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       4\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"udf0872ab\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   事实上，只要在前面找到\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    nums[j]&lt;nums[i]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，以\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    nums[j]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   结尾的严格递增子序列加上\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    nums[i]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   即可得到以\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    nums[i]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   结尾的严格递增子序列。显然，可能形成多种新的子序列，选择最长的子序列，即为以\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    nums[i]\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   结尾的最长严格递增子序列。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u01f51cce\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第二步：确定边界\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u3cb1c1e4\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   对于某个数组，dp[0] = 1，dp[1] = 2或1， 因此边界就是\r\n            dp[0] =1。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ub081aa5a\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第三步：找规律，确定最优子结构\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u19f13249\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   根据穷举分析，发现如下规律：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6b5dec73\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   对于\r\n  </span>\r\n  <span class=\"ne-math\" id=\"TO8lP\">\r\n   <img src=\"../assets/images/f027975f2de3791a604840f12c6665eb.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   并且\r\n  </span>\r\n  <span class=\"ne-math\" id=\"XTAS7\">\r\n   <img src=\"../assets/images/64739660eac42c9283467327709c9699.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   ，有\r\n  </span>\r\n  <span class=\"ne-math\" id=\"EUBFD\">\r\n   <img src=\"../assets/images/6f0ea4852110e17bda5840375cc33f90.svg\"/>\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue59be560\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-math\" id=\"HX6WB\">\r\n   <img src=\"../assets/images/f212db0d8037d680672b6dcf97bbcccd.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   就是最优子结构。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ucd18944c\">\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    第四步：写出状态转移方程\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u04aba16a\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   通过前面三个步骤，得到状态转移方程如下：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8a69bc4a\" style=\"text-align: center\">\r\n  <span class=\"ne-math\" id=\"po02K\">\r\n   <img src=\"../assets/images/7ebb873bdac3d4b6b21b7846c426e04d.svg\"/>\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u69cea09f\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   因此数组nums的最长严格递增子序列的长度为max(dp[i])。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"RWsDJ\"><span\r\nstyle=\"font-weight:bold;\">代码5.23</span> 动态规划求最长递增子序列的长度\r\n<code># include&lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint lengthOfLIS(int array[], int length){\r\n        if(length == 0) return 0;\r\n        int dp[length];\r\n        int ans = 1;\r\n        for(int i = 0; i &lt; length; ++i){\r\n            dp[i] = 1;\r\n            for(int j = 0; j &lt; i; ++j) \r\n                if(array[j] &lt; array[i]) \r\n                    dp[i] = max(dp[i], dp[j] + 1);\r\n            ans = max(ans, dp[i]);\r\n        }\r\n        return ans;\r\n}\r\n\r\nint main(){\r\n    int length;\r\n    cin&gt;&gt;length;\r\n    int nums[length];\r\n    for(int i = 0; i &lt; length; ++i)\r\n        cin&gt;&gt;nums[i];\r\n\tcout&lt;&lt;lengthOfLIS(nums, length);\r\n    return 0;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ua96001c8\">\r\n   <span class=\"ne-text\">\r\n    第4行，数组作为函数的参数时，必须同时传递数组地址和数组中元素的数量，否则无法知道数组的有效范围。详细内容见本章1.5小节。\r\n   </span>\r\n  </li>\r\n  <li id=\"u28b5e8a1\">\r\n   <span class=\"ne-text\">\r\n    第11-12行，只有\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     array[i]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    大于\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     array[j]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，才能将\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     array[i]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    放在\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     array[j]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    后面以形成更长的严格递增子序列。\r\n   </span>\r\n  </li>\r\n  <li id=\"u06fd4a0a\">\r\n   <span class=\"ne-text\">\r\n    第12行用于计算\r\n   </span>\r\n   <span class=\"ne-math\" id=\"rhsFW\">\r\n    <img src=\"../assets/images/7f452a3568af766a0838b1c9d8dee2a3.svg\"/>\r\n   </span>\r\n   <span class=\"ne-text\">\r\n    ，从而确定最终的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     dp[i]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，这与\r\n   </span>\r\n   <span class=\"ne-math\" id=\"CnZl6\">\r\n    <img src=\"../assets/images/7124203268a26612b2a44250dfc91d17.svg\"/>\r\n   </span>\r\n   <span class=\"ne-text\">\r\n    是等价的。\r\n   </span>\r\n  </li>\r\n  <li id=\"u4eaed9ed\">\r\n   <span class=\"ne-text\">\r\n    第13行用于计算所有\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     dp[i]\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中的最大值。\r\n   </span>\r\n  </li>\r\n  <li id=\"uc36e49c0\">\r\n   <span class=\"ne-text\">\r\n    分析lengthOfLIS函数可知，该函数先解决子问题再递推到大问题，具体过程为使用多个for循环填写数组，根据已计算的结果，逐步递推出大问题的解决方案。这便是动态规划的解题思路。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"Km6tT\">\r\n  <span class=\"ne-text\">\r\n   知识点：T528\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"iMJcI\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u5680fc5b\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7688ac58\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uabb9314e\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u0af822ff\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u35f0bac4\">\r\n      <span class=\"ne-text\">\r\n       T528\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u7645f82d\">\r\n      <span class=\"ne-text\">\r\n       动态规划将大问题分解为子问题，求解时从子问题递推到大问题\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ub51f8eb2\">\r\n      <a class=\"ne-link\" data-href=\"#pNT2u\" href=\"#pNT2u\">\r\n       <span class=\"ne-text\">\r\n        T513\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u9e21fa1e\">\r\n      <a class=\"ne-link\" data-href=\"#fakFb\" href=\"#fakFb\">\r\n       <span class=\"ne-text\">\r\n        T525\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ud8db5685\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"rxqUf\">\r\n  <span class=\"ne-text\">\r\n   3. 二维数组\r\n  </span>\r\n </h1>\r\n <p class=\"ne-p\" id=\"ubec09511\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); font-size: 14px\">\r\n   C++ 支持多维数组。多维数组声明的一般形式如下：\r\n  </span>\r\n </p>\r\n <details class=\"lake-collapse\">\r\n  <summary id=\"ufb553712\">\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    type name\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    [\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    size1\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ][\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    size2\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ]...[\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    sizeN\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ];\r\n   </span>\r\n  </summary>\r\n </details>\r\n <p class=\"ne-p\" id=\"uf2bc85f4\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   type 可以是任意有效的 C++ 数据类型，arrayName\r\n            是一个有效的 C++ 标识符。\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(51, 51, 51)\">\r\n   例如，下面的声明创建了一个三维 5X10X4\r\n            整型数组：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4153bb41\">\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 136)\">\r\n    int\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    threedim\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    [\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    5\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ][\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    10\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ][\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    4\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ];\r\n   </span>\r\n  </code>\r\n </p>\r\n <p class=\"ne-p\" id=\"u1600e452\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(51, 51, 51)\">\r\n   一个二维数组可以被认为是一个带有 x 行和 y 列的表格。下面是一个二维数组，包含 3 行和 4 列：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u285e514b\" style=\"text-align: center\">\r\n  <img class=\"ne-image\" id=\"M8GwC\" src=\"../assets/images/1658992813726-9373dc7b-e339-4b3f-8985-85e8923a0f8f.jpeg\" width=\"427\"/>\r\n </p>\r\n <p class=\"ne-p\" id=\"u10fe7d60\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.7 二维数组的示意图\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u51b03844\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   多维数组可以通过在括号内为每行指定值来进行初始化。下面是一个带有 3 行 4\r\n            列的数组。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ud873fac2\">\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 136)\">\r\n    int\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    a\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    [\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    3\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ][\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    4\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ]\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    =\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    {\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    {\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    0\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    1\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    2\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    3\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    }\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(136, 0, 0)\">\r\n    /*  初始化索引号为 0 的行 */\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n  </code>\r\n </p>\r\n <p class=\"ne-p\" id=\"u7d5b1997\" style=\"margin-left: 6em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    {\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    4\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    5\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    6\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    7\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    }\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(136, 0, 0)\">\r\n    /*  初始化索引号为 1 的行 */\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n  </code>\r\n </p>\r\n <p class=\"ne-p\" id=\"u67c79983\" style=\"margin-left: 6em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    {\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    8\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    9\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    10\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    11\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    }\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(136, 0, 0)\">\r\n    /*  初始化索引号为 2 的行 */\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    };\r\n   </span>\r\n  </code>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue7d88871\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   内部嵌套的括号是可选的，下面的初始化与上面是等同的：\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u4b6ad1c0\">\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 136)\">\r\n    int\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n    a\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    [\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    3\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ][\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    4\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ]\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    =\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 0, 0)\">\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    {\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    0\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    1\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    2\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    3\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    4\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    5\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    6\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    7\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    8\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    9\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    10\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    ,\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(0, 102, 102)\">\r\n    11\r\n   </span>\r\n   <span class=\"ne-text\" style=\"color: rgb(102, 102, 0)\">\r\n    };\r\n   </span>\r\n  </code>\r\n </p>\r\n <p class=\"ne-p\" id=\"ubce31078\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   多维数组如果被进行初始化，或作为函数参数时，紧挨变量名的第一个维度的长度可以省略，其余的元素数量必须明确定义。否则编译器无法获知每个维度的长度。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6b4b00ff\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   编程时，无论是输入输出还是遍历，多维数组通常是和嵌套循环搭配使用的。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"qaU4R\"><span\r\nstyle=\"font-weight:bold;\">代码5.24</span> 二维数组遍历\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main ()\r\n{\r\n    int a[2][5] = { {3,5,7,6,8}, {1,8,2,5,3}};\r\n    cout&lt;&lt;\"行\\\\列\";\r\n    for ( int j = 0; j &lt; 5; j++ )\r\n        cout&lt;&lt;'\\t'&lt;&lt;j;\r\n    cout&lt;&lt;endl;\r\n    for ( int i = 0; i &lt; 2; i++ ){\r\n        cout&lt;&lt;i;\r\n        for ( int j = 0; j &lt; 5; j++ ){\r\n            cout &lt;&lt;'\\t'&lt;&lt; a[i][j];\r\n        }\r\n        cout&lt;&lt;endl;\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"lB0jP\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ueef96383\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc7c9c639\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub8accd82\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u32adee92\">\r\n      <span class=\"ne-text\">\r\n       行\\列 0 1 2 3 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u0c39d4d2\">\r\n      <span class=\"ne-text\">\r\n       0 3 5 7 6 8\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u14b48965\">\r\n      <span class=\"ne-text\">\r\n       1 1 8 2 5 3\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"uiPXq\">\r\n  <span class=\"ne-text\">\r\n   例题5.12\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ub4c4ed69\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   旋转是图像处理的基本操作，在这个问题中，你需要将一个图像逆时针旋转90\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   。计算机中的图像可以用一个矩阵来表示。为了旋转一个图像，只需要旋转对应的矩阵即可。\r\n  </span>\r\n  <strong>\r\n   <span class=\"ne-text\">\r\n    （CSP2015年3月真题）\r\n   </span>\r\n  </strong>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2a9c27cb\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6a4550a1\">\r\n  <span class=\"ne-text\">\r\n   输入的第一行包含两个整数 n、m,分别表示图像矩阵的行数和列数。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2614b15e\">\r\n  <span class=\"ne-text\">\r\n   接下来n行，每行包含m个整数，表示输入的图像。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2b201bd7\">\r\n  <span class=\"ne-text\">\r\n   1≤n,m≤1000， 矩阵中的数都是不超过1000的非负整数。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"链接8d\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uef65a8ce\">\r\n  <span class=\"ne-text\">\r\n   输出m行，每行包含n个整数，表示原始矩阵逆时针旋转90° 后的矩阵。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"KXcFh\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ubaec865d\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1b5c4907\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uac2722f4\">\r\n      <span class=\"ne-text\">\r\n       2 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub28eb368\">\r\n      <span class=\"ne-text\">\r\n       1 5 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ubf3ade96\">\r\n      <span class=\"ne-text\">\r\n       3 2 4\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua127b29b\">\r\n      <span class=\"ne-text\">\r\n       3 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u4c1a9eb9\">\r\n      <span class=\"ne-text\">\r\n       5 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"链接fe\">\r\n      <span class=\"ne-text\">\r\n       1 3\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"Utgvz\"><span\r\nstyle=\"font-weight:bold;\">代码5.25</span> 旋转矩阵\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\nint a[1005][1005];\r\nint main ()\r\n{\r\n    int n,m;\r\n    cin&gt;&gt;n&gt;&gt;m;\r\n    for ( int i = 0; i &lt; n; i++ ){\r\n        for ( int j = 0; j &lt; m; j++ ){\r\n            cin&gt;&gt;a[i][j];\r\n        }\r\n    }\r\n    for ( int j = m-1; j &gt;=0; j-- ){\r\n        for ( int i = 0; i &lt; n; i++ ){\r\n            cout&lt;&lt;a[i][j]&lt;&lt;' ';\r\n        }\r\n        cout&lt;&lt;endl;\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <p class=\"ne-p\" id=\"ufab44283\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   在二维数组中，最重要的是对角线、上三角和下三角的概念。对角线上行列坐标相等，上三角中的行坐标小于列坐标，下三角中列坐标小于行坐标。\r\n  </span>\r\n </p>\r\n <div style=\"display: flex;\r\n        justify-content: center;\r\n        align-items: center;\">\r\n <img id=\"WyisE\" src=\"../assets/images/1672278331640-e88682f1-c4d1-407c-8494-2f6ef7177fc2.jpeg\" style=\"display: block; width: 30%\"/>\r\n\r\n</div>\r\n <p class=\"ne-p\" id=\"ub096f195\" style=\"text-align: center\">\r\n  <span class=\"ne-text\">\r\n   图5.8 二维数组的主对角线和上三角、下三角\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"aN3VP\"><span\r\nstyle=\"font-weight:bold;\">代码5.26</span> 对角线图案\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main ()\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    int a[n][n];\r\n    for ( int i = 0; i &lt; n; i++ ){\r\n        for ( int j = 0; j &lt; n; j++ ){\r\n            a[i][j]=abs(i-j);\r\n            cout&lt;&lt;a[i][j]&lt;&lt;' ';\r\n        }\r\n        cout&lt;&lt;endl;\r\n    }\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"Ralfh\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u04cda78a\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u03261e32\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u2177d376\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uf39f0907\">\r\n      <span class=\"ne-text\">\r\n       0 1 2 3 4\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub32124db\">\r\n      <span class=\"ne-text\">\r\n       1 0 1 2 3\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ud3198c2e\">\r\n      <span class=\"ne-text\">\r\n       2 1 0 1 2\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u62ab26cd\">\r\n      <span class=\"ne-text\">\r\n       3 2 1 0 1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u78d4ff60\">\r\n      <span class=\"ne-text\">\r\n       4 3 2 1 0\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"D8kyt\">\r\n  <span class=\"ne-text\">\r\n   知识点：T531\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"j8JCx\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u5085b907\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ufd179469\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u16ecd914\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u69dd8e6c\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u2beb1e10\">\r\n      <span class=\"ne-text\">\r\n       T531\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uc4085f83\">\r\n      <span class=\"ne-text\">\r\n       掌握二维数组的基本使用方法，掌握主对角线、上三角、下三角的概念\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"ue6d00adb\">\r\n      <a class=\"ne-link\" data-href=\"#sDNu2\" href=\"#sDNu2\">\r\n       <span class=\"ne-text\">\r\n        T511\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"链接22\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/qvzagc#WC0X9\" href=\"ch6#WC0X9\">\r\n       <span class=\"ne-text\">\r\n        T623\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"JEgY6\">\r\n  <span class=\"ne-text\">\r\n   4. C++的字符串\r\n  </span>\r\n </h1>\r\n <h2 id=\"gItBo\">\r\n  <span class=\"ne-text\">\r\n   4.1 字符串的基本操作\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ude345260\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   字符串是常见的基本类型，在C++中提供了string类型进行字符串处理。可以将字符串理解成一个数组，其中每个元素都是一个字符，可以按照数组的形式进行访问。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"jHFGi\"><span\r\nstyle=\"font-weight:bold;\">代码5.27</span> 以数组的形式访问字符串\r\n<code>#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\nusing namespace std;\r\nint main(){\r\n    string s = \"1234567890\";\r\n    for(int i=0,len=s.length(); i&lt;len; i++){//采用数组形式进行遍历\r\n        cout&lt;&lt;s[i]&lt;&lt;\" \";\r\n    }\r\n    cout&lt;&lt;endl;\r\n    s[5] = 'a';\t\t\t//修改字符串中某个字符\r\n    cout&lt;&lt;s&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"YliaL\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u6d4e95c2\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u705cceb8\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u8acd97ad\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u31b98cee\">\r\n      <span class=\"ne-text\">\r\n       1 2 3 4 5 6 7 8 9 0\r\n       <br/>\r\n      </span>\r\n      <span class=\"ne-text\">\r\n       12345a7890\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <p class=\"ne-p\" id=\"u95fefb43\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   字符串在C语言中是用'\\0'结尾的字符数组进行表达的，但是操作和理解上都比较复杂，按照数组的基本规定，不能进行整体赋值，不能进行整体比较。因此在在C++中将字符数组封装成了一个类string，通过成员函数和操作符重载等一系列面向对象的处理，string类在处理上变得非常简单。例如当需要将两个字符串进行拼接时，只需要用\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    +\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   进行完成。此外string还提供了增删改查等基本操作：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"eaCxb\"><span\r\nstyle=\"font-weight:bold;\">代码5.28</span> string类提供的基本操作\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main(){\r\n    cout&lt;&lt;\"字符串拼接：\"&lt;&lt;endl;\r\n    string s1 = \"first \";\r\n    string s2 = \"second \";\r\n    cout&lt;&lt;s1+s2&lt;&lt;endl&lt;&lt;s1+\"third\"&lt;&lt;endl;\r\n    cout&lt;&lt;\"插入子字符串：\"&lt;&lt;endl;\r\n    s1.insert(3,\"aaa\");\r\n    cout&lt;&lt;s1&lt;&lt;endl;\r\n    cout&lt;&lt;\"删除子字符串：\"&lt;&lt;endl;\r\n    s1.erase(3);\r\n    s2.erase(3,2);\r\n    cout&lt;&lt;s1&lt;&lt;endl&lt;&lt;s2&lt;&lt;endl;\r\n    cout&lt;&lt;\"抽取子字符串：\"&lt;&lt;endl;\r\n    s1 = \"first third second\";\r\n    s2 = s1.substr(6, 5);\r\n    cout&lt;&lt;s2&lt;&lt;endl;\r\n    cout&lt;&lt;\"字符串查找：\"&lt;&lt;endl;\r\n    s1 = \"first second third second\";\r\n    s2 = \"second\";\r\n    size_t index = s1.find(s2,7);\r\n    if(index &lt; s1.length())\r\n        cout&lt;&lt;\"Found at index : \"&lt;&lt; index &lt;&lt;endl;\r\n    else\r\n        cout&lt;&lt;\"Not found\"&lt;&lt;endl;\r\n    index = s1.rfind(s2,7);\r\n    if(index &lt; s1.length())\r\n        cout&lt;&lt;\"Found at index : \"&lt;&lt; index &lt;&lt;endl;\r\n    else\r\n        cout&lt;&lt;\"Not found\"&lt;&lt;endl;\r\n    cout&lt;&lt;\"查找子字符串任意字符在字符串中首次出现的位置：\"&lt;&lt;endl;\r\n    index = s1.find_first_of(s2);\r\n    if(index &lt; s1.length())\r\n        cout&lt;&lt;\"Found at index : \"&lt;&lt; index &lt;&lt;endl;\r\n    else\r\n        cout&lt;&lt;\"Not found\"&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"h46DV\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u825d0821\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4e997850\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接61\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ucc226c1a\">\r\n      <span class=\"ne-text\">\r\n       字符串拼接：\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"链接36\">\r\n      <span class=\"ne-text\">\r\n       first second\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u25c2e7fb\">\r\n      <span class=\"ne-text\">\r\n       first third\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u60325d9c\">\r\n      <span class=\"ne-text\">\r\n       插入子字符串：\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u8de432ca\">\r\n      <span class=\"ne-text\">\r\n       firaaast\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue472f3bd\">\r\n      <span class=\"ne-text\">\r\n       删除子字符串：\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uf955d9b4\">\r\n      <span class=\"ne-text\">\r\n       fir\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"链接af\">\r\n      <span class=\"ne-text\">\r\n       secd\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u70f6851f\">\r\n      <span class=\"ne-text\">\r\n       抽取子字符串：\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue3267cc6\">\r\n      <span class=\"ne-text\">\r\n       third\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua62c9ecb\">\r\n      <span class=\"ne-text\">\r\n       字符串查找：\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u9d2fb2c5\">\r\n      <span class=\"ne-text\">\r\n       Found at index : 19\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u6bc0543e\">\r\n      <span class=\"ne-text\">\r\n       Found at index : 6\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2e4bf8a7\">\r\n      <span class=\"ne-text\">\r\n       查找子字符串任意字符在字符串中首次出现的位置：\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u945d951c\">\r\n      <span class=\"ne-text\">\r\n       Found at index : 3\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ubaf6ee95\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     insert()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数可以在\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     string\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    字符串中指定的位置插入另一个字符串，第一个参数表示要插入的位置，也就是下标；第二个参数表示要插入的字符串。第10行在下标为3的位置插入了一个子串\"aaa\"。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2714a4f3\">\r\n   <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(238, 238, 238); font-size: 14px\">\r\n    erase()\r\n   </span>\r\n   <span class=\"ne-text\">\r\n    函数可以删除\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     string\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中的一个子字符串。第一个参数表示要删除子字符串的起始下标，第二个参数表示要删除子字符串的长度。如果没有第二个参数，那么直接删除到字符串结束处的所有字符。\r\n   </span>\r\n  </li>\r\n  <li id=\"u811f72d7\">\r\n   <span class=\"ne-text\" style=\"color: rgb(51, 51, 51); background-color: rgb(238, 238, 238); font-size: 14px\">\r\n    substr()\r\n   </span>\r\n   <span class=\"ne-text\">\r\n    函数用于从\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     string\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    字符串中提取子字符串。第一个参数为要提取的子字符串的起始下标，第二个参数为要提取的子字符串的长度。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2a53ad25\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     find()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数用于在\r\n                string字符串中查找子字符串出现的位置。第一个参数为待查找的子字符串，第二个参数为开始查找的位置（下标）；如果不指明，则从第0个字符开始查找。最终返回的是子字符串第一次出现在字符串中的起始下标。如果没有查找到子字符串，那么会返回一个无穷大值。第23行的查找从下标7开始，因此找到的是第二个second出现的位置19。\r\n   </span>\r\n  </li>\r\n  <li id=\"u02e08b73\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     rfind()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数与\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     find()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    类似，但是它最多查找到第二个参数处，如果到了第二个参数所指定的下标还没有找到子字符串，则返回一个无穷大值。\r\n   </span>\r\n  </li>\r\n  <li id=\"u2926ca9f\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     find_first_of()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数不把子串作为一个整体，而是查找子串中任意字符在字符串中第一次出现的位置。第34行进行查找时，'s'出现在second中，并且它在s1中的下标为3，因此返回结果为3，并不是second的6。\r\n   </span>\r\n  </li>\r\n  <li id=\"链接43\">\r\n   <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n    在string的众多函数中，涉及位置、长度信息时，使用的数据类型都是\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n     size_t\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n    ，在64位系统中\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n     size_t\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n    定义为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n     long long unsigned int\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n    ，在32位系统中定义为\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n     unsigned int\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"color: rgb(77, 77, 77); font-size: 16px\">\r\n    ，也就是一个无符号的整型。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"eRcMx\">\r\n  <span class=\"ne-text\">\r\n   知识点：T541\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"oCLEW\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"链接0c\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"461\">\r\n     <p class=\"ne-p\" id=\"u44a295c4\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"uc93f9fc6\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"105\">\r\n     <p class=\"ne-p\" id=\"udd375b4b\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"udb43b1e7\">\r\n      <span class=\"ne-text\">\r\n       T541\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"461\">\r\n     <p class=\"ne-p\" id=\"ue50bb5f1\">\r\n      <span class=\"ne-text\">\r\n       掌握string字符串增删改查的基本操作和对应的函数\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"94\">\r\n     <p class=\"ne-p\" id=\"u29d1a12b\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/afrstd#LBVF5\" href=\"ch2#LBVF5\">\r\n       <span class=\"ne-text\">\r\n        T243\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#sDNu2\" href=\"#sDNu2\">\r\n       <span class=\"ne-text\">\r\n        T511\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"105\">\r\n     <p class=\"ne-p\" id=\"链接aa\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#ucMFa\" href=\"ch8#ucMFa\">\r\n       <span class=\"ne-text\">\r\n        T832\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#kYcFw\" href=\"ch8#kYcFw\">\r\n       <span class=\"ne-text\">\r\n        T842\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"660\">\r\n     <p class=\"ne-p\" id=\"uf034c48d\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX513)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX514)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"AUfOt\">\r\n  <span class=\"ne-text\">\r\n   4.2 字符串的容量和长度*\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"uc310ba21\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"font-size: 16px\">\r\n   字符串的长度和存储容量是两个概念，二者并不一致。长度指字符串中实际有效的字符数量，而存储容量是指对该字符串分配的存储空间大小。长度可以用size()或length()函数获取，两个函数是完全等价的；存储容量用capacity()获取。长度和容量为什么会不相等呢？因为字符串本质上是一个字符构成的数组，数组中所有元素在内存中必须连续分配。当字符串长度发生变化，已有空间不能满足需求时，就需要重新分配空间，而为了保证空间的连续性，只能进行全部存储空间的重新分配。字符串作为常用数据类型，其基本操作增删改都会涉及到长度变化，如果每次都全部重新分配内存空间，运行效率将会变得非常低。因此通常字符串的容量都要大于有效字符的长度，这样当字符串长度进行小范围变化时，不需要重新分配空间。而当出现空间不足的情况时，重新分配的新空间还是会有一定的冗余度。至于新空间具体是多少，是由操作系统提供的策略进行保障的，用户不需要过多了解。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"vFA73\"><span\r\nstyle=\"font-weight:bold;\">代码5.29</span> 字符串的容量和长度\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main(){\r\n    string s;\r\n    cout&lt;&lt;s.empty()&lt;&lt;endl;\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    s=\"abcdefghijklmnopqrstuvwxyz\";\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    s=\"abcdefghijklmnopqrstuvwxyzabcdefg\";\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    s.resize(20);\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    s.resize(70);\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    s.reserve(80);\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    s.reserve(50);//或s.reserve()\r\n    cout&lt;&lt;s.size()&lt;&lt;'\\t'&lt;&lt;s.capacity()&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"v67O8\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"udf465b03\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9be33970\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ua46e4da5\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc6fccaf1\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u59f65a8b\">\r\n      <span class=\"ne-text\">\r\n       0 15\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uf2d70a4d\">\r\n      <span class=\"ne-text\">\r\n       26 30\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uce58d709\">\r\n      <span class=\"ne-text\">\r\n       33 60\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub9e82173\">\r\n      <span class=\"ne-text\">\r\n       20 60\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua77f0941\">\r\n      <span class=\"ne-text\">\r\n       70 120\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue772ac33\">\r\n      <span class=\"ne-text\">\r\n       70 80\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"udef5bd7e\">\r\n      <span class=\"ne-text\">\r\n       70 70\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ufd4cde6d\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    实际输出结果与执行环境有关，可能会有所差异，但是原理上相同。\r\n   </span>\r\n  </li>\r\n  <li id=\"u99ef2917\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    可以通过\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     resize()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    函数调整字符串的长度(size)，通过\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     reserve()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    函数调整字符串的容量(capacity)。size调整时会导致capacity跟随发生变化，但是capacity调整时，size不会发生变化。\r\n   </span>\r\n  </li>\r\n  <li id=\"u4e88e11b\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     empty\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    可以判断一个字符串是否为空，其效率比\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     size()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    函数要高。\r\n   </span>\r\n  </li>\r\n  <li id=\"u8689a38f\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    第7行看到空字符的size为0，但是其容量并非为0，也就是说，当字符数量小于15时，不需要为该字符串重新分配空间。\r\n   </span>\r\n  </li>\r\n  <li id=\"ue7c2cf7b\">\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    第8行因为新字符串长度超过15，size变为实际长度26，但是capacity=30&gt;26，第10行再次打破capacity的限制变成33后，capacity被调整为60。第12行通过\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\" style=\"font-size: 16px\">\r\n     resize\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\" style=\"font-size: 16px\">\r\n    函数将size变小后，capacity不会发生变化，但第14行将size变大后超过了当前的capacity，capacity被再次扩容。可以确定，capacity会一直大于等于size，但具体的值是根据操作系统的策略进行动态调整的。\r\n   </span>\r\n  </li>\r\n  <li id=\"ua1725432\">\r\n   <span class=\"ne-text\">\r\n    string可以调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     reserve()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    缩减实际容量。但用一个“小于现有容量”的参数调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     reserve()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，是一种非强制性请求。也就是说可能想要缩减容量至某个目标，但不保证一定达成。string的\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     reserve()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    参数默认值为0，所以调用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     reserve()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    并且不给参数，就是一种“非强制性适度缩减请求”。第18行缩放目标小于size的值，但新的capacity变为70，并没有按照目标指示变成50或0。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"MuqMr\">\r\n  <span class=\"ne-text\">\r\n   例题5.13\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u99810e85\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   完成函数string str_remove(string s, char\r\n            ch)，从s中删除指定的字符ch，并将剩余字符串作为返回值。\r\n  </span>\r\n </p>\r\n <table border=1 class=\"ne-table\" id=\"evXWR\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ub59cfe6a\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u909b8f93\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u2a488e3b\">\r\n      <span class=\"ne-text\">\r\n       s=\"abbce\", ch='b'\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5d3dd7fa\">\r\n      <span class=\"ne-text\">\r\n       ace\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"s01yL\"><span\r\nstyle=\"font-weight:bold;\">代码5.30</span> 删除指定字符\r\n<code>string str_remove(string s, char ch)\r\n{\r\n    size_t j=0;\r\n    for(size_t i=0; i&lt;s.size(); i++)\r\n        if(s[i]!=ch)\r\n            s[j++]=s[i];\r\n    s.resize(j);\r\n    return s; \r\n}</code></pre>\r\n <p class=\"ne-p\" id=\"ub287144e\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   string在本质上是由字符组成的数组。不能做物理删除，只能形成逻辑删除。比较自然的思路是，每次遇到指定字符时，都进行前移操作，形成逻辑上的删除效果。但这种方法需要嵌套循环，算法复杂度为O(n\r\n  </span>\r\n  <sup>\r\n   <span class=\"ne-text\">\r\n    2\r\n   </span>\r\n  </sup>\r\n  <span class=\"ne-text\">\r\n   )。代码5.30中，借助了复制形成新字符串的想法，将留存的字符形成新的字符串。因为删除后的字符串长度一定小于或等于原字符串，即\r\n  </span>\r\n  <code class=\"ne-code\">\r\n   <span class=\"ne-text\">\r\n    i&gt;=j\r\n   </span>\r\n  </code>\r\n  <span class=\"ne-text\">\r\n   ，因此可以在原字符串的空间上完成复制操作。j只有在找到符合要求的字符后，才执行加1操作。这种想法将算法复杂度降为O(n)，并且不需要开辟新的空间。\r\n  </span>\r\n </p>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u52c4cdbe\">\r\n   <span class=\"ne-text\">\r\n    第3-4行中\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     i\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    和\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     j\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的数据类型定义为size_t，无论是size()还是length()返回的数据类型都是size_t，保证数据类型的兼容性。size_t依赖于编译器，在32位编译器下等同于unsigned\r\n                int，在64位编译器下等同于unsigned long long，其值永远非负。\r\n   </span>\r\n  </li>\r\n  <li id=\"u69755ee1\">\r\n   <span class=\"ne-text\">\r\n    第7行中用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     resize()\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    重新调整了s的长度，否则删除处理后s的长度保持不变。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"zTfai\">\r\n  <span class=\"ne-text\">\r\n   知识点：T542\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"XqduF\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"uc1cdf6cf\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u61e65e71\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u6f07bdca\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u6b55ad32\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"链接5f\">\r\n      <span class=\"ne-text\">\r\n       T542\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ud9c7fc21\">\r\n      <span class=\"ne-text\">\r\n       明确区分字符串的物理空间和逻辑上的有效空间，新建立的字符串一定要重新resize，否则逻辑空间长度不正确\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u78637a5d\">\r\n      <a class=\"ne-link\" data-href=\"#pNT2u\" href=\"#pNT2u\">\r\n       <span class=\"ne-text\">\r\n        T513\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ucea8028d\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/zzw6o7#BPKTU\" href=\"ch8#BPKTU\">\r\n       <span class=\"ne-text\">\r\n        T825\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"Vfxnc\">\r\n  <span class=\"ne-text\">\r\n   4.3 字符串与整型的相互转换\r\n  </span>\r\n </h2>\r\n <h3 id=\"Stkta\">\r\n  <span class=\"ne-text\">\r\n   4.3.1 字符串转数值\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u5923d9d8\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   cin可以从标准输入流中读取整型或其他类型的数据，因此可以将字符串首先转换为流数据，然后从流中读取相应类型的数据，这就是转换的第一种方法；此外，C语言的库函数中存在字符串转换其他标准数据类型的函数，例如：字符串转整型atoi，字符串转浮点数atof等，但C语言中不存在string类型，需要先调用string的c_str()函数将string转换为C风格字符串，才能得到正确的结果。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"ER6fd\"><span\r\nstyle=\"font-weight:bold;\">代码5.31</span> 字符串转数值\r\n<code>#include&lt;iostream&gt;\r\n#include&lt;cstdlib&gt;      //atoi,atof\r\n#include&lt;sstream&gt;       //istringstream\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    string a=\"1234\";\r\n    //使用字符串流将字符串转换为整型\r\n    istringstream is(a); //构造输入字符串流，流的内容初始化为“12”的字符串\r\n    int i;\r\n    is &gt;&gt; i; //从is流中读入一个int整数存入i中\r\n    cout&lt;&lt;i+1&lt;&lt;endl;  //i已经是整型，可以进行数学运算\r\n    //atoi和atof的使用方式\r\n    cout&lt;&lt;atoi(a.c_str())-1&lt;&lt;endl;     //注意一定要使用c_str函数将string转换为C风格字符串\r\n    cout&lt;&lt;atof(\"1212.34\")+1&lt;&lt;endl;     //双引号构成的字符串是C风格字符串\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"Uelpq\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u8c832ce9\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1e9f8a6b\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uba51633b\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4ea75a3f\">\r\n      <span class=\"ne-text\">\r\n       1235\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u0af9fec1\">\r\n      <span class=\"ne-text\">\r\n       1233\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue2d0c03c\">\r\n      <span class=\"ne-text\">\r\n       1213.34\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ua1c1e480\">\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     atoi\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    和\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     atof\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    是C语言函数，只支持C语言风格字符串，即以\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     \\0\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    结尾的字符数组。如果用到\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     string\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    类型，必须通过\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     c_str\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    函数转换为C风格字符串。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"AhO5J\">\r\n  <span class=\"ne-text\">\r\n   知识点：T543-T544\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"kKhdp\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ubcaad7e8\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"uad510df1\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u84b54ee1\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u58e4bad2\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u30993e50\">\r\n      <span class=\"ne-text\">\r\n       T543\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u2aeb5c91\">\r\n      <span class=\"ne-text\">\r\n       掌握字符串转数值的常用方法。istringstream虽然使用上比较繁琐，但是好用\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"uc0b89462\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FpCPw\" href=\"ch4#FpCPw\">\r\n       <span class=\"ne-text\">\r\n        T484\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u519f65b0\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u590b48d5\">\r\n      <span class=\"ne-text\">\r\n       T544\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ue2ff300e\">\r\n      <span class=\"ne-text\">\r\n       了解string与C风格字符串不同，以及通过\r\n      </span>\r\n      <code class=\"ne-code\">\r\n       <span class=\"ne-text\">\r\n        c_str\r\n       </span>\r\n      </code>\r\n      <span class=\"ne-text\">\r\n       完成转换\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"JeULu\">\r\n  <span class=\"ne-text\">\r\n   4.3.2 数值转字符串\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u4ebfe2da\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   C++中的std提供了标准的函数to_string()可以将基础数据类型转换为字符串，不需要任何头文件。函数to_string()可以满足绝大多数情况下的转换需求，但是如果有精度和宽度限制，或其他特殊需求时，处理比较繁琐。这时可以使用sprintf函数将需要的内容转换为C风格字符串，然后再将C风格字符串转换为string类型。sprintf函数与函数printf的使用方法几乎完全类似，只是printf将结果打印到标准输出中，而sprintf将结果打印到一个C风格的字符串中。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"H9HcS\"><span\r\nstyle=\"font-weight:bold;\">代码5.32</span> 数值转字符串\r\n<code>#include&lt;iostream&gt;\r\n#include&lt;sstream&gt;\t\t//ostringstream的头文件\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    //to_string方式\r\n    cout&lt;&lt;to_string(1234)&lt;&lt;endl;\r\n    cout&lt;&lt;to_string(1234.56)&lt;&lt;endl;\r\n    //sprintf方式转换为C风格字符串\r\n    char str[1000];\t\t//C风格的字符数组用来存储C风格的字符串\r\n    sprintf(str,\"%.2f\",1.2345);\r\n    //C风格字符串转换为string类型\r\n    string s=str;\t\t//初始化\r\n    string s1(str);\t\t//构造函数\r\n    string s2 {str};\t//初始化\r\n    cout&lt;&lt;s&lt;&lt;endl;\r\n    cout&lt;&lt;s1&lt;&lt;endl;\r\n    cout&lt;&lt;s2&lt;&lt;endl;\r\n    ostringstream oss;\r\n    oss&lt;&lt;3.14;\r\n    oss&lt;&lt;\" \";\r\n    oss&lt;&lt;55555555;\r\n    cout&lt;&lt;oss.str();\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"k34j7\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接44\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5ef407bd\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u82c7b1b9\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1529fbca\">\r\n      <span class=\"ne-text\">\r\n       1234\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ubbe18caa\">\r\n      <span class=\"ne-text\">\r\n       1234.560000\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u74cb39d1\">\r\n      <span class=\"ne-text\">\r\n       1.23\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u81f79acc\">\r\n      <span class=\"ne-text\">\r\n       1.23\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u7ead3c76\">\r\n      <span class=\"ne-text\">\r\n       1.23\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue1d78aa1\">\r\n      <span class=\"ne-text\">\r\n       3.14 55555555\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h3 id=\"ADJJr\">\r\n  <span class=\"ne-text\">\r\n   知识点：T545\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"FndsP\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ufb180b32\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"ua18200e5\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u77e0b94f\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ub053fbcd\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ua9c80eb7\">\r\n      <span class=\"ne-text\">\r\n       T545\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"559\">\r\n     <p class=\"ne-p\" id=\"u8550f575\">\r\n      <span class=\"ne-text\">\r\n       掌握数值转字符串的基本方法，最重要的方法是\r\n      </span>\r\n      <code class=\"ne-code\">\r\n       <span class=\"ne-text\">\r\n        to_string\r\n       </span>\r\n      </code>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"udbeed6ae\">\r\n      <span class=\"ne-text\">\r\n       ostringstream是C++中拼接字符串的重要方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"70\">\r\n     <p class=\"ne-p\" id=\"u67ab53a5\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ubc255612\">\r\n      <a class=\"ne-link\" data-href=\"#CUEPT\" href=\"#CUEPT\">\r\n       <span class=\"ne-text\">\r\n        T546\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"ROwVJ\">\r\n  <span class=\"ne-text\">\r\n   4.4 字符串分割\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ue26beeb1\">\r\n  <span class=\"ne-text\">\r\n   字符串分割是常见操作，在Python，Java等语言中，可以通过简单的调用split完成分割，但是C/C++中不存在这样的函数。C语言中可以采用“循环+strtok”的方式完成分割，但代码比较繁琐。本节提供两种基于字符串数据流的方法，简单有效地完成分割操作。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"XFh3o\"><span\r\nstyle=\"font-weight:bold;\">代码5.33</span> 字符串分割\r\n<code>#include &lt;iostream&gt;\r\n#include &lt;sstream&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n    string str = \"good good study day day up\";\r\n    istringstream in(str);\t\t\t\t\t\t//将字符串转换为数据流\r\n// 方法1：借助数据流以空白符分割的特性，形成字符串的分割\r\n    string s;\r\n    while (in &gt;&gt; s){\r\n        cout&lt;&lt;s&lt;&lt;' ';\r\n    }\r\n    cout&lt;&lt;endl;\r\n\r\n    str = \"good,good,study,day,day,up\";\r\n    istringstream in2(str);\t\t\t\t\t\t//将字符串转换为数据流\r\n// 方法2：利用自定义分割符的getline函数，达到采用任意字符分割的效果\r\n    while (getline(in2, s, ',')){  \t//这里单引号要注意，第3个参数可以是任意字符\r\n        cout&lt;&lt;s&lt;&lt;' ';\r\n    }\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"G9Zvy\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接3d\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ue8c28edd\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u2d1063c7\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u079dbb94\">\r\n      <span class=\"ne-text\">\r\n       good good study day day up\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u871dd33f\">\r\n      <span class=\"ne-text\">\r\n       good good study day day up\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"链接90\">\r\n   <span class=\"ne-text\">\r\n    如果分割符为空白符，采用方法1更加简单；如果分割符为任意字符，只能采用方法2。\r\n   </span>\r\n  </li>\r\n  <li id=\"u60711e1f\">\r\n   <span class=\"ne-text\">\r\n    采用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     ostringstream\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    对字符串进行拼接，采用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     istringstream\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    对字符串进行分割。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"CUEPT\">\r\n  <span class=\"ne-text\">\r\n   知识点：T546\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"uP0mE\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ube9fef26\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u23b655ea\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"132\">\r\n     <p class=\"ne-p\" id=\"ua45d6998\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ucf0a1e39\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 37px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"uc48f8683\">\r\n      <span class=\"ne-text\">\r\n       T546\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"链接f8\">\r\n      <span class=\"ne-text\">\r\n       掌握用数据流对字符串进行分割的方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"132\">\r\n     <p class=\"ne-p\" id=\"u81eeb202\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/afrstd#ri2d9\" href=\"ch2#ri2d9\">\r\n       <span class=\"ne-text\">\r\n        T271\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/khnvy8#FpCPw\" href=\"ch4#FpCPw\">\r\n       <span class=\"ne-text\">\r\n        T484\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#ADJJr\" href=\"#ADJJr\">\r\n       <span class=\"ne-text\">\r\n        T545\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"uf94e1411\">\r\n      <a class=\"ne-link\" data-href=\"#K2mZX\" href=\"#K2mZX\">\r\n       <span class=\"ne-text\">\r\n        T547\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"684\">\r\n     <p class=\"ne-p\" id=\"ua347047d\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX514)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX515)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"o43D1\">\r\n  <span class=\"ne-text\">\r\n   4.5 子串问题\r\n  </span>\r\n </h2>\r\n <h3 id=\"nES6r\">\r\n  <span class=\"ne-text\">\r\n   例题5.14\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u66d2ea1d\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   昕哥有一串很长的英文字母，可能包含大写和小写。在这串字母中，有很多连续的是重复的。昕哥想了一个办法将这串字母表达得更短：将连续的几个相同字母写成字母+出现次数的形式。例如，连续的5个a，即\r\n            aaaaa，简写成 a5。对于这个例子：aaaaaCCeeelHH，昕哥可以简写成 a5C2e3lH2。为了方便表达，昕哥不会将连续的超过9个相同的字符写成简写的形式。请帮助昕哥完成简写。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua621594f\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6a9ffb01\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输入一行为一个由大写字母和小写字符构成的字符串，长度不超过100000。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u2f3e916d\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ua54693d8\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输出为一行字符串，表示简写后的字符串。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"iJmhe\"><span\r\nstyle=\"font-weight:bold;\">代码5.34</span> 子串问题\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\nvoid print(const string&amp; s){\r\n    if(s.size()==1||s.size()&gt;9)\r\n        cout&lt;&lt;s;\r\n    else\r\n        cout&lt;&lt;s[0]&lt;&lt;s.size();\r\n}\r\nint main() {\r\n\tstring a;\r\n\tcin&gt;&gt;a;\r\n\tsize_t left=0;\r\n    a += '$';\r\n\tfor(size_t j=1;j&lt;a.size();j++){\r\n        if(a[j]^a[left]){\t\t\t\t\t//或写成if(a[j]!=a[left])\r\n            print(a.substr(left,j-left));\r\n            left = j;\r\n        }\r\n    }\r\n\treturn 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"KNf10\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接92\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接39\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uc894fc48\">\r\n      <span class=\"ne-text\">\r\n       aaaaaCCeeelHH\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u39bece20\">\r\n      <span class=\"ne-text\">\r\n       a5C2e3lH2\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u643ad9e5\">\r\n   <span class=\"ne-text\">\r\n    对于每个子串的缩写，是一个相对比较独立的过程。以上代码中将其独立成一个函数\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     print\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，这样能有效降低程序的复杂度，强烈建议使用。\r\n   </span>\r\n  </li>\r\n  <li id=\"u8defc159\">\r\n   <span class=\"ne-text\">\r\n    用变量\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     left\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    记录每个子串的起点，然后用\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     substr\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    截取每个子串，分别送到\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     print\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中去进行缩写。这是子串拆分的经典方法。其本质上就是采用尺取法的同向扫描，利用快慢指针形成字符完全相同的“移动窗口”，然后对移动窗口做出相应的简写处理。尺取法是处理子串分隔的一种基本方法。\r\n   </span>\r\n  </li>\r\n  <li id=\"uff3ac3f5\">\r\n   <span class=\"ne-text\">\r\n    第15行用异或操作判断两个元素不相等，它与直接书写不等于是等价的。\r\n   </span>\r\n  </li>\r\n  <li id=\"ucfbefef7\">\r\n   <span class=\"ne-text\">\r\n    特别注意第13行的操作。因为循环是对有效部分进行操作，当第14行循环结束时，最后一个子串并未得到相应的处理。因此在第13行中插入一个原有字符串中不可能出现的字符，保证原字符串中的最后一个子串被处理，又对题目要求的结果没有任何影响。这种方法也称为\r\n   </span>\r\n   <strong>\r\n    <span class=\"ne-text\">\r\n     边界填充法\r\n    </span>\r\n   </strong>\r\n   <span class=\"ne-text\">\r\n    。这是一个非常便捷的技巧。如果没有这行处理，必须在循环结束时对最后一个子串进行处理。这也是一个非常容易产生错误的地方。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"K2mZX\">\r\n  <span class=\"ne-text\">\r\n   知识点：T547-T548\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"ejdjy\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u93757bb4\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u6c8eb9a2\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"u9caa0abe\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u2cfcec7d\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue4cdfe26\">\r\n      <span class=\"ne-text\">\r\n       T547\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u9cb37961\">\r\n      <span class=\"ne-text\">\r\n       掌握使用尺取法进行子串分隔，特别注意最后一个子串的处理，掌握边界填充法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"ucc69dd49\">\r\n      <a class=\"ne-link\" data-href=\"#o8Kxq\" href=\"#o8Kxq\">\r\n       <span class=\"ne-text\">\r\n        T524\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#CUEPT\" href=\"#CUEPT\">\r\n       <span class=\"ne-text\">\r\n        T546\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u51f8eb20\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"677\">\r\n     <p class=\"ne-p\" id=\"u558a493b\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX516)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ucec4ad73\">\r\n      <span class=\"ne-text\">\r\n       T548\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u75d60bab\">\r\n      <span class=\"ne-text\">\r\n       将相对独立的功能抽取为函数，将极大减轻程序书写逻辑\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"u8f58cdd8\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/iz3dks#VKSK4\" href=\"ch3#VKSK4\">\r\n       <span class=\"ne-text\">\r\n        T331\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"F1rgU\">\r\n  <span class=\"ne-text\">\r\n   4.6 高精度计算\r\n  </span>\r\n </h2>\r\n <h3 id=\"JkiCi\">\r\n  <span class=\"ne-text\">\r\n   例题5.15\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u5a7801fe\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输入两个不超过100位的位数相等的正整数，求其和。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u938fca7b\">\r\n  <span class=\"ne-text\">\r\n   【题目分析】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u8d7e38fb\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   C++中提供的最大整数类型为long long，为64位，大概表示\r\n  </span>\r\n  <span class=\"ne-math\" id=\"e1aok\" style=\"color: rgb(64, 64, 64)\">\r\n   <img src=\"../assets/images/fccc9702a18cbf05973072ab08a6c8d4.svg\"/>\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   量级，显然无法表示题目所述的整数。因此需要用字符串表达这两个100位的整数，通过小学所学的逐位计算的方法计算加法。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"fBFW8\"><span\r\nstyle=\"font-weight:bold;\">代码5.35</span> 大数计算\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\nstring plus(const string&amp; s1,const string&amp; s2){\r\n    string r=s1;\r\n    int carry = 0;\r\n    for(size_t i=r.size()-1;i&lt;r.size();i--){\r\n        int temp = s1[i]-'0'+s2[i]-'0'+carry;\r\n        r[i] = temp%10+'0';\r\n        carry = temp/10;\r\n    }\r\n    return carry?\"1\"+r:r;\r\n}\r\nint main() {\r\n\tstring s1,s2;\r\n\tcin&gt;&gt;s1&gt;&gt;s2;\r\n\tcout&lt;&lt;plus(s1,s2)&lt;&lt;endl;\r\n\treturn 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"N6lTE\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u61ab441b\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u057d528f\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u11526eea\">\r\n      <span class=\"ne-text\">\r\n       686897979708804564328634\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u2a311c95\">\r\n      <span class=\"ne-text\">\r\n       475825687845753588322687\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u36838e1f\">\r\n      <span class=\"ne-text\">\r\n       1162723667554558152651321\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u0dc33f76\">\r\n   <span class=\"ne-text\">\r\n    这是一个模拟加法计算过程的算法，第4行让结果\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     r\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    有一个初始长度，然后第6行的循环逐位执行加法操作。注意循环条件有点不合常规，这是因为size_t是unsigned类型，-1是该类型的最大值，一定大于字符串长度。\r\n   </span>\r\n  </li>\r\n  <li id=\"u5b245d30\">\r\n   <span class=\"ne-text\">\r\n    按照加法计算规则，每位的结果都是对应两位相加，并且加上进位。设置初始进位为0。\r\n   </span>\r\n  </li>\r\n  <li id=\"u416a909d\">\r\n   <span class=\"ne-text\">\r\n    第11行是为了防止最高位有进位，根据加法规则，进位只能是1。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"bKBAL\">\r\n  <span class=\"ne-text\">\r\n   随堂练习5.4\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u2e7b8ee5\">\r\n  <span class=\"ne-text\">\r\n   如果两个大数相加，且位数不相等，应该如何处理？\r\n  </span>\r\n </p>\r\n <h3 id=\"TSGz6\">\r\n  <span class=\"ne-text\">\r\n   知识点：T549\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"ZnNPV\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ue76c4a8e\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u47043fa0\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"ufb759d17\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ub2d26512\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td rowspan=\"2\" width=\"58\">\r\n     <p class=\"ne-p\" id=\"u6a0a2153\">\r\n      <span class=\"ne-text\">\r\n       T549\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"ub26ab69d\">\r\n      <span class=\"ne-text\">\r\n       掌握大数计算的基本方法\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"uba96efc5\">\r\n      <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/afrstd#wG8i3\" href=\"ch2#wG8i3\">\r\n       <span class=\"ne-text\">\r\n        T242\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"链接b5\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td colspan=\"3\" width=\"677\">\r\n     <p class=\"ne-p\" id=\"u651d7b63\">\r\n      \r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        (LX517)\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h1 id=\"NrvLX\">\r\n  <span class=\"ne-text\">\r\n   5. C风格的字符串\r\n  </span>\r\n </h1>\r\n <h2 id=\"Y4dUN\">\r\n  <span class=\"ne-text\">\r\n   5.1 C风格字符串的定义和初始化\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"ue60eec28\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   C语言并没有提供“字符串”这种复杂数据类型，它借助字符类型的数组来存储一个串的内容，以特殊字符'\\0'作为串的结束标志。从存储结构上来说，C语言的字符串就是“以'\\0'结尾的字符数组”，长度指串中位于'\\0'之前的字符个数。字符串一定是一个字符数组，但字符数组未必是字符串，关键看是否包含'\\0'。一个字符数组可以存储多个'\\0'，但它存储的字符串内容到第一个'\\0'出现的位置就结束了。字符串的查找、求长度、复制、比较等常见算法都是紧紧围绕“以'\\0'结尾”这一特性，对字符数组进行操作。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6250a3ad\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   定义字符串类型的变量其实就是定义字符数组类型的变量，必须保证数组大小足够容纳末尾的'\\0'。例如：\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"JQHpX\"><span\r\nstyle=\"font-weight:bold;\">代码5.36</span>  C风格字符串的定义和初始化\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main ()\r\n{\r\n    char s1[10]; //数组s1是一维数组，它可以存放10个字符，或者一个长度不大于9的字符串\r\n    char s2[6]=\"China\"; \t\t\t\t\t\t\t\t\t//用字符串常量赋值\r\n    char s3[6]= {'C', 'h', 'i', 'n', 'a', '\\0'};\t\t\t//用字符常量赋值\r\n    char name[3][10];\t\t//数组name是二维数组，存放3个长度不大于9的字符串\r\n    char w_day[ ][10]={\"Sunday\",\"Monday\", \"Tuesday\",\r\n            \"Wednesday\",\"Thursday\",\"Friday\", \"Saturday\" };\t//二维字符串初始化\r\n    int num;\r\n    cin&gt;&gt;num;\r\n    cout&lt;&lt;s2&lt;&lt;' '&lt;&lt;s3&lt;&lt;endl;\r\n    s2[3]='\\0';\r\n    cout&lt;&lt;s2&lt;&lt;' '&lt;&lt;w_day[num]&lt;&lt;endl;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"ir2ht\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u287c8f8c\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u77fde59b\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u1f046a8e\">\r\n      <span class=\"ne-text\">\r\n       3\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u4122f694\">\r\n      <span class=\"ne-text\">\r\n       China China\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u50cd5577\">\r\n      <span class=\"ne-text\">\r\n       Chi Wednesday\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"链接e7\">\r\n   <span class=\"ne-text\">\r\n    C风格字符串分为两个长度：物理长度和逻辑长度。定义时字符数组的长度为其物理长度，表示了该字符数组能够存储字符的数量。而字符串要求至少有一个'\\0'，第一个'\\0'前的字符数量为其逻辑长度，也是字符串的长度。物理长度至少要比逻辑长度大1，用于存储'\\0'。\r\n   </span>\r\n  </li>\r\n  <li id=\"uee3e13d0\">\r\n   <span class=\"ne-text\">\r\n    第6行和第9行用字符串常量进行初始化，会自动在尾部添加一个'\\0'，表示字符串的结束。\r\n   </span>\r\n  </li>\r\n  <li id=\"u23bfd64b\">\r\n   <span class=\"ne-text\">\r\n    第14行将字符串\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     s2\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的第3个字符设置为'\\0'，因此其逻辑长度修改为3，第15行只输出Chi三个字符。\r\n   </span>\r\n  </li>\r\n  <li id=\"ud5e9d9c2\">\r\n   <span class=\"ne-text\">\r\n    第8-9行定义了两个二维字符串，用于存储多个字符串，每个字符串都要以'\\0'结束。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"vSfer\">\r\n  <span class=\"ne-text\">\r\n   知识点：T551\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"dTV9o\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"ud90d743d\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u20d8623b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"uf934b21b\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u179f7133\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u3b47cce6\">\r\n      <span class=\"ne-text\">\r\n       T551\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u0ae240bc\">\r\n      <span class=\"ne-text\">\r\n       掌握C风格字符串的定义和初始化，理解物理长度和逻辑长度\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"u2746b4f9\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ue9d1212c\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"poKOJ\">\r\n  <span class=\"ne-text\">\r\n   5.2 C风格字符串的基本操作\r\n  </span>\r\n </h2>\r\n <p class=\"ne-p\" id=\"uabd779ce\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   C风格字符串本质上是字符数组，因此不能整体赋值和整体比较。对于字符串的常见操作，都存放在头文件&lt;cstring&gt;中，求长度函数strlen，赋值函数strcpy，比较函数strcmp，连接函数为strcat。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"wAIma\"><span\r\nstyle=\"font-weight:bold;\">代码5.37</span>  C风格字符串的常见函数\r\n<code>#include&lt;iostream&gt;\r\n#include&lt;cstring&gt;\r\nusing namespace std;\r\nint main ()\r\n{\r\n    char source[30] = \"Why always me?\",target[20];\r\n    cout&lt;&lt;strlen(source)&lt;&lt;' '&lt;&lt;sizeof(source)&lt;&lt;endl;\r\n    strcpy(target, source);\r\n    cout&lt;&lt;strlen(target)&lt;&lt;' '&lt;&lt;target&lt;&lt;endl;\r\n    char other[] = \"Why not he?\";\r\n    cout&lt;&lt;strcmp(source,other)&lt;&lt;endl;\r\n    cout&lt;&lt;strcat(source,other)&lt;&lt;endl;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"PHNo9\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u3b370339\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u9ac00455\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ufa94edcc\">\r\n      <span class=\"ne-text\">\r\n       （无）\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"链接3f\">\r\n      <span class=\"ne-text\">\r\n       14 30\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u76f2f948\">\r\n      <span class=\"ne-text\">\r\n       14 Why always me?\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u4186dc8f\">\r\n      <span class=\"ne-text\">\r\n       -1\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ub7337be7\">\r\n      <span class=\"ne-text\">\r\n       Why always me?Why not he?\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u6d6b4360\">\r\n   <span class=\"ne-text\">\r\n    第7行输出结果显示，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     source\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的逻辑长度为14，物理长度为30，strlen的返回结果为字符串的逻辑长度。\r\n   </span>\r\n  </li>\r\n  <li id=\"ua94f5b04\">\r\n   <span class=\"ne-text\">\r\n    第8行将\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     source\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的内容赋值给\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     target\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，这里特别注意C风格字符串是数组，不能进行整体赋值，因此绝对不能写成\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     target=source\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，只能采用strcpy对字符串进行赋值。\r\n   </span>\r\n  </li>\r\n  <li id=\"u1f80a011\">\r\n   <span class=\"ne-text\">\r\n    第11行进行字符串的大小比较，采用结果为：0（相等），正数（第一个字符串大），负数（第二个字符串大）。这里的大小指字典序，即单词在字典中的排列顺序。从左到右依次遍历字符，当遇到第一个不相同的字符时，该字符的ASCII码比较结果就是两个字符串的大小关系。例如：\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     strcmp(\"abcd\",\"abck\")&lt;0\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     strcmp(\"abc\",\"ab\")&gt;0\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     strcmp(\"abc\",\"b\")&lt;0\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    。\r\n   </span>\r\n  </li>\r\n  <li id=\"u28fbc478\">\r\n   <span class=\"ne-text\">\r\n    第12行对两个字符串进行了连接，并将连接的结果放在第一个字符串\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     source\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    中，函数的返回值也是连接的结果。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <p class=\"ne-p\" id=\"u91b7c10a\" style=\"text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   以下内容将C风格字符串中的常见操作进行了具体的代码实现。使用时可以采用库函数，以下实现是为了更好地从基础操作中理解C风格字符串的使用。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"KitS2\"><span\r\nstyle=\"font-weight:bold;\">代码5.38</span>  字符串串长\r\n<code>int my_strlen(char s[])\r\n{\r\n    int len=0; //len计算串长\r\n    while (s[len]!='\\0') len++; //统计'\\0'前的字符数\r\n    return len;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ue2ff687d\">\r\n   <span class=\"ne-text\">\r\n    根据C风格字符串的特点，求串长就是统计'\\0'前的字符数。\r\n   </span>\r\n  </li>\r\n  <li id=\"u22d80871\">\r\n   <span class=\"ne-text\">\r\n    第4行用while循环实现，这使得代码的可读性更强；在熟练使用for循环后也可以写成\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     for (len = 0; s[len]!='\\0'; len++);\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    ，注意不要遗漏了末尾的分号，这表示循环条件成立时执行空语句，仅改变计数变量\r\n   </span>\r\n   <code class=\"ne-code\">\r\n    <span class=\"ne-text\">\r\n     len\r\n    </span>\r\n   </code>\r\n   <span class=\"ne-text\">\r\n    的值。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"AlPNW\"><span\r\nstyle=\"font-weight:bold;\">代码5.39</span>  字符串复制\r\n<code>void my_strcpy(char target[], char source[])\r\n{\r\n    int i=0; //两个字符串从首位开始复制\r\n    while((target[i++]=source[i])); //将source字符串中'\\0'及之前的字符复制给target\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"uc5810002\">\r\n   <span class=\"ne-text\">\r\n    根据C风格字符串的特点，字符串复制就是将source字符串中'\\0'及之前的字符复制给target。常规的写法有很多种，这里采用了尽量简洁的写法。\r\n   </span>\r\n  </li>\r\n  <li id=\"u1d26c5e4\">\r\n   <span class=\"ne-text\">\r\n    该函数使用时注意一定要保证target数组的大小足够保存source字符串，必要的话可以在上面函数中添加一段长度验证程序（略）。\r\n   </span>\r\n  </li>\r\n  <li id=\"u12bf5c98\">\r\n   <span class=\"ne-text\">\r\n    第4行用到了几个知识点：①C语言用0代表“false”，非0代表“true”；②赋值表达式的终值是赋值符左边的数值；③变量i的自加运算符'++'在后，先取i的值进行运算，然后自增1。因此整个执行过程为：先将source[i]赋值给target[i]，然后i自增1，然后判断条件表达式结果是否为“true”，当source[i]为'\\0'时结束循环。\r\n   </span>\r\n  </li>\r\n  <li id=\"ufefcabfe\">\r\n   <span class=\"ne-text\">\r\n    特别注意，source字符串末尾的'\\0'一定也要复制过来，或者手动添加。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"MfJO4\"><span\r\nstyle=\"font-weight:bold;\">代码5.40</span>  字符串比较\r\n<code>int my_strcmp(char str1[], char str2[])\r\n{\r\n    int res,i=0 ; //res保存第一个出现的不同字符的ASCII码差值。\r\n    while((res = str1[i] - str2[i]) == 0 &amp;&amp; str1[i]) i++; //字符相同且str1未到末尾时i下移。\r\n    return res;\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ua596483f\">\r\n   <span class=\"ne-text\">\r\n    根据C风格字符串的特点，字符串比较就是依次对比str1和str2的同位置字符的ASCII码数值，直到不同为止，结果为：0（相等），正数（str1大），负数（str2大）。常规的写法有很多种，这里采用了尽量简洁的写法。\r\n   </span>\r\n  </li>\r\n  <li id=\"udd56ebd5\">\r\n   <span class=\"ne-text\">\r\n    第4行的条件逻辑是str1未到末尾（不是'\\0'），且同位置字符不相同时，位移变量i下移一位；不用判断str2是否到末尾，因为如果str1长度大于str2，str2先到末尾，那么此处字符是'\\0'，必然小于str1同位置字符。\r\n   </span>\r\n  </li>\r\n  <li id=\"udf68cf53\">\r\n   <span class=\"ne-text\">\r\n    res返回的结果是str1和str2首次出现不同字符时，两个字符的ASCII码差值。\r\n   </span>\r\n  </li>\r\n  <li id=\"ub2acd85d\">\r\n   <span class=\"ne-text\">\r\n    后面的练习题期望结果为：0（相等），1（str1大），-1（str2大），即：将任意正值变成1，任意负值变成-1。这里提供一个解法：将上述代码第5行改为return\r\n                (res&gt;0)-((-res)&gt;0)。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"uBitN\">\r\n  <span class=\"ne-text\">\r\n   随堂练习5.5\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ua109e5d9\">\r\n  <span class=\"ne-text\">\r\n   如何让my_strcmp的返回值为-1,0,1，即正数返回1，负数返回-1。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u6e7c297e\">\r\n  <span class=\"ne-text\">\r\n   提示：知识点\r\n  </span>\r\n  <a class=\"ne-link\" data-href=\"https://www.yuque.com/upcxailixin/ua125n/afrstd#MIXWN\" href=\"ch2#MIXWN\">\r\n   <span class=\"ne-text\">\r\n    T267\r\n   </span>\r\n  </a>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"v4pKy\"><span\r\nstyle=\"font-weight:bold;\">代码5.41</span>  字符串串联\r\n<code>void my_strcat(char target[], char source[])\r\n{\r\n    int lt=strlen(target),i=0; //lt保存target串长，i标记source串下标\r\n    while((target[lt++]=source[i++])); //将source字符串中'\\0'及之前的字符串联到target末尾\r\n}</code></pre>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"ue0f8874b\">\r\n   <span class=\"ne-text\">\r\n    该函数实现思想类似于字符串复制，只是运算位置从target末尾的'\\0'处开始。\r\n   </span>\r\n  </li>\r\n  <li id=\"udf06269d\">\r\n   <span class=\"ne-text\">\r\n    该函数使用时注意一定要保证target数组的大小足够保存串联后的字符串，必要的话可以在上面函数中添加一段长度验证程序（略）。\r\n   </span>\r\n  </li>\r\n  <li id=\"u138e7c2c\">\r\n   <span class=\"ne-text\">\r\n    第3行求target串长时用到了strlen函数，也可以自己写个循环代替，参考求串长代码。上述算法考虑到运算效率，不希望每次调用strlen函数重新计算target串长，因此用了临时变量lt记录target初始长度，这也是空间换时间的思想体现。\r\n   </span>\r\n  </li>\r\n  <li id=\"u41c66120\">\r\n   <span class=\"ne-text\">\r\n    其他知识点参考my_strcpy的实现，第4行代码在复制source的'\\0'后结束循环。\r\n   </span>\r\n  </li>\r\n  <li id=\"ua18fe737\">\r\n   <span class=\"ne-text\">\r\n    特别注意，source字符串末尾的'\\0'一定也要复制过来，或者手动添加。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"hoc5F\">\r\n  <span class=\"ne-text\">\r\n   知识点：T552\r\n  </span>\r\n </h3>\r\n <table border=1 class=\"ne-table\" id=\"KrEpt\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"链接29\">\r\n      <span class=\"ne-text\">\r\n       索引\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"u83acebae\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       要点\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"ue4385963\">\r\n      <span class=\"ne-text\">\r\n       正链\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"ud76b678c\">\r\n      <span class=\"ne-text\">\r\n       反链\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"58\">\r\n     <p class=\"ne-p\" id=\"u9003e9be\">\r\n      <span class=\"ne-text\">\r\n       T552\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"485\">\r\n     <p class=\"ne-p\" id=\"uef1b3251\">\r\n      <span class=\"ne-text\">\r\n       掌握C风格字符串的基本操作以及实现方式，通过代码示例掌握C风格字符串的基本操作，掌握字典序\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"125\">\r\n     <p class=\"ne-p\" id=\"ubea73b17\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"67\">\r\n     <p class=\"ne-p\" id=\"u4de7a682\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <h2 id=\"TGdg3\">\r\n  <span class=\"ne-text\">\r\n   5.3 C风格字符的应用\r\n  </span>\r\n </h2>\r\n <h3 id=\"Spxl1\">\r\n  <span class=\"ne-text\">\r\n   例题5.16\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"ua8467dcb\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   从字符串str中查找某个字符ch第一次出现的位置\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u66fe7eb5\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ue22856da\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输入一个字符串str和一个字符ch，以空格分隔。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uf3c2c990\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc6f9bf1d\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输出\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   ch在str中第一次出现的位置\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"RZsRb\"><span\r\nstyle=\"font-weight:bold;\">代码5.42</span>  查找字符\r\n<code>#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n    char str[100],ch;\r\n    int i=0;\r\n    cin.getline(str,100); //读入字符串str\r\n    cin.get(ch); //读入要查找的字符ch\r\n    while(str[i]!='\\0' &amp;&amp; str[i]!=ch) i++; //未到串尾且未找到ch时，下标下移\r\n    //找到则输出位置，否则提示未找到\r\n    str[i] == ch ? cout&lt;&lt;\"at position: \"&lt;&lt;i&lt;&lt;endl : cout&lt;&lt;\"not found!\"&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"nX70t\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u24fb26e9\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud3c91951\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uda89279a\">\r\n      <span class=\"ne-text\">\r\n       asdsf1234567\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"udb759bbf\">\r\n      <span class=\"ne-text\">\r\n       6\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u00fb2d51\">\r\n      <span class=\"ne-text\">\r\n       at position: 10\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u047e3b75\">\r\n   <span class=\"ne-text\">\r\n    第9行将找到/找不到的条件合并在一起。\r\n   </span>\r\n  </li>\r\n  <li id=\"u14e6bc03\">\r\n   <span class=\"ne-text\">\r\n    第11行用了条件运算符输出结果，注意不要遗漏了找不到的情况。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"gHWBk\">\r\n  <span class=\"ne-text\">\r\n   例题5.17\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"u86f705fb\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   从字符串str中查找第一个只出现一次的字符，如果没有找到，输出\"-1\"。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u99643e49\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uf317567a\" style=\"text-align: left\">\r\n  <span class=\"ne-text\">\r\n   输入一个字符串str，可能包含空格。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u17838a3f\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uc6c327c0\" style=\"text-align: left\">\r\n  <span class=\"ne-text\">\r\n   如果找到符合条件的字符则输出，否则输出\"-1\"。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"yO3dU\"><span\r\nstyle=\"font-weight:bold;\">代码5.43</span>  查找第一个只出现一次的字符\r\n<code>#include&lt;iostream&gt;\r\n#include&lt;cstring&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n    char str[100];\r\n    int a[128] = {0};//记录字符串str中每个字符的出现次数\r\n    cin.getline(str,100); //读入字符串str\r\n    int len = strlen(str); //保存字符串长度\r\n    int i;\r\n    for(i=0; i&lt;len; i++) //统计字符串str中每个字符的出现次数\r\n        a[str[i]] ++;\r\n    for(i=0; i&lt;len; i++) //按出现顺序查找只出现一次的字符\r\n        if (1 == a[str[i]]) break;\r\n    i&lt;len ? cout&lt;&lt;str[i]&lt;&lt;endl : cout&lt;&lt;\"-1\"&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"tvuH8\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u3c40d20e\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud4c58efd\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ucc826bf7\">\r\n      <span class=\"ne-text\">\r\n       asdf fdsa 123\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ueb271e7b\">\r\n      <span class=\"ne-text\">\r\n       1\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u84647cc9\">\r\n   <span class=\"ne-text\">\r\n    该程序也是一个比较经典的以空间换时间的操作，比较自然的思路是对每个字符统计出现次数，这需要用到嵌套循环，算法复杂度比本程序高。\r\n   </span>\r\n  </li>\r\n  <li id=\"uec38df38\">\r\n   <span class=\"ne-text\">\r\n    第7行定义的数组a记录字符串str中每个字符的出现次数，因为ASCII表有128个字符，因此数组大小至少定义为128。\r\n   </span>\r\n  </li>\r\n  <li id=\"ua960b8a7\">\r\n   <span class=\"ne-text\">\r\n    第9行变量len保存字符串str的长度，因为要多次使用，所以用变量保存下来，节约调用strlen函数的次数。\r\n   </span>\r\n  </li>\r\n  <li id=\"u95c0b13c\">\r\n   <span class=\"ne-text\">\r\n    第14行将常量1放在'=='左边，这是一个良好的习惯，当粗心将'=='误写为'='时编译器会报错。\r\n   </span>\r\n  </li>\r\n  <li id=\"u19d24a0d\">\r\n   <span class=\"ne-text\">\r\n    如果查找到，str字符串中i的位置就是符合条件的字符；查找不到则最终i的值等于len。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h3 id=\"ZnDf4\">\r\n  <span class=\"ne-text\">\r\n   例题5.18\r\n  </span>\r\n </h3>\r\n <p class=\"ne-p\" id=\"链接53\" style=\"text-align: left; text-indent: 2em\">\r\n  <span class=\"ne-text\">\r\n   输入若干单词，将它们从小到大排列后输出。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"u5c308729\">\r\n  <span class=\"ne-text\">\r\n   【输入】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"ub2fd622d\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   第一个输入数字n，然后n行，每行输入一个单词，每个单词无空格。\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uef9460ac\">\r\n  <span class=\"ne-text\">\r\n   【输出】\r\n  </span>\r\n </p>\r\n <p class=\"ne-p\" id=\"uf0a9b93b\" style=\"text-align: left\">\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   输出\r\n  </span>\r\n  <span class=\"ne-text\">\r\n   排序后的单词，每行一个单词\r\n  </span>\r\n  <span class=\"ne-text\" style=\"color: rgb(64, 64, 64)\">\r\n   。\r\n  </span>\r\n </p>\r\n <pre class=\"ne-codeblock language-cpp\" data-language=\"cpp\" id=\"P0mNY\"><span\r\nstyle=\"font-weight:bold;\">代码5.44</span>  单词排序\r\n<code>#include&lt;iostream&gt;\r\n#include&lt;cstring&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;//首先读入第一行的整数，即单词数\r\n    cin.ignore();//清除残留的回车符\r\n    char str[n][100], t[100];//str保存读取的n个单词\r\n    for (int i=0; i&lt;n; i++) cin.getline(str[i],100);\r\n    for(int i=0; i&lt;n-1; i++)//交换法排序\r\n        for (int j=i+1; j&lt;n; j++)\r\n            if (strcmp( str[i], str[j]) &gt; 0 )\r\n            {\r\n                strcpy ( t, str[i]);\r\n                strcpy (str[i], str[j]);\r\n                strcpy(str[j], t);\r\n            }\r\n    for (int i=0; i&lt;n; i++)  cout&lt;&lt;str[i]&lt;&lt;endl;\r\n    return 0;\r\n}</code></pre>\r\n <table border=1 class=\"ne-table\" id=\"y1lWw\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u5ff80fb8\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输入\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"uaa5b8dee\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        样例输出\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"ud6e87821\">\r\n      <span class=\"ne-text\">\r\n       5\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ua068a994\">\r\n      <span class=\"ne-text\">\r\n       word\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ue57a45e3\">\r\n      <span class=\"ne-text\">\r\n       work\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uc2887b26\">\r\n      <span class=\"ne-text\">\r\n       homework\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u3adbcc6e\">\r\n      <span class=\"ne-text\">\r\n       job\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u100d20b4\">\r\n      <span class=\"ne-text\">\r\n       good\r\n      </span>\r\n     </p>\r\n    </td>\r\n    <td width=\"375\">\r\n     <p class=\"ne-p\" id=\"u0840ed92\">\r\n      <span class=\"ne-text\">\r\n       good\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"u4a47ac94\">\r\n      <span class=\"ne-text\">\r\n       homework\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"ueff98189\">\r\n      <span class=\"ne-text\">\r\n       job\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uc90942aa\">\r\n      <span class=\"ne-text\">\r\n       word\r\n      </span>\r\n     </p>\r\n     <p class=\"ne-p\" id=\"uf803a470\">\r\n      <span class=\"ne-text\">\r\n       work\r\n      </span>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n <ul class=\"ne-ul\">\r\n  <li id=\"u656ce580\">\r\n   <span class=\"ne-text\">\r\n    程序用一个字符串数组保存单词，在C语言中存储结构用二维字符数组描述。\r\n   </span>\r\n  </li>\r\n  <li id=\"链接25\">\r\n   <span class=\"ne-text\">\r\n    第8行不要忘了用cin.ignore()清除读走整数后缓冲区中残留的回车符，否则接下来读到的第一个单词是空串。当然也有其他解决方法，例如用cin.get()读走单个字符、用getline读走空行等等。\r\n   </span>\r\n  </li>\r\n  <li id=\"u752fc9ef\">\r\n   <span class=\"ne-text\">\r\n    第11-18行是交换法排序，需要注意的是，字符串的比较、赋值要用专用的处理函数strcmp、strcpy，而不是用于简单变量的运算符。\r\n   </span>\r\n  </li>\r\n </ul>\r\n <h1 id=\"dHWol\">\r\n  <span class=\"ne-text\">\r\n   题单\r\n  </span>\r\n </h1>\r\n <table border=1 class=\"ne-table\" id=\"Pbqom\" style=\"width: 100%\">\r\n  <tbody>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ud3f4f331\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        序号\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n\r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"ua5bc6756\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        题目名称\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"链接f7\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        知识点\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"uac19ee35\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        序号\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n\r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u5008ef0c\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        题目名称\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u3e749bf0\" style=\"text-align: center\">\r\n      <strong>\r\n       <span class=\"ne-text\">\r\n        知识点\r\n       </span>\r\n      </strong>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u5bf275a1\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX501\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"ubb3c77c6\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161729\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        逆序输出数组\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ub1fb718f\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#sDNu2\" href=\"#sDNu2\">\r\n       <span class=\"ne-text\">\r\n        T511\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u3ec9922b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX502\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u23f6521b\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161730\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        数组求和\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uc6537786\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#wVcOg\" href=\"#wVcOg\">\r\n       <span class=\"ne-text\">\r\n        T514\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ub2b3855b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX503\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"u198c854f\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161731\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        昨天\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"链接22\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#Dr2WK\" href=\"#Dr2WK\">\r\n       <span class=\"ne-text\">\r\n        T512\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"uf283bf9a\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX504\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u39cbc626\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161732\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        求最值\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u472d9719\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#wVcOg\" href=\"#wVcOg\">\r\n       <span class=\"ne-text\">\r\n        T514\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u2f40170b\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX505\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"u3ee51409\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161733\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        平均之上\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ucd2e11e4\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#wVcOg\" href=\"#wVcOg\">\r\n       <span class=\"ne-text\">\r\n        T514\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u293e2aaa\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX506\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u73a2b0a8\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161734\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        编程团体赛\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uf3092b24\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#s7C1R\" href=\"#s7C1R\">\r\n       <span class=\"ne-text\">\r\n        T516\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u5569af40\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX507\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"ub2b3d382\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161735\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        光棍串\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u7373d7ad\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#qQ3m1\" href=\"#qQ3m1\">\r\n       <span class=\"ne-text\">\r\n        T522\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"链接8c\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX508\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"uc90ecfca\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161736\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        小写数转大写\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uf4a581de\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#qQ3m1\" href=\"#qQ3m1\">\r\n       <span class=\"ne-text\">\r\n        T522\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"链接d8\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX509\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"uc003dd01\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161739\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        最小正整数\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ud0d371e7\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#KKCom\" href=\"#KKCom\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u79bd3c70\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX510\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"ud07d8e8e\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161738\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        建国的难题\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uf2b05e25\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#KKCom\" href=\"#KKCom\">\r\n       <span class=\"ne-text\">\r\n        T526\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ubaea98c7\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX511\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"uaea82665\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161737\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        排序\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"ued38cbc2\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#Tpq9G\" href=\"#Tpq9G\">\r\n       <span class=\"ne-text\">\r\n        T527\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u6bc47215\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX512\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u9a413cd5\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161740\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        矩阵运算\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"ua600fa9d\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#rxqUf\" href=\"#rxqUf\">\r\n       <span class=\"ne-text\">\r\n        T515\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"uc19f34b2\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX513\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"u04f7645c\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161741\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        字符串测试\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u5d308137\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#gItBo\" href=\"#gItBo\">\r\n       <span class=\"ne-text\">\r\n        T541\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u0b361db0\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX514\r\n      </span>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"uc7558304\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161742\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        字符串跨距\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"uce597bb3\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#gItBo\" href=\"#gItBo\">\r\n       <span class=\"ne-text\">\r\n        T541\r\n       </span>\r\n      </a>\r\n      <span class=\"ne-text\">\r\n       ,\r\n      </span>\r\n      <a class=\"ne-link\" data-href=\"#CUEPT\" href=\"#CUEPT\">\r\n       <span class=\"ne-text\">\r\n        T546\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u38912f4f\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX515\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"u72d02d62\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161743\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        首字母大写\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u3e5c85b1\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#ROwVJ\" href=\"#ROwVJ\">\r\n       <span class=\"ne-text\">\r\n        T546\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u19ea83f2\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX516\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u89ccbb14\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161744\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        交替01串\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u24029c44\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#o43D1\" href=\"#o43D1\">\r\n       <span class=\"ne-text\">\r\n        T547\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n   <tr style=\"height: 33px\">\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"uee22cb6e\" style=\"text-align: center\">\r\n      <span class=\"ne-text\">\r\n       LX517\r\n      </span>\r\n     </p>\r\n    </td>\r\n     \r\n    <td width=\"117\">\r\n     <p class=\"ne-p\" id=\"u93197e95\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\" href=\"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161745\" target=\"_blank\">\r\n       <span class=\"ne-text\">\r\n        大数加1\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"uc4f3bfca\" style=\"text-align: center\">\r\n      <a class=\"ne-link\" data-href=\"#TSGz6\" href=\"#TSGz6\">\r\n       <span class=\"ne-text\">\r\n        T549\r\n       </span>\r\n      </a>\r\n     </p>\r\n    </td>\r\n    <td width=\"93\">\r\n     <p class=\"ne-p\" id=\"u7671f783\" style=\"text-align: center\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    \r\n    <td width=\"121\">\r\n     <p class=\"ne-p\" id=\"u86fd8e38\" style=\"text-align: center\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n    <td width=\"99\">\r\n     <p class=\"ne-p\" id=\"u2737e2b0\" style=\"text-align: center\">\r\n      <br/>\r\n     </p>\r\n    </td>\r\n   </tr>\r\n  </tbody>\r\n </table>\r\n</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.goAnchor(window.location.hash);\r\n    });\r\n\r\n    hljs.initHighlightingOnLoad();\r\n    // hljs.highlightAll();\r\n    hljs.initLineNumbersOnLoad({\r\n      singleLine: true,\r\n      // startFrom: 5,\r\n    });\r\n  },\r\n  methods: {\r\n    goAnchor(selector) {\r\n      if(selector){\r\n        console.log(selector)\r\n        let elm = document.getElementById(selector.replace('#',''))\r\n        elm.scrollIntoView(true)\r\n      }\r\n        \r\n    },\r\n  },\r\n};\r\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ch5.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ch5.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ch5.vue?vue&type=template&id=d4dcd244&\"\nimport script from \"./Ch5.vue?vue&type=script&lang=js&\"\nexport * from \"./Ch5.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticStyle","_v","staticClass","attrs","require","mounted","$nextTick","goAnchor","window","location","hash","hljs","initHighlightingOnLoad","initLineNumbersOnLoad","singleLine","methods","selector","console","log","elm","document","getElementById","replace","scrollIntoView","component"],"sourceRoot":""}