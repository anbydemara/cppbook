"use strict";(self["webpackChunkcpp_book"]=self["webpackChunkcpp_book"]||[]).push([[570],{7570:function(t,s,a){a.r(s),a.d(s,{default:function(){return d}});var e=function(){var t=this;t._self._c;return t._m(0)},i=[function(){var t=this,s=t._self._c;return s("div",[s("h1",{staticStyle:{"text-align":"center"}},[t._v(" 第八章 模板和容器 ")]),s("div",{staticClass:"lake-content",attrs:{typography:"classic"}},[s("h1",{attrs:{id:"hai4M"}},[s("span",{staticClass:"ne-text"},[t._v(" 1. 泛型编程 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"justify","text-indent":"2em"},attrs:{id:"u88d7dbb7"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)","font-size":"16px"}},[t._v(" 泛型编程指在书写代码时，不考虑具体数据类型，而模板是泛型编程的基础。C++中的泛型编程主要分为模板函数和模板类。 ")]),s("span",{staticClass:"ne-text"},[t._v(" 面向对象和泛型编程的目的就是提升复用性， ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)","font-size":"16px"}},[t._v(" C++的 ")]),s("span",{staticClass:"ne-text"},[t._v(" 标准模板库（Standard Template Library，STL） ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)","font-size":"16px"}},[t._v(" 提供了 ")]),s("span",{staticClass:"ne-text"},[t._v(" 大体分为六大组件，分别是：容器、算法、迭代器、仿函数、适配器（配接器）、空间配置器 ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 0, 0)","font-size":"16px"}},[t._v(" 。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"600px","text-align":"center"},attrs:{border:"1",id:"fx1sM",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"98"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1c17859f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 容器 ")])])]),s("td",{attrs:{width:"502"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud5189aeb"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 各种数据结构，如vector、list、deque、set、map等,用来存放数据。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"98"}},[s("p",{staticClass:"ne-p",attrs:{id:"u41863121"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 算法 ")])])]),s("td",{attrs:{width:"502"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub0af2466"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 各种常用的算法，如sort、find、copy、for_each等。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"98"}},[s("p",{staticClass:"ne-p",attrs:{id:"u00d5f0f9"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 迭代器 ")])])]),s("td",{attrs:{width:"502"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7464e424"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 扮演了容器与算法之间的胶合剂。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"98"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud8ff3924"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 仿函数 ")])])]),s("td",{attrs:{width:"502"}},[s("p",{staticClass:"ne-p",attrs:{id:"ued6f78c6"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 行为类似函数，可作为算法的某种策略。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"98"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1d1606a2"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 适配器 ")])])]),s("td",{attrs:{width:"502"}},[s("p",{staticClass:"ne-p",attrs:{id:"u80c1c37f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 用来修饰容器或者仿函数或迭代器接口。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"98"}},[s("p",{staticClass:"ne-p",attrs:{id:"u85328bfe"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 空间配置器 ")])])]),s("td",{attrs:{width:"502"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub0b77536"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(51, 51, 51)","font-size":"14px"}},[t._v(" 负责空间的配置与管理。 ")])])])])])]),s("h2",{attrs:{id:"twuaD"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.1 模板函数 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"justify","text-indent":"2em"},attrs:{id:"udce3d890"}},[s("span",{staticClass:"ne-text"},[t._v(" 模板函数提供一个抽象的函数，并不具体指定其中数据的类型，而是某个虚拟类型代替。只提供基本的功能。其具体的数据类型，只在其被调用时视具体情况实例化。以下是一个具体样例： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"f8Yhz"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.1")]),t._v(" 最大值模板函数"),s("code",[t._v('#include <iostream>\n#include <string>\nusing namespace std;\n\ntemplate <typename T>\t\t\t\t\t//模板函数声明与定义\nT const& Max (T const& a, T const& b)\n{\n    return a < b ? b:a;\n}\nint main ()\n{\n    int i = 39, j = 20;\n    cout << "Max(i, j): " << Max(i, j) << endl;\n    double f1 = 13.5, f2 = 20.7;\n    cout << "Max(f1, f2): " << Max(f1, f2) << endl;\n    string s1 = "Hello", s2 = "World";\n    cout << "Max(s1, s2): " << Max(s1, s2) << endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"hnUwD"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub1709532"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uada2e8aa"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u64f29732"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u668ecdd4"}},[s("br")])]),s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8e197031"}},[s("span",{staticClass:"ne-text"},[t._v(" Max(i, j): 39 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u58aad45a"}},[s("span",{staticClass:"ne-text"},[t._v(" Max(i, j): 20.7 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u09356994"}},[s("span",{staticClass:"ne-text"},[t._v(" Max(i, j): World ")])])])]),s("tr",{staticStyle:{height:"33px"}}),s("tr",{staticStyle:{height:"33px"}})])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u74b70b9d"}},[s("span",{staticClass:"ne-text"},[t._v(" 第5-9行定义了一个模板函数Max，实现了求两个数据最大值的操作； ")])]),s("li",{attrs:{id:"u22eb9628"}},[s("span",{staticClass:"ne-text"},[t._v(" 第5行template表明以下定义的是一个模板，typename指明T是一个虚拟类型，在第13,15,17行Max被调用时，根据传入数据的具体类型被具体化为实际的类型。也可以把T理解为一个类型的占位符； ")])]),s("li",{attrs:{id:"u9e1165ec"}},[s("span",{staticClass:"ne-text"},[t._v(" 第6行使用T定义了形参的类型和返回值的类型，const表示为常量，不可被修改； ")])]),s("li",{attrs:{id:"u0277a1f8"}},[s("span",{staticClass:"ne-text"},[t._v(" 交换模板 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" swap ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的函数定义为： ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" template <class T> void swap(T& a, T& b) ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。可以看到，与目标函数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" Max ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的定义非常相似，只是因为要修改参数的值，没有加 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" const ")])]),s("span",{staticClass:"ne-text"},[t._v(" 常量约束。对于任意两个类型相同的变量，都可以调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" swap ")])]),s("span",{staticClass:"ne-text"},[t._v(" 模板函数进行交换。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u3032745d"}},[s("span",{staticClass:"ne-text"},[t._v(" 虚拟类型可以有多个，以下是另外一个样例： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"usHtn"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.2")]),t._v(" 求和模板函数"),s("code",[t._v('#include <iostream>\nusing namespace std;\ntemplate <typename T1, typename T2>\t//模板函数声明与定义\nT2 test(T1 tmp1, T2 tmp2) {\n    T2 tmp = tmp1 + tmp2;\n    return tmp;\n}\nint main(void) {\n    cout << "test(10,5)=" << test(10,5) << endl;\n    cout << "test(5,\'A\')=" << test(5,\'A\') << endl ;\n    cout << "test(10,5.5) =" << test(10,5.5) << endl;\n    cout << "test(5.5,10) =" << test(5.5,10) << endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"xxADp"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u76da1262"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uef556706"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u703f1017"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u38d82f89"}},[s("br")])]),s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u22cd6ec7"}},[s("span",{staticClass:"ne-text"},[t._v(" test(10,5)=15 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua4c8fe56"}},[s("span",{staticClass:"ne-text"},[t._v(" test(5,'A')=F ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2cd27cd4"}},[s("span",{staticClass:"ne-text"},[t._v(" test(10,5.5) =15.5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u73533be3"}},[s("span",{staticClass:"ne-text"},[t._v(" test(5.5,10) =15 ")])])])]),s("tr",{staticStyle:{height:"33px"}}),s("tr",{staticStyle:{height:"33px"}})])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u1e4cb3ac"}},[s("span",{staticClass:"ne-text"},[t._v(" 因为返回类型为T2，因此第10行的结果为字符类型，第11行结果为浮点类型，第12行结果被取整。 ")])])]),s("h3",{attrs:{id:"e79I0"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T811 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"eFJhg"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u56ce1ed6"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"538"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2c41a7c2"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud4559b13"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u02fb6a76"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9c6bf16"}},[s("span",{staticClass:"ne-text"},[t._v(" T811 ")])])]),s("td",{attrs:{width:"538"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2ea69c53"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握模板函数，能够自定义简单的模板函数 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9d6361a"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#panTK",href:"ch2#panTK"}},[s("span",{staticClass:"ne-text"},[t._v(" T26B ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3fe49083"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#qwRMs",href:"#qwRMs"}},[s("span",{staticClass:"ne-text"},[t._v(" T812 ")])])])])])])]),s("h2",{attrs:{id:"LutwA"}},[s("span",{staticClass:"ne-text"},[t._v(" 1.2 模板类* ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u4456e505"}},[s("span",{staticClass:"ne-text"},[t._v(" 与模板函数类似，可以构建模板类，不指定具体数据类型。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"NQr53"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.3")]),t._v(" 模板类"),s("code",[t._v('#include <iostream>\nusing namespace std;\ntemplate<class type> class Container {\nprivate:\n    type data;\npublic:\n    Container(type d) { this->data = d; }\n    type operator+(const Container<type>& t){\n        return this->data + t.data;\n    }\n};\nint main() {\n    Container<int> ia(3), ib(5);\n    cout << ia + ib << endl;\n    Container<string> as("abc"), bs("def");\n    cout << as + bs << endl;\n    return 0;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"DiolX"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf53ad80d"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc0823ac8"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue1afd547"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u57595848"}},[s("span",{staticClass:"ne-text"},[t._v(" 8 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0fad1ad6"}},[s("span",{staticClass:"ne-text"},[t._v(" 15 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u433a9a03"}},[s("span",{staticClass:"ne-text"},[t._v(" 第3行定义了一个模板类，在第13行调用时，将数据类型指定的为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" int ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，第15行调用时，数据类型指定为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" string ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。具体执行时，就会显示不同的类型的具体操作，见第14行和第16行的输出结果。 ")])]),s("li",{attrs:{id:"u0f235f97"}},[s("span",{staticClass:"ne-text"},[t._v(" 在第4-11行类的具体定义中，与 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" data ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的数据类型关联时，都用指定的虚拟类型 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" type ")])]),s("span",{staticClass:"ne-text"},[t._v(" 代替。 ")])]),s("li",{attrs:{id:"uc1240df7"}},[s("span",{staticClass:"ne-text"},[t._v(" 在1.2中使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" class ")])]),s("span",{staticClass:"ne-text"},[t._v(" 指定虚拟类型，而在1.1中使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" typename ")])]),s("span",{staticClass:"ne-text"},[t._v(" 指定虚拟类型， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" class ")])]),s("span",{staticClass:"ne-text"},[t._v(" 和 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" typename ")])]),s("span",{staticClass:"ne-text"},[t._v(" 在指定模板的虚拟类型时，是完全相同的。 ")])])]),s("h3",{attrs:{id:"qwRMs"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T812 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"Yllmf"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub7589410"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"538"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub55df1f0"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf32ee5ca"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf2a4db28"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uda76e410"}},[s("span",{staticClass:"ne-text"},[t._v(" T812 ")])])]),s("td",{attrs:{width:"538"}},[s("p",{staticClass:"ne-p",attrs:{id:"ube37ae85"}},[s("span",{staticClass:"ne-text"},[t._v(" 理解模板类，会用模板类执行基本操作。 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucf2029ac"}},[s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#e79I0",href:"ch8#e79I0"}},[s("span",{staticClass:"ne-text"},[t._v(" T811 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7b6fd344"}},[s("br")])])])])]),s("h1",{attrs:{id:"x7JiO"}},[s("span",{staticClass:"ne-text"},[t._v(" 2. STL容器 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u8f43e238"}},[s("span",{staticClass:"ne-text"},[t._v(" 参考文档链接： ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://cplusplus.com/reference/stl/",href:"https://cplusplus.com/reference/stl/",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" https://cplusplus.com/reference/stl/ ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"udaebc3a6"}},[s("span",{staticClass:"ne-text"},[t._v(" STL容器就是将运用最广泛的一些数据结构实现出来，常用的数据结构：数组, 链表,树, 栈, 队列, 集合, 映射表 等。这些容器分为序列式容器和关联式容器两种。C++11新加入4种容器，主要结构采用哈希函数，因此也称为无序容器。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em","margin-left":"2em","text-align":"justify"},attrs:{id:"uda37c2d1"}},[s("span",{staticClass:"ne-text"},[t._v(" 表8.1 STL容器种类 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"753px","text-align":"center"},attrs:{border:"1",id:"BQDA3",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"108"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue485a413"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 容器种类 ")])])]),s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"645"}},[s("p",{staticClass:"ne-p",attrs:{id:"uac7a3c82"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 功能 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"108"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1b183c7d"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 序列容器 ")])])]),s("td",{attrs:{width:"645"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1060f7ca"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 主要包括 vector 向量容器、list 列表容器以及 deque 双端队列容器。之所以被称为序列容器，是因为元素在容器中的位置同元素的值无关，即容器不是排序的。将元素插入容器时，指定在什么位置，元素就会位于什么位置。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"108"}},[s("p",{staticClass:"ne-p",attrs:{id:"udb235111"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 关联式容器（排序容器） ")])])]),s("td",{attrs:{width:"645"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8ce4a594"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 包括 set 集合容器、multiset多重集合容器、map映射容器以及 multimap 多重映射容器。排序容器中的元素默认是由小到大排序好的，即便是插入元素，元素也会插入到适当位置。所以关联容器在查找时具有非常好的性能。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"108"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub1cc14d0"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 哈希容器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3a348a69"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" （无序容器） ")])])]),s("td",{attrs:{width:"645"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue89b5ccd"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 分别是 unordered_set 哈希集合、unordered_multiset 哈希多重集合、unordered_map 哈希映射以及 unordered_multimap 哈希多重映射。和排序容器不同，哈希容器中的元素是未排序的，元素的位置由哈希函数确定。 ")])])])])])]),s("h2",{attrs:{id:"woi9U"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.1 容器的分类 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u5bf217fc"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 序列容器： ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ube76f63b"}},[s("span",{staticClass:"ne-text"},[t._v(" 所谓序列容器，即以线性排列（类似普通数组的存储方式）来存储某一指定类型（例如 int、double 等）的数据，每个元素均有固定的位置。需要特殊说明的是，该类容器并不会自动对存储的元素按照值的大小进行排序。需要注意，序列容器只是一类容器的统称，并不指具体的某个容器。序列容器大致包含以下几类容器，其对应的头文件与容器名相同。前三种容器可以进行随机访问，意味着底层存储结构为数组，存储空间连续；后面三种容器不可以随机访问，意味着每个节点都是独立存储，在空间上不具有连续性。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1de86c77"}},[s("span",{staticClass:"ne-text"},[t._v(" 表8.2 序列容器 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"756px","text-align":"center"},attrs:{border:"1",id:"C8aZn",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7e501b9a"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"14px"}},[t._v(" 容器 ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"u44b19196"}},[s("span",{staticClass:"ne-text"},[t._v(" 描述 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"u419482d1"}},[s("span",{staticClass:"ne-text"}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 增加或删除元素 ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf63975da"}},[s("span",{staticClass:"ne-text"},[t._v(" 随机访问 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3b6eaedb"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 数组容器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua75c7a74"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" array<T,N> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"u91f3fdc9"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 表示可以存储 N 个 T 类型的元素，是 ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"http://c.biancheng.net/cplus/",href:"http://c.biancheng.net/cplus/",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" C++ ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 本身提供的一种容器。 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3fc3b074"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 长度固定，不能增加或删除元素 ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub3b3f993"}},[s("span",{staticClass:"ne-text"},[t._v(" Y ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"u247140e2"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 向量容器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3519a885"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" vector<T> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua7fa52b6"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 长度可变，即在存储空间不足时，会自动申请更多的内存。 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3d143d96"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 尾部增删效率O(1) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u815ea9f8"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 其他位置增删效率O(n) ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue53db899"}},[s("span",{staticClass:"ne-text"},[t._v(" Y ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1b0b94ce"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 双端队列容器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9f473518"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" deque<T> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"u87c79e04"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 和 vector 相似，头部和尾部插入和删除元素都非常高效。 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"u79829722"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 头部尾部增删效率O(1) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2eaa0daa"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 其他位置增删效率O(n) ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud93a3a09"}},[s("span",{staticClass:"ne-text"},[t._v(" Y ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"uae0000fa"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 链表容器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1792c506"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" list<T> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"u619b5f61"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 长度可变，由 T 类型元素组成的序列，以双向链表形式组织元素 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue6253ea6"}},[s("span",{staticClass:"ne-text"},[t._v(" 任意位置增删效率O(1) ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"uae987944"}},[s("span",{staticClass:"ne-text"},[t._v(" N ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"u54b45609"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 正向链表容器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4377b343"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" forward_list<T> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9428c36"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 以单链表的形式组织元素，它内部的元素只能从第一个元素开始访问，比链表容器快、更节省内存。 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8db8a2f2"}},[s("span",{staticClass:"ne-text"},[t._v(" 任意位置增删效率O(1) ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc1c906a4"}},[s("span",{staticClass:"ne-text"},[t._v(" N ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf301a83b"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 堆栈 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u343d84ac"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" stack<T> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub372b29d"}},[s("span",{staticClass:"ne-text"},[t._v(" 在deque<T>的基础上形成，只能在尾部进行增加删除，实现先进后出 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub0928928"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 尾部增删效率O(1) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub124f6fd"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 其他位置不能增删 ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"udf4c3335"}},[s("span",{staticClass:"ne-text"},[t._v(" N ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"130"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc6a9f39c"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" 单向队列 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6e7f6397"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(0, 128, 0)","font-size":"14px"}},[t._v(" queue<T> ")])])]),s("td",{attrs:{width:"330"}},[s("p",{staticClass:"ne-p",attrs:{id:"u33c06797"}},[s("span",{staticClass:"ne-text"},[t._v(" 在deque<T>的基础上形成，只能在尾部新增，头部弹出，实现先进先出 ")])])]),s("td",{attrs:{width:"216"}},[s("p",{staticClass:"ne-p",attrs:{id:"u65a06606"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 尾部增加效率O(1)，头部弹出效率O(1)，其他位置不能增删 ")])])]),s("td",{attrs:{width:"80"}},[s("p",{staticClass:"ne-p",attrs:{id:"u86cab139"}},[s("span",{staticClass:"ne-text"},[t._v(" N ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u24db5402"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 关联式容器： ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ue22ff3e9"}},[s("span",{staticClass:"ne-text"},[t._v(" 关联式容器底层采用二叉树结构，更确切的说是红黑树结构，各元素之间没有严格的物理顺序关系。与序列容器不同，关联式容器在存储元素值的同时，还会为各元素额外再配备一个值（又称为“键”，其本质也是一个 C++ 基础数据类型或自定义类型的元素），它的功能是在使用关联式容器的过程中，如果已知目标元素的键的值，则直接通过该键就可以找到目标元素，而无需再通过遍历整个容器的方式。关联式容器可以快速查找、读取或者删除所存储的元素，同时该类型容器插入元素的效率也比序列式容器高。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u4728f068"}},[s("span",{staticClass:"ne-text"},[t._v(" 也就是说，使用关联式容器存储的元素，都是“键值对”（ <key,value> ），这是和序列式容器最大的不同。除此之外，序列式容器中存储的元素默认都是未经过排序的，而使用关联式容器存储的元素，默认会根据各元素的键值的大小做升序排序。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u10088f9a"}},[s("span",{staticClass:"ne-text"},[t._v(" 表8.3 关联式容器 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"744px","text-align":"center"},attrs:{border:"1",id:"w1Snf",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"122"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6d937590"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 关联式容器名称 ")])])]),s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"622"}},[s("p",{staticClass:"ne-p",attrs:{id:"u689baef3"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 特点 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"122"}},[s("p",{staticClass:"ne-p",attrs:{id:"u03610cee"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" map ")])])]),s("td",{attrs:{width:"622"}},[s("p",{staticClass:"ne-p",attrs:{id:"u73d95f72"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 定义在 <map> 头文件中，使用该容器存储的数据，其各个元素的键必须是唯一的（即不能重复），该容器会根据各元素键的大小，默认进行升序排序（调用 std::less<T>）。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"122"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue17aa354"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" set ")])])]),s("td",{attrs:{width:"622"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9dde3e32"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 定义在 <set> 头文件中，使用该容器存储的数据，各个元素键和值完全相同，且各个元素的值不能重复（保证了各元素键的唯一性）。该容器会自动根据各个元素的键（其实也就是元素值）的大小进行升序排序（调用 std::less<T>）。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"122"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud99c44a2"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" multimap ")])])]),s("td",{attrs:{width:"622"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua4de79f5"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 定义在 <map> 头文件中，和 map 容器唯一的不同在于，multimap 容器中存储元素的键可以重复。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"122"}},[s("p",{staticClass:"ne-p",attrs:{id:"u22e1bf33"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" multiset ")])])]),s("td",{attrs:{width:"622"}},[s("p",{staticClass:"ne-p",attrs:{id:"u36e8b6ef"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 定义在 <set> 头文件中，和 set 容器唯一的不同在于，multiset 容器中存储元素的值可以重复（一旦值重复，则意味着键也是重复的）。 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u26a95070"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 无序容器： ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u0c04f977"}},[s("span",{staticClass:"ne-text"},[t._v(' 无序容器只是一类容器的统称，仅是在前面提到的 4 种关联式容器名称的基础上，添加了 "unordered_"。关联式容器会对存储的键值进行排序，但是无序容器不会。如果涉及大量遍历容器的操作，建议首选关联式容器；反之，如果更多的操作是通过键获取对应的值，则应首选无序容器。因为无序容器底层采用hash结构，其随机获取键值对的性能为常量级，即O(1)。 ')])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ufa3f2d9f"}},[s("span",{staticClass:"ne-text"},[t._v(" 表8.4 无序容器 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"754px","text-align":"center"},attrs:{border:"1",id:"DrdE7",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"166"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9157a888"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 无序容器 ")])])]),s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"588"}},[s("p",{staticClass:"ne-p",attrs:{id:"u10900812"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 功能 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"166"}},[s("p",{staticClass:"ne-p",attrs:{id:"u093823a9"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" unordered_map ")])])]),s("td",{attrs:{width:"588"}},[s("p",{staticClass:"ne-p",attrs:{id:"u359868f5"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 存储键值对 <key, value> 类型的元素，其中各个键值对键的值不允许重复，且该容器中存储的键值对是无序的。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"166"}},[s("p",{staticClass:"ne-p",attrs:{id:"u34149751"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" unordered_multimap ")])])]),s("td",{attrs:{width:"588"}},[s("p",{staticClass:"ne-p",attrs:{id:"udb2241e6"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 和 unordered_map 唯一的区别在于，该容器允许存储多个键相同的键值对。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"166"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufe579de8"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" unordered_set ")])])]),s("td",{attrs:{width:"588"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9eff5ec"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 不再以键值对的形式存储数据，而是直接存储数据元素本身（当然也可以理解为，该容器存储的全部都是键 key 和值 value 相等的键值对，正因为它们相等，因此只存储 value 即可）。另外，该容器存储的元素不能重复，且容器内部存储的元素也是无序的。 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"166"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1aca7a02"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" unordered_multiset ")])])]),s("td",{attrs:{width:"588"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud1eb1656"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 和 unordered_set 唯一的区别在于，该容器允许存储值相同的元素。 ")])])])])])]),s("h3",{attrs:{id:"Y0XZc"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T821 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"hjl5u"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua7e4b6a0"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u6925104c"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7bd55a69"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf50417a5"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2cbe880c"}},[s("span",{staticClass:"ne-text"},[t._v(" T821 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua90c705e"}},[s("span",{staticClass:"ne-text"},[t._v(" 了解STL容器的分类 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u273a53a2"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1201e6fb"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#BPKTU",href:"#BPKTU"}},[s("span",{staticClass:"ne-text"},[t._v(" T823 ")])])])])])])]),s("h2",{attrs:{id:"LQGUv"}},[s("span",{staticClass:"ne-text"},[t._v(" 2.2 迭代器 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u291e3c76"}},[s("span",{staticClass:"ne-text"},[t._v(" 如前所述，不同容器内部结构各不相同，但它们都是用于存储大量数据。因此也都需要对数据进行大量的遍历操作。为了满足排序、查找、求和等通用算法的需求，需要将遍历操作与具体的存储结构分离开，因此就产生了迭代器。迭代器隐藏了不同存储结构的内部差异，具备对容器进行遍历读写数据的能力。迭代器是 C++ 程序中常用的一种设计模式，它最重要的作用是为访问容器提供了统一的接口。 "),s("br")]),s("span",{staticClass:"ne-text"},[t._v(" 迭代器的底层实际就是一个指针，通过迭代器可以指向容器中的某个元素。 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" *迭代器名 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 就表示迭代器指向的元素。通过非常量迭代器还能修改其指向的元素。但很多迭代器对指针进行了封装，其功能与原生指针相比受一定限制，不同容器的迭代器功能强弱程度也有所不同。主要分为前向迭代器、双向迭代器和随机访问迭代器。 ")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u18084171"}},[s("span",{staticClass:"ne-text"},[t._v(" 前向迭代器的功能被所有类型迭代器兼容，包括++操作，即一次前向移动一个位置；复制或赋值；还可以用 == 和 != 运算符进行比较。C++中采用begin()指向首元素，用end()指向尾后元素，即最后一个有效元素后面的元素。 ")])]),s("li",{attrs:{id:"uc3e83706"}},[s("span",{staticClass:"ne-text"},[t._v(" 双向迭代器比正向迭代器多支持一个 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" -- ")])]),s("span",{staticClass:"ne-text"},[t._v(" 操作，即一次后向移动一个位置。 ")])]),s("li",{attrs:{id:"u18a42b7c"}},[s("span",{staticClass:"ne-text"},[t._v(" 随机访问迭代器支持的功能最多，除了以上提到的功能，它还支持加上任意偏移量并得到新的迭代器；通过下标形式访问元素；用 <、>、<=、>= 运算符进行比较；另外，两个迭代器的减法操作表示二者所指向元素的序号之差。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udfcecb69"}},[s("span",{staticClass:"ne-text"},[t._v(" 表8.5 各容器支持的迭代器类型 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"750px","text-align":"center"},attrs:{border:"1",id:"KLd8C",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub3e70387"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 容器 ")])])]),s("td",{staticStyle:{"background-color":"rgb(237, 237, 237)"},attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u64ece421"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 对应的迭代器类型 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uefbecc30"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" array ")])])]),s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8264d89d"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}})]),s("p",{staticClass:"ne-p",attrs:{id:"u7a3056bd"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 随机访问迭代器 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ube0f2e2f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" vector ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf835d85a"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" deque ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u449e7240"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" list ")])])]),s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uaa2ed112"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}})]),s("p",{staticClass:"ne-p",attrs:{id:"u779e29f9"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 双向迭代器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"udab2670e"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}})])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"udfbbc933"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" set / multiset ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9d5b659f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" map / multimap ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u56a3cfc3"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" forward_list ")])])]),s("td",{attrs:{rowspan:"3",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u914484fb"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}})]),s("p",{staticClass:"ne-p",attrs:{id:"u561764a1"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 前向迭代器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u5ca057ef"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}})])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u61dfb781"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" unordered_map / unordered_multimap ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"udd9fd883"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" unordered_set / unordered_multiset ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1816b1d0"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" stack ")])])]),s("td",{attrs:{rowspan:"2",width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5c2938b4"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" 不支持迭代器 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u734449ab"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}})])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5f15b61f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(68, 68, 68)","font-size":"14px"}},[t._v(" queue ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u46fc7f04"}},[s("span",{staticClass:"ne-text"},[t._v(" array, vector和deque由于其存储的顺序性，可以将所有的指针存在在一个数组中，因此可以采用随机访问迭代器，其实就是具备了数组的通过偏移访问元素的能力，同时也就具备了指针间的减法操作和大小比较等功能； ")])]),s("li",{attrs:{id:"u4e81046b"}},[s("span",{staticClass:"ne-text"},[t._v(" list, set和map等容器的元素存储不具有顺序性，因此只能通过迭代方式进行访问，所以是双向迭代器； ")])]),s("li",{attrs:{id:"u6848773e"}},[s("span",{staticClass:"ne-text"},[t._v(" forward_list顾名思义，通过封装限制了反向遍历的能力，是为了保障特定算法的实现；哈希容器也支持了前向指针，单向迭代访问各个元素，无法通过偏移实现跳跃访问。 ")])]),s("li",{attrs:{id:"u0d21d333"}},[s("span",{staticClass:"ne-text"},[t._v(" stack的先进后出和queue的先进先出机制，只能访问栈顶或队列头部的元素，不允许出现遍历操作，因此不能支持迭代器，否则会破坏其固有的机制。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u594ce644"}},[s("span",{staticClass:"ne-text"},[t._v(" 迭代器从本质上就是一个指针，但是根据不同容器的特点，采用类封装的方式，对功能进行了限制。随机访问迭代器支持底层结构为数组的容器，借助数组空间连续分配，可以随机访问的特性，因此功能最全面。而双向迭代器和前向迭代器所支持的容器，每个元素的存储空间是不连续的，在一个元素中，通过指针间接访问下一个元素，因此只能依次遍历。也是因为其空间不连续性，因此迭代器的值和元素的顺序没有关系，不具有大小关系，也就是说，不能采用小于尾结点的方式进行终止判断，只能采用不等于尾结点的方式。这些功能都是通过类封装（知识点： ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#dNdcQ",href:"ch7#dNdcQ"}},[s("span",{staticClass:"ne-text"},[t._v(" T751 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ）和函数重载（知识点： ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#WLtg1",href:"ch7#WLtg1"}},[s("span",{staticClass:"ne-text"},[t._v(" T771 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ）实现的。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u5c8b3dae"}},[s("span",{staticClass:"ne-text"},[t._v(" 要特别注意，迭代器可能存在失效问题。失效的本质就是迭代器底层对应指针所指向的空间被销毁了，而使用一块被释放的空间会造成程序崩溃。任何底层空间改变的操作，都有可能导致迭代器失效，比如：resize, reserve, insert, erase, assign, push_back等。换句话说，这些操作都有可能导致容器空间的重新分配，因此原来的迭代器就会失效。解决的方式是在执行以上操作后，需要对迭代器进行重新赋值。 ")])]),s("h3",{attrs:{id:"BPKTU"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T822-T825 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"R2bkO"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9e33fae3"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5b48a073"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u31619472"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2701646e"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u396f0f1b"}},[s("span",{staticClass:"ne-text"},[t._v(" T822 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u66e4e40d"}},[s("span",{staticClass:"ne-text"},[t._v(" 迭代器是容器访问的主要方式，其本质就是通过类封装进行功能限定的指针 ")])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue160ad2d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#VjX61",href:"ch7#VjX61"}},[s("span",{staticClass:"ne-text"},[t._v(" T791 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8a532aa1"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#i9a97",href:"#i9a97"}},[s("span",{staticClass:"ne-text"},[t._v(" T831 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u83c253d8"}},[s("span",{staticClass:"ne-text"},[t._v(" T823 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc4717747"}},[s("span",{staticClass:"ne-text"},[t._v(" 能够清晰掌握不同类型迭代器和不同类型容器直接的对应关系，并理解造成这些异同的原因 ")])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud84d1b76"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#IS3uW",href:"ch6#IS3uW"}},[s("span",{staticClass:"ne-text"},[t._v(" T621 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#Y0XZc",href:"#Y0XZc"}},[s("span",{staticClass:"ne-text"},[t._v(" T821 ")])])])]),s("td",{attrs:{width:"67"}})]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4359b417"}},[s("span",{staticClass:"ne-text"},[t._v(" T824 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufaecc25c"}},[s("span",{staticClass:"ne-text"},[t._v(" 双向迭代器和前向迭代器只能逐个遍历元素，终止判断只能采用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" != ")])]),s("span",{staticClass:"ne-text"},[t._v(" 运算 ")])])]),s("td",{attrs:{width:"65"}}),s("td",{attrs:{width:"67"}})]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0b9684fe"}},[s("span",{staticClass:"ne-text"},[t._v(" T825 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9fa46516"}},[s("span",{staticClass:"ne-text"},[t._v(" resize, reserve, insert, erase, assign, push_back等底层空间操作都会造成空间重新分配，进而导致迭代器的失效，因此要对迭代器进行重新赋值 ")])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u437518a1"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#zTfai",href:"ch5#zTfai"}},[s("span",{staticClass:"ne-text"},[t._v(" T542 ")])])])]),s("td",{attrs:{width:"67"}})])])]),s("h1",{attrs:{id:"nCV7z"}},[s("span",{staticClass:"ne-text"},[t._v(" 3. 向量vector ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u86d3da24"}},[s("span",{staticClass:"ne-text"},[t._v(" STL中提供了模板数组array，用于优化原生数组的使用。与原生数组相比，模板数组更安全、更便利，这主要是因为array是一个类，通过重载操作符和一些访问控制函数，满足了更多的需求。例如在进行随机范围时，除了重载操作符[]通过下标访问之外，还提供了函数at进行下标访问，at在进行访问时会进行越界判断，使访问操作更加安全；此外，array还重载了赋值运算符和关系判断运算符，达成了原始数组无法达到的整体赋值和整体比较。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u8c13e110"}},[s("img",{staticClass:"ne-image",attrs:{id:"u3a19ce7d",src:a(1446),width:"334"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u5c6a85e5"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.1 模板数组array示例 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u8d2c9050"}},[s("span",{staticClass:"ne-text"},[t._v(" 数组的空间大小是固定的，很难按需申请，会造成空间的浪费。即使采用动态数组，当数据增长超过预留空间上限时，也需要重新全部申请空间。STL提供了向量vector类型，由头文件<vector>引入，其工作方式与数组类似，但是容量可以根据需要自动伸缩。与模板类array比较，vector更加灵活，但array的执行效率更高。在绝大部分情况下，vector和array的效率差可以被忽略，因此在需要使用array的场合，完全可以使用vector代替，array很少被使用。 ")])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"u974ef82a"}},[s("span",{staticClass:"ne-text"},[t._v(" vector在进行扩展时，并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u0a1552f7"}},[s("img",{staticClass:"ne-image",attrs:{id:"u085b3598",src:a(64),width:"399.3333333333333"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ude89ae9a"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.2 向量vector示例 ")])]),s("h2",{attrs:{id:"yhhga"}},[s("span",{staticClass:"ne-text"},[t._v(" 3.1 遍历 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ub6498a60"}},[s("span",{staticClass:"ne-text"},[t._v(" 以下的遍历方式适用于所有使用随机访问迭代器的容器，例如：vector, string等。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"rj8l8"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.4")]),t._v(" vector的遍历方式"),s("code",[t._v('#include <iostream>\n#include <vector> //需要引入 vector 头文件\nusing namespace std;\nint main()\n{\n    vector<int> v1(4);\t\t\t\t\t\t\t//创建长度为4的vector\n    for (size_t i = 0; i < v1.size(); i++)      //设定 values 容器为 {0,1,2,3}\n        v1.at(i) = i;\n    auto v2 = v1;\n    v2[2] = 1;\n    if (!v1.empty()) {      //如果容器不为空，则输出容器中所有的元素\n        for (auto it = v1.begin(); it < v1.end(); it++)\n            cout << *it << " ";\n    }\n    cout << endl;\n    for(auto e:v2)\n        cout << e << " ";\n    cout << endl;\n    for (auto it = v1.rbegin(); it < v1.rend(); it++) //使用反向迭代器遍历容器\n        cout << *it << " ";\n    cout << endl << boolalpha;\n    cout << (v1 == v2) << \'\\t\' << (v1 != v2)<< endl;\n    cout << (v1 > v2) << \'\\t\' << (v1 < v2)<< endl;\n}')])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"gq20e"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u62d6f17a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc128d1b6"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u27bf0ed7"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u519b979d"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 1 2 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2eab4be0"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 1 1 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9629f86f"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 2 1 0 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ufbf0eba9"}},[s("span",{staticClass:"ne-text"},[t._v(" false true ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uca18f638"}},[s("span",{staticClass:"ne-text"},[t._v(" true false ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"udfe2f923"}},[s("span",{staticClass:"ne-text"},[t._v(" 第6行定义了一个 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" vector ")])]),s("span",{staticClass:"ne-text"},[t._v(" 容器，长度为4，初始化为全0。默认初始化为0的操作是原生数组不具备的。 ")])]),s("li",{attrs:{id:"u77f7879b"}},[s("span",{staticClass:"ne-text"},[t._v(" 第7行用传统的下标形式访问 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" vector ")])]),s("span",{staticClass:"ne-text"},[t._v(" 容器，注意这里下标数据类型为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" size_t ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，它在64位系统中为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" long unsigned int ")])]),s("span",{staticClass:"ne-text"},[t._v(" （占用8字节的内存空间），在需要通过数组下标来访问数组时，通常建议将下标定义 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" size_t ")])]),s("span",{staticClass:"ne-text"},[t._v(" 类型。 ")])]),s("li",{attrs:{id:"u62458d4f"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" at ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数进行下标访问，与 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" v1[i]=i; ")])]),s("span",{staticClass:"ne-text"},[t._v(" 功能相同，但是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" at() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数进行下标越界判定，更加安全。第10行采用了操作符 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 形式访问元素。 ")])])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"ub7a33a23"}},[s("span",{staticClass:"ne-text"},[t._v(" 虽然at()函数更加安全，但是毕竟有代价消耗。对于能确保访问不发生越界的情况，使用操作符 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 效率更高。 ")])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uf7357c98"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行实现了数组的整体赋值，这是原生数组无法完成的。 ")])]),s("li",{attrs:{id:"u1957a8fb"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11行用判定容器是否为空，它与 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" v1.size()==0 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 功能相同，但 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" empty() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数的效率更高，优先使用。 ")])]),s("li",{attrs:{id:"u53f11a8a"}},[s("span",{staticClass:"ne-text"},[t._v(" 第12-13行用迭代器的方式遍历容器。由于每种容器的遍历方式都不相同，但是迭代器可以封装遍历过程，统一了遍历操作，进一步可以将容器和算法进行粘合。变量it就是一个迭代器，设定为auto类型，根据begin()函数的返回值自动设定为迭代器类型。begin()返回第一个元素的指针，end()返回最后一个元素的下一个指针，注意不是最后一个元素的指针，因此迭代器构建了一个左闭右开的区间，即包括begin()指向的元素，但是不包括end()指向的元素。因为迭代器返回的是指针，所以第13行用迭代器访问元素时用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" * ")])]),s("span",{staticClass:"ne-text"},[t._v(" 获取对应位置的值。vector采用随机访问迭代器，可以使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" ++ ")])]),s("span",{staticClass:"ne-text"},[t._v(" 或 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" -- ")])]),s("span",{staticClass:"ne-text"},[t._v(" 操作进行前向或后向遍历。 ")])]),s("li",{attrs:{id:"ude93f63b"}},[s("span",{staticClass:"ne-text"},[t._v(" 第16-17行展示了遍历容器的第三种方式。 ")])]),s("li",{attrs:{id:"u6372c6b7"}},[s("span",{staticClass:"ne-text"},[t._v(" 第19-20行通过反向迭代器从尾部向头部依次遍历所有元素，注意反向迭代器中 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" ++ ")])]),s("span",{staticClass:"ne-text"},[t._v(" 表示向前移动。begin()和end()表示正向迭代，rbegin()和rend()表示反向迭代，cbegin(),cend()，crbegin()和crend()表示迭代的元素是const，不可修改。 ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"ue3c60208"}},[s("img",{staticClass:"ne-image",attrs:{id:"cVOJg",src:a(6416),width:"821"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u60a3a522"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.3 正向迭代器和反向迭代器 ")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u83685be1"}},[s("span",{staticClass:"ne-text"},[t._v(" 第21行的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" boolalpha ")])]),s("span",{staticClass:"ne-text"},[t._v(" 是为了让下面两行的 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" bool ")])]),s("span",{staticClass:"ne-text"},[t._v(" 类型输出结果显示 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true/false ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，而不是1/0。 ")])]),s("li",{attrs:{id:"u234982b2"}},[s("span",{staticClass:"ne-text"},[t._v(" 第22-23行验证了 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" vector ")])]),s("span",{staticClass:"ne-text"},[t._v(" 容器可以进行整体比较。比较采用字典序，从第0个元素开始比较，如果对应元素相等，进行下一个位置元素的比较，如果不相等，两个对应元素的大小关系就直接作为两个容器的大小关系。 ")])])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"uefecb6bf"}},[s("span",{staticClass:"ne-text"},[t._v(" STL的容器在很多操作上都是统一的，因此以上代码中的很多部分都可以使用到其他容器上。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u396caae7"}},[s("span",{staticClass:"ne-text"},[t._v(" string类型原始的获取长度函数为length()，就是为了和STL的其他容器兼容，因此添加了完全相同功能的size()函数，确保string类型也能采用STL的算法完成。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2626e18b"}},[s("span",{staticClass:"ne-text"},[t._v(" 在实际使用时，array很少被使用，常用vector代替，因为vector和array性能相近，而且更加灵活。 ")])])]),s("h3",{attrs:{id:"i9a97"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T831 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"UFYdm"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1f76ad26"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4b93bb61"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u24030393"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u00adba13"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1a8b9c84"}},[s("span",{staticClass:"ne-text"},[t._v(" T831 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8565cfd5"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握容器遍历的方式，empty是最高效的容器判定为空的方法 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1bc8d401"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#BPKTU",href:"#BPKTU"}},[s("span",{staticClass:"ne-text"},[t._v(" T822 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u29662a11"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8054633a"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" （LX822） ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"L4SnJ"}},[s("span",{staticClass:"ne-text"},[t._v(" 3.2 vector的典型操作 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"YOftZ"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.5")]),t._v(" vector基本操作"),s("code",[t._v("#include<iostream>\n#include<vector>\n#include<algorithm>                  //for_each和copy\n#include<iterator>                   //ostream_iterator\nusing namespace std;\nint main()\n{\n    vector<char> v;                  //初始化一个空vector容量\n    string s = \"LTSA\";\n    for(auto e:string(\"LTSA\")) v.emplace_back(e);     //或 v.assign(s.begin(), s.end());\n    cout << v.size() << endl;       //容器中的元素个数\n    v.pop_back();\n    for (auto it = v.rbegin(); it < v.rend(); it++) //使用反向迭代器遍历容器\n        cout << *it << \" \";\n    cout << endl;\n    cout << v.at(0) <<'\\t'<<v.front()<<'\\t'<<v.back()<< endl;\n    v.emplace(v.begin()+1, 'C');    //在距离首元素偏移为1的位置插入新字符，也可以使用insert\n    for_each(v.begin(), v.end(), [](auto &elem) { cout << elem << ' '; });\n    cout << endl;\n    v.erase(v.begin() + 2);          //删除距离首元素偏移为2的元素\n    copy(v.begin(), v.end(), ostream_iterator<char>(cout, \" \"));\n    return 0;\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"WOlbO"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u34542709"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufbdab275"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uedb0837d"}},[s("span",{staticClass:"ne-text"},[t._v(" （无） ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9ccf4971"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3a26c57d"}},[s("span",{staticClass:"ne-text"},[t._v(" S T L ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8f3f3c23"}},[s("span",{staticClass:"ne-text"},[t._v(" L L S ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u588bfc69"}},[s("span",{staticClass:"ne-text"},[t._v(" L C T S ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u128188f8"}},[s("span",{staticClass:"ne-text"},[t._v(" L C S ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u5c0e2315"}},[s("span",{staticClass:"ne-text"},[t._v(" 第8行构建了一个向量vector容器，第10行依次将4个字符插入到容器的尾部，也可以采用assign的方式，直接将字符串转换为vector。第12行从尾部移除一个元素。 ")])])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"u2df35d69"}},[s("span",{staticClass:"ne-text"},[t._v(" 注意这里使用string类型，如果直接使用字符串“LTSA”，是C风格字符串，该字符串以字符'\\0'结尾，将会是5个字符。string类型不存在字符'\\0'。 ")])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u1a197366"}},[s("span",{staticClass:"ne-text"},[t._v(" 第16行通过at(0)或front()函数访问首元素，用back()访问尾元素。 ")])]),s("li",{attrs:{id:"ue27c6d54"}},[s("span",{staticClass:"ne-text"},[t._v(" 第17行在距离首元素偏移为1的位置插入新字符，第20行删除距离首元素偏移为2的元素。 ")])]),s("li",{attrs:{id:"u2eb48b10"}},[s("span",{staticClass:"ne-text"},[t._v(" 第18行调用了算法for_each，它包含在头文件<algorithm>中，原型为for_each(iter1,iter2,op)，iter1和iter2指定了迭代器的开始和结束范围，op是一个函数，其作用是将迭代器中遍历的每个元素作为参数输入并进行处理。第18行中的op是一个匿名函数，将每个元素进行输出。当需要对一个容器某个区域的所有元素做相同的函数处理时，就可以使用for_each函数完成。 ")])]),s("li",{attrs:{id:"uabfae266"}},[s("span",{staticClass:"ne-text"},[t._v(" 第20行调用erase函数删除指定位置上的字符，它还有一个函数原型 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" iterator erase (const_iterator first, const_iterator last) ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，用于删除指定范围内的所有字符。在头文件<algorithm>中，还有一个删除函数remove，用于删除指定范围内特定的字符。需要特别说明的是，erase在删除后容器的长度会发生改变，但remove只是逻辑删除，容器的长度不变。 ")])]),s("li",{attrs:{id:"u01ef6567"}},[s("span",{staticClass:"ne-text"},[t._v(" 第21行使用了输出流迭代器ostream_iterator，它包含在头文件<iterator>中，第一个参数指定输出流，第二个参数指定分隔符，第21行指定的分隔符是空格。 ")])]),s("li",{attrs:{id:"u86972236"}},[s("span",{staticClass:"ne-text"},[t._v(" 第21行调用了算法copy，它的前两个参数指出被复制的元素的区间范围，第三个参数指出复制到的目标区间起始位置。当需要将一个容器的某个区域的元素复制到另外一个容器的指定区域时，即可以调用copy函数完成。第21行将v从begin()到end()的所有元素复制到标准输出流cout构建的迭代器中，并且以空格分隔，这样就将全部元素显示出来。 ")])]),s("li",{attrs:{id:"u9ec88147"}},[s("span",{staticClass:"ne-text"},[t._v(" 第17行的emplace可以替换为insert，第10行的emplace_back可以替换为push_back。emplace方法是C++11新提出来的用法。无论是insert还是push_back都是先创建对象，再将对象移动到指定位置，而emplace方法直接在指定位置创建对象，因此效率较高。 ")])])]),s("h3",{attrs:{id:"eOdZZ"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习8.1 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"u16e1a9de"}},[s("span",{staticClass:"ne-text"},[t._v(" 输入一个超大的正整数n，n≤10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 30 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，将n逐位保存到一个整型vector中。 ")])]),s("h3",{attrs:{id:"ucMFa"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T832 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"SAeZj"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue758a52b"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ud00aa365"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8edff308"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf9e62442"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc2b3fcdc"}},[s("span",{staticClass:"ne-text"},[t._v(" T832 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uceb41216"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握向量vector的典型操作，这是STL中最常用的容器 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue3d93adc"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#eRcMx",href:"#eRcMx"}},[s("span",{staticClass:"ne-text"},[t._v(" T541 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ueefab684"}},[s("br")])])])])]),s("h2",{attrs:{id:"HhNID"}},[s("span",{staticClass:"ne-text"},[t._v(" 3.3 查找重复元素 ")])]),s("h3",{attrs:{id:"MIQlr"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题 8.1 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u18adb985"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" 找出数组中重复的数字。在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 ")]),s("span",{staticClass:"ne-text"},[t._v(" （剑指offer） ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"mqC2X"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u904c55e3"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucc6302cc"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufd8d0139"}},[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1af45c75"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 5 4 5 3 4 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua5a72bf4"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"ue542babf"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(77, 77, 77)","font-size":"16px"}},[t._v(" 【题目解析】可以 ")]),s("span",{staticClass:"ne-text"},[t._v(" sort排序后，遍历数组，前面的值和后面的值相等即为答案。排序的时间复杂度为O(nLog ")]),s("sub",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" n)。可以采用打表法，将时间复杂度降为O(n)。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"O5y2f"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.6")]),t._v(" 查找重复元素"),s("code",[t._v("#include <iostream>\n#include <vector>\nusing namespace std;\nclass Solution {\npublic:\n    int findRepeatNumber(vector<int>& nums) {\n        vector<int> ret(nums.size(),0);\n        for(auto e:nums)\n        {\n            if(ret[e]!=0)  return e;\n            ret[e]++;\n        }\n        return 0;\n    }\n};\n\nint main ()\n{\n    Solution s;\n    size_t n;\n    cin >> n;\n    vector<int> nums(n);\n    for (size_t i = 0;i<n;++i){\n        cin >> nums[i];\n    }\n    cout << s.findRepeatNumber(nums) << endl;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ubdf2ecc8"}},[s("span",{staticClass:"ne-text"},[t._v(" 题目中保证输入的每个数字都小于n，因此第7行建立了一个vector，用来记录每个数出现的次数。初始化长度与nums相同，初始值全部为0。与原始数组相比，vector可以将初始值设定为任意值。由这个题目可以看出，vector的使用比原始数组更方便，掌握STL后，完全可以用vector代替原始数组。 ")])]),s("li",{attrs:{id:"u2f251f97"}},[s("span",{staticClass:"ne-text"},[t._v(" 第22行初始化时，使用小括号定义长度为n，这是在调用vector的构造函数。注意这里不能使用中括号，使用时要区分与原始数组的机理不同。 ")])])]),s("h3",{attrs:{id:"cOtOt"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T833 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"J7YEh"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u33154f86"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"527"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u2db718e0"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"102"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua13ef823"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uad8cc17e"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua37d119c"}},[s("span",{staticClass:"ne-text"},[t._v(" T833 ")])])]),s("td",{attrs:{width:"527"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3a61bb19"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握使用vector代替原生数组，理解vector比原生数组的易用性 ")])])]),s("td",{attrs:{width:"102"}},[s("p",{staticClass:"ne-p",attrs:{id:"u52663764"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#bDkij",href:"ch5#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1f3a15c2"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u481ada2d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX801) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX814) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h1",{attrs:{id:"EZsP7"}},[s("span",{staticClass:"ne-text"},[t._v(" 4. 高级应用 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u31ed2a1f"}},[s("span",{staticClass:"ne-text"},[t._v(" 向量vector和字符串string是最常见的两种容器，结合迭代器和算法，可以形成一些非常方便的应用。 ")])]),s("h2",{attrs:{id:"NTR6E"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.1 降序排序 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ud4490176"}},[s("span",{staticClass:"ne-text"},[t._v(" sort函数默认是采用升序排序，第五章提到可以将升序排序的结果调用reverse函数，形成降序。结合迭代器或仿函数，可以直接进行降序排序。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"Gwiaa"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.7")]),t._v(" 降序排序"),s("code",[t._v("#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nint main ()\n{\n   size_t n;\n    cin>>n;\n    vector<int> nums(n);\n    for (size_t i = 0;i<n;++i){\n        cin>>nums[i];\n    }\n    sort(nums.rbegin(),nums.rend());//或sort(nums.begin(),nums.end(),greater<int>());\n    for (size_t i = 0;i<n;++i){\n        cout<<nums[i]<<' ';\n    }\n}")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"co9iT"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u064ad3d4"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3268b6f8"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u82b5756f"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u80d6868c"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 5 1 7 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u10e4d70d"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 5 3 1 ")])])])])])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u850147da"}},[s("span",{staticClass:"ne-text"},[t._v(" 排序时采用反向迭代器，利用rbegin和rend两个函数，其中的大小比较与前向迭代正好相反，因此可以形成逆序效果。 ")])]),s("li",{attrs:{id:"u62418745"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14行注释的结果，是将仿函数greater作为比较器，大的元素在前，因此也可以达到降序的目的。 ")])])]),s("h3",{attrs:{id:"j6bkK"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T841 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"SKHj5"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u39c64533"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u3735b40c"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4dc602f5"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2444ed3f"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u66666496"}},[s("span",{staticClass:"ne-text"},[t._v(" T841 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4b44cf70"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握逆序排序的方法 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uca2a7998"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#i9a97",href:"#i9a97"}},[s("span",{staticClass:"ne-text"},[t._v(" T831 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0b40e6ec"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua90bb163"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX823) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX818) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"j8VkO"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.2 全部删除指定元素 ")])]),s("h3",{attrs:{id:"LNdNn"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.2 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"u4e589748"}},[s("span",{staticClass:"ne-text"}),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 据说2011年11月11日是百年光棍节。这个日期写成字符串是“20111111”，有6个1连续出现，小明把这样的字符串（有6个1连续出现，但可以在1之间有空格间隔）叫做光棍串，即“2011 11 11”也是光棍串。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u299d9e94"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"uee00027f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 输入数据的第一行为一个正整数T，表示测试数据的组数。然后是T组测试数据，每组测试输入1个字符串S（其中只包含空格与数字字符，长度不超过50个字符）。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u5c226690"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"u1309f09d"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 对于每组测试，若S是光棍串，则输出“Yes”，否则输出“No”。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"zLx5J"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u139627f2"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u536d75de"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"udaf31639"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3a3309ac"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" 2011111 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u75ad4352"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" 2011 11 11 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ued08d11f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" No ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u73b4434e"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" Yes ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"uda35951e"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uee65dfbd"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 简单分析题目，就是在字符串中查找是否存在6个1的子串，通过find就可以完成。题目的难度在于可能存在干扰的空格。将所有的空格去除掉，题目就变得简单了。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"wWC0E"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.8")]),t._v(" 删除所有空格"),s("code",[t._v('#include <iostream>\n#include <bits/stdc++.h>\n\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    cin.ignore();\n    string s;\n    while(n--){\n        getline(cin,s);   \n        auto it = remove(s.begin(),s.end(),\' \');\n        s.resize(it-s.begin());\n        //s.erase(remove(s.begin(),s.end(),\' \'),s.end());\n        size_t pos = s.find("111111");\n        cout<<(pos==-1?"No":"Yes")<<endl;\n    }\n    return 0;\n}')])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ued4b0f61"}},[s("span",{staticClass:"ne-text"},[t._v(" 函数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" remove ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的前两个参数指定删除范围，第三个参数为希望删除的字符。特别注意它的返回值，是一个迭代器，指向所有保留元素后的下一个位置。 ")])]),s("li",{attrs:{id:"u122c05c3"}},[s("span",{staticClass:"ne-text"},[t._v(" 第13行调用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" remove ")])]),s("span",{staticClass:"ne-text"},[t._v(" 后，返回第一个无效字符位置。用这个位置减去 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" begin ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，就得到了有效字符的长度。第14行 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" resize ")])]),s("span",{staticClass:"ne-text"},[t._v(" 只保留有效字符，达到了删除的目的。 ")])]),s("li",{attrs:{id:"u02c472f3"}},[s("span",{staticClass:"ne-text"},[t._v(" 同样道理，第15行将无效部分删除，也达到了目的，函数嵌套的写法请仔细观察。其中 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" erase ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的第一个参数不是函数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" remove ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，而是函数 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" remove ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的返回值。 ")])]),s("li",{attrs:{id:"ub882d033"}},[s("span",{staticClass:"ne-text"},[t._v(" 如果不是删除无效元素，而是将无效元素全部置为空格，可以采用如下语句 ")])])]),s("ul",{staticClass:"ne-list-wrap"},[s("ul",{staticClass:"ne-ul",attrs:{"ne-level":"1"}},[s("li",{attrs:{id:"u661e32a5"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" fill(remove(s.begin(),s.end(),' '),s.end(),' '); ")])])])])]),s("h3",{attrs:{id:"kYcFw"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T842 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"j2rk9"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2f36249e"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"udcf9683c"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u11800f6b"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"uca1718d2"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"udfb7a90d"}},[s("span",{staticClass:"ne-text"},[t._v(" T842 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5a2d513b"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握全部删除指定元素的方法 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u54a743f2"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#eRcMx",href:"#eRcMx"}},[s("span",{staticClass:"ne-text"},[t._v(" T541 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3a1ae55b"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u488783d5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX804) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX6) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"Hf7IG"}},[s("span",{staticClass:"ne-text"},[t._v(" 4.3 for_each算法* ")])]),s("h3",{attrs:{id:"YRWmj"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.3 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left","text-indent":"2em"},attrs:{id:"u0da74a38"}},[s("span",{staticClass:"ne-text"},[t._v(" 要求编写程序，将英文字母替换加密。为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。例如，字母a->B、b->C、…、z->A、A->b、B->c、…、Z->a。输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"xaEal"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2acfb77b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9dc788fe"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u573a0665"}},[s("span",{staticClass:"ne-text"},[t._v(" Reold Z123? ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3509b3c6"}},[s("span",{staticClass:"ne-text"},[t._v(" sFPME a123? ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u6d4d9827"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1bb31e1f"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 采用简单循环可以达成目标。使用<algorithm>库中 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" for_each ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 算法，可以对容器中的每个元素做相同的处理。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"RYPog"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.9")]),t._v(" 英文字母加密"),s("code",[t._v("#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nvoid encode(char& ch)\n{\n    if(ch=='Z')\n        ch='a';\n    else if(ch=='z')\n        ch='A';\n    else if(islower(ch))\n        ch=char(toupper(ch)+1);\n    else if(isupper(ch))\n        ch=char(tolower(ch)+1);\n}\nint main()\n{\n    string s;\n    getline(cin,s);\n    for_each(s.begin(),s.end(),encode);\n    cout<<s;\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u582fd26f"}},[s("span",{staticClass:"ne-text"},[t._v(" 第20行采用for_each函数，将容器指定范围内的所有元素都调用encode函数进行处理。为了得到处理后的结果，第5行的形参是采用引用形式。 ")])]),s("li",{attrs:{id:"uf11b9881"}},[s("span",{staticClass:"ne-text"},[t._v(" 这种把函数做为另一个函数参数的形式，是一种高级调用形式。本质上传递是函数的指针。sort的第三个参数比较函数，也是采用相同的方法。这样函数不仅能把数据进行抽象，还能把行为进行抽象。这种形式在Python等语言中非常常见。 ")])])]),s("h3",{attrs:{id:"zKGII"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T843 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"CqS0A"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0ea0aa47"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4cd23e30"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua9a0f337"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u38b29581"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uff731383"}},[s("span",{staticClass:"ne-text"},[t._v(" T843 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufb7814a4"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握for_each算法，了解把一个函数作为另外一个函数参数的形式 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6e66b9f6"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u67a3a9db"}},[s("br")])])])])]),s("h1",{attrs:{id:"bUYYy"}},[s("span",{staticClass:"ne-text"},[t._v(" 5. 堆栈stack ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1298da54"}},[s("span",{staticClass:"ne-text"},[t._v(" 堆栈stack是先进后出的数据结构，在程序设计时使用比较广泛。它只能在尾部添加或删除，其他位置的元素不能进行增删操作。栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为。与queue类似，只有简单的push(), pop(), top(), empty(), size()对外接口。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud7e9b8ae"}},[s("img",{staticClass:"ne-image",attrs:{id:"u87681a0a",src:a(4221),width:"324.65625"}})]),s("p",{staticClass:"ne-p",attrs:{id:"u031b876a"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.4堆栈示例 ")])]),s("h3",{attrs:{id:"AouR5"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u412610b9"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。有效字符串需满足：1）左括号必须用相同类型的右括号闭合。2）左括号必须以正确的顺序闭合。（ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 力扣20题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"FKUat"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc73c7da1"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc00c42f7"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue2d265d9"}},[s("span",{staticClass:"ne-text"},[t._v(" ()[]{} ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7f36c871"}},[s("span",{staticClass:"ne-text"},[t._v(" true ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u328bcb94"}},[s("span",{staticClass:"ne-text"},[t._v(" ([)] ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud3e93eac"}},[s("span",{staticClass:"ne-text"},[t._v(" false ")])])])])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"yL9xc"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.10")]),t._v(" 判断括号是否匹配"),s("code",[t._v("#include <iostream>\n#include <stack>\nusing namespace std;\nclass Solution {\npublic:\n    bool isValid(string s) {\n        stack<char> st;\n        for(auto e:s){\n            if(e=='('||e=='['||e=='{')\n                st.push(e);\n            else if(!st.empty()&&abs(e-st.top())<=2)\t//有效括号对的ASCII码值不超过2\n                st.pop();\n            else\n                return false;\n        }\n        return st.empty();      \t\t\t\t\t\t//左括号有残留\n   } \n};\nint main ()\n{\n    Solution s;\n    string str;\n    cin >> str;\n    cout <<boolalpha<< s.isValid(str) << endl;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ub2d7521c"}},[s("span",{staticClass:"ne-text"},[t._v(" 遍历字符串，当遇到左括号时，将其压入堆栈。当遇到有括号时，堆栈的顶部应该正好与其匹配，如果不匹配或者堆栈为空，则括号序列错误。 ")])]),s("li",{attrs:{id:"uec71fa19"}},[s("span",{staticClass:"ne-text"},[t._v(" 当字符串遍历结束时，堆栈应该为空，否则意味着有残留的左括号未找到匹配的右括号。 ")])])]),s("h3",{attrs:{id:"BlTTv"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T851 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"wFDUi"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u722579f9"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"515"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u1d7d2709"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u982997cf"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue3f43a27"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8e6024b3"}},[s("span",{staticClass:"ne-text"},[t._v(" T851 ")])])]),s("td",{attrs:{width:"515"}},[s("p",{staticClass:"ne-p",attrs:{id:"u02cdb11f"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握堆栈stack的用法，学会堆栈增删元素的特点，主要解决匹配问题 ")])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u58834ca6"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#wG8i3",href:"ch2#wG8i3"}},[s("span",{staticClass:"ne-text"},[t._v(" T241 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#QAfJZ",href:"ch3#QAfJZ"}},[s("span",{staticClass:"ne-text"},[t._v(" T341 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u47ff1fdb"}},[s("br")])])])])]),s("h1",{attrs:{id:"YXtaV"}},[s("span",{staticClass:"ne-text"},[t._v(" 6. 其他典型序列容器* ")])]),s("h2",{attrs:{id:"ZmQjd"}},[s("span",{staticClass:"ne-text"},[t._v(" 6.1 双向队列deque ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u76f31686"}},[s("span",{staticClass:"ne-text"},[t._v(" 双向队列deque的绝大部分操作都与vector相同，但是可以在两端进行增删操作。vector对于头部的插入删除效率低，数据量越大，效率越低。deque相对而言，对头部的插入删除速度比vector快。vector访问元素时的速度会比deque快,这和两者内部实现有关。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7ca2e824"}},[s("img",{staticClass:"ne-image",attrs:{id:"Gg63D",src:a(7349),width:"510"}})]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"justify"},attrs:{id:"uf76789a2"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.5 双向队列示例 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u7931f9ab"}},[s("span",{staticClass:"ne-text"},[t._v(" deque内部有个中控器，维护每段缓冲区中的内容，缓冲区中存放真实数据。中控器维护的是每个缓冲区的地址，使得使用deque时像一片连续的内存空间。deque支持随机访问。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u570b258d"}},[s("img",{staticClass:"ne-image",attrs:{id:"u93de3889",src:a(8327),width:"486"}})]),s("p",{staticClass:"ne-p",attrs:{id:"ubce2ad6e"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.6 deque中控器和缓冲器 ")])]),s("h3",{attrs:{id:"pW8UQ"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.5 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ua53e8baf"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。返回滑动窗口中的最大值 。（ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://leetcode.cn/problems/sliding-window-maximum/",href:"https://leetcode.cn/problems/sliding-window-maximum/",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 力扣239题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"Sv0pP"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub0942b10"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf681d8c5"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue022313b"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [1,3,-1,-3,5,3,6,7], k = 3 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9917f270"}},[s("span",{staticClass:"ne-text"},[t._v(" [3,3,5,5,6,7] ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"2",width:"750"}},[s("p",{staticClass:"ne-p",attrs:{id:"uff3d8c95"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例解释 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"2",width:"750"}},[s("p",{staticClass:"ne-p",attrs:{id:"uffb959f5"}},[s("span",{staticClass:"ne-text"},[t._v(" 滑动窗口的位置 最大值 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uad53568f"}},[s("span",{staticClass:"ne-text"},[t._v(" [1 3 -1] -3 5 3 6 7 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua459e823"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 [3 -1 -3] 5 3 6 7 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u440e6aa1"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 3 [-1 -3 5] 3 6 7 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u22090e76"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 3 -1 [-3 5 3] 6 7 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7b53d836"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 3 -1 -3 [5 3 6] 7 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc39dd709"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 3 -1 -3 5 [3 6 7] 7 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"ua4d05753"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2d0aef08"}},[s("span",{staticClass:"ne-text"},[t._v(" 1）建立一个滑动窗口，将窗口内最大值的下标保存在窗口最前端，并忽略数组中滑动窗口范围内左侧的所有值，因为这些值在窗口继续滑动中不可能成为最大值。每次用O(1)的时间获取这个最大值。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u22d55bcd"}},[s("span",{staticClass:"ne-text"},[t._v(" 2）窗口中要保留下标，而不是具体的值，因为值会 ")]),s("em",[s("span",{staticClass:"ne-text"},[t._v(" 失效 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。用i表示当前元素下标，用sub表示窗口首部的下标，当i-sub>=k时，sub就不再当前窗口之中了，移出队列。 这一步保证了窗口内的所有值都处于同一窗口。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua2d88d61"}},[s("span",{staticClass:"ne-text"},[t._v(" 3）当有新元素来的时候，如果新元素大于窗尾的值，则利用循环，将所有小于这个数的值pop出去，因为所有值都处于同一窗口，小于当前元素的值已经失效，这一步保证了窗口的值最大。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u85dd774f"}},[s("span",{staticClass:"ne-text"},[t._v(" 4）当滑动窗口装满时，才能计算最大值。 当 i+1>=k时表示正好装满，在此之后才能开始计算。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"bkm5a"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.11")]),t._v(" 滑动窗口的最大值"),s("code",[t._v('class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, size_t k) {\n        vector<int> ret;\n        deque<int> qe;\n        if(nums.empty())     return ret;\n        for(size_t i=0;i<nums.size();i++) {\n            //新来的元素>队列之中的元素，说明最大值发生了变化\n            while(!qe.empty()&&nums[i]>=nums[qe.back()])\n                qe.pop_back();\n            //窗口之中保存的是下标\n            //i-qe.front()>=k，说明这个元素不在窗口之中了\n            while(!qe.empty()&&i-qe.front()>=k)\n                qe.pop_front();\n            qe.push_back(i);//将下标存入数组中，因为要比较元素是否"过期"\n            if(i+1>=k)//经过的元素可以满足一个窗口了\n                ret.push_back(nums[qe.front()]);\n        }\n        return ret;\n    }\n};')])]),s("h3",{attrs:{id:"pyqMT"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T861 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"bF9cQ"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9211d3a7"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u9a2df881"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u53f1b3d3"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1b4216af"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufab59e09"}},[s("span",{staticClass:"ne-text"},[t._v(" T861 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua8704f4d"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握双向队列deque的用法，主要解决在算法中需要设定滑动窗口的问题 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua3724efe"}},[s("br")])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u94122fca"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#z5syf",href:"#z5syf"}},[s("span",{staticClass:"ne-text"},[t._v(" T862 ")])])])])])])]),s("h2",{attrs:{id:"rzfqq"}},[s("span",{staticClass:"ne-text"},[t._v(" 6.2 单向队列queue ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u87b4029b"}},[s("span",{staticClass:"ne-text"},[t._v(" 单向队列queue是在双向队列deque基础上完成的，如果只需要一端增加，另一端删除时，建议采用queue。队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为。只有简单的push(), pop(), back(), front(), empty(), size()对外接口。如果没有特殊要求，也可以使用deque代替queue。 ")])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"uf87d79eb"}},[s("span",{staticClass:"ne-text"},[t._v(" 注意queue的在尾部添加函数为push()，在头部删除函为pop()，因为它只有一个push和一个pop操作，这与deque需要区分头部和尾部不同。 ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"ua2e73846"}},[s("img",{staticClass:"ne-image",attrs:{id:"cDom5",src:a(2483),width:"431"}})]),s("p",{staticClass:"ne-p",attrs:{id:"u8a9fd237"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.7 单向队列示例 ")])]),s("h3",{attrs:{id:"aE9F5"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u20f80c90"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个字符串 s ，请你找出其中不含有重复字符的最长子串的长度。（ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://leetcode.cn/problems/longest-substring-without-repeating-characters/",href:"https://leetcode.cn/problems/longest-substring-without-repeating-characters/",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 力扣3题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"SMJSc"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6bbe8379"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2bfa6ead"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u04b582c8"}},[s("span",{staticClass:"ne-text"},[t._v(" akgekwelkrjlkjfkasdfashdfkladfald ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u84b0eda8"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"ub71c15fd"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】给定一个滑动窗口和标记数组，利用标记数组确定字符是否在窗口中出现过。如果字符没有出现过则添加到滑动窗口之中；如果出现了，则将已出现的字符左侧的所有字符移出滑动窗口。重复这个过程，记录能找到的滑动窗口的最大长度。从样例输入中可以看到，ashdfkl是最长不包含重复字符的子字符串。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"HGNXE"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.12")]),t._v(" 不含有重复字符的最长子串的长度"),s("code",[t._v("class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        queue<char>de;//滑动窗口\n        vector<bool> arr(200,false);      //统计数组\n        size_t maxsize=0;                       //记录最长的长度\n        for(size_t i=0;i<s.size();i++){\n            if(arr[s[i]]){                      //表示不是第一次出现    \n                maxsize=max(maxsize,de.size()); //先将最长的长度保存下来\n                while(arr[s[i]]){               //不为false说明还有重复字符\n                    arr[de.front()]=false;      //标记数组对应的字符为清除状态\n                    de.pop();     \t\t\t\t//删掉\n                }\n            }\n            //此时说明删掉了开始部分重复的字符串，或新出现的字符没有出现过，直接进入滑动窗口\n            de.push(s[i]);\n            arr[s[i]]=true;                  \t//标记数组，表示出现过\n        }\n        maxsize=max(maxsize,de.size());\n        return maxsize;\n    }\n};")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u5ac9f736"}},[s("span",{staticClass:"ne-text"},[t._v(" 第10-13行的循环，将滑动窗口中已存在的重复字符的左侧的所有字符移出滑动窗口。从滑动窗口构建的队列的队首开始移除，移除后第10行的循环重新开始判断，是否存在重复，如果存在重复则继续移除，直到全部移除，开始添加新的字符。 ")])])]),s("h3",{attrs:{id:"z5syf"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T862 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"MWt2X"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufbbbcbc8"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua9768a5e"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u81a58afc"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u77869162"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf772a23c"}},[s("span",{staticClass:"ne-text"},[t._v(" T862 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uab7afb96"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握单向队列deque的用法，主要解决在算法中需要设定滑动窗口的问题 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue3cf9958"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#pyqMT",href:"#pyqMT"}},[s("span",{staticClass:"ne-text"},[t._v(" T861 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u506509d6"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"u63aba985"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX819) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX824) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"agupy"}},[s("span",{staticClass:"ne-text"},[t._v(" 6.3 链表list ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u66ea456c"}},[s("span",{staticClass:"ne-text"},[t._v(" 链表list是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现。由一系列结点组成。每个节点包含两个域：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。STL中的链表是一个双向循环链表，正向链表容器forward_list是单向链表，只能从前向后访问。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2a82027b"}},[s("img",{staticClass:"ne-image",attrs:{id:"udfd1e15a",src:a(4747),width:"554"}})]),s("p",{staticClass:"ne-p",attrs:{id:"ube1165bf"}},[s("span",{staticClass:"ne-text"},[t._v(" 图8.8 链表示例 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u4520fa57"}},[s("span",{staticClass:"ne-text"},[t._v(" 由于链表的存储方式并不是连续的内存空间，因此链表list中的迭代器只支持前移和后移，属于双向迭代器。优点：1）采用动态存储分配，不会造成内存浪费和溢出；2）链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素。缺点：1）链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大；2）List有一个重要的性质，插入操作和删除操作都不会造成原有list迭代器的失效，这在vector是不成立的。 ")])]),s("h3",{attrs:{id:"MwRYt"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.7 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u70a786ce"}},[s("em",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" n ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" 个人围成一圈，从第一个人开始报数,数到 m 的人出列，再由下一个人重新从1开始报数，数到 m ")]),s("em",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}})]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" 的人再出圈，依次类推，直到所有的人都出圈，请输出依次出圈人的编号。（洛谷 ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.luogu.com.cn/problem/P1996",href:"https://www.luogu.com.cn/problem/P1996",target:"_blank"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" P1996 ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" ） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8293c9e9"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uff57374a"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" 输入两个整数 n,m。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u41674062"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uade24e05"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" 输出一行 n ")]),s("em",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}})]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(0, 0, 0, 0.75)","font-size":"16px"}},[t._v(" 个整数，按顺序输出每个出圈人的编号。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"wzBsD"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucfe8da39"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u44e6169e"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u01b5d555"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 3 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1b63a23c"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 6 9 2 7 1 8 5 10 4 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u8ce5d390"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua6d97770"}},[s("span",{staticClass:"ne-text"},[t._v(" 最重要的是形成一个环，然后能在任意位置形成高效的删除操作。list正好符合这样的要求。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"AJH9V"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.13")]),t._v(" 约瑟夫环问题"),s("code",[t._v("#include<iostream>\n#include<list>\nusing namespace std;\nint main(){\n    int m,n;\n    cin>>m>>n;\n    list<int> ls;\n    for(int i=0;i<m;i++)\n        ls.push_back(i+1);\t\t\t//构建初始的list\n    auto it=ls.begin();\n    int i=0;\n    while(!ls.empty()){\n        i = (i+1)%n;\n        auto next=++it;\t\t\t\t//备份下一个节点的迭代器\n        if(!i) {\n            cout<<*(--it)<<' ';\t\t//返回要删除的节点并输出\n            ls.erase(it);\t\t\t//删除节点，迭代器it失效\n        }\n        it = next;\t\t\t\t\t//返回到下一个节点\n        if(it==ls.end())\t\t\t//形成循环访问\n            it=ls.begin();\n    }\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u4920e578"}},[s("span",{staticClass:"ne-text"},[t._v(" 第13行以n为循环进行叠加，第15行判断找到符合要求的数据，则进行删除。 ")])]),s("li",{attrs:{id:"u9fc9cf8a"}},[s("span",{staticClass:"ne-text"},[t._v(" 特别注意在第14行对it进行了备份，因为一旦在第17行执行了删除操作，将会造成迭代器 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" it ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的失效， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" it ")])]),s("span",{staticClass:"ne-text"},[t._v(" 不再具有遍历能力。 ")])]),s("li",{attrs:{id:"u8a245559"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14行不能写成 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" next=it+1 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，因为list不支持随机访问迭代器，即不支持偏移功能，只支持++操作。因此在第14行进行++，找到下一个节点，然后在第16行执行--操作，回到要删除的节点。 ")])]),s("li",{attrs:{id:"u89fc2125"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14行与第19行配合，相当与执行了++操作，然后在第20-21行，判定如果执行到了尾部，重新回到头部，形成循环访问。 ")])]),s("li",{attrs:{id:"u77a52821"}},[s("span",{staticClass:"ne-text"},[t._v(" 这是一个典型的list访问案例，展示了list的遍历和删除节点操作，同时要特别注意迭代器失效问题。 ")])])]),s("h3",{attrs:{id:"GquqL"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.8 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0d9a3ccc"}},[s("span",{staticClass:"ne-text"},[t._v(" 写一个程序完成以下命令： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc930f91b"}},[s("span",{staticClass:"ne-text"},[t._v(" new id ——新建一个指定编号为id的序列(id<10000) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u00a6e292"}},[s("span",{staticClass:"ne-text"},[t._v(" add id num——向编号为id的序列加入整数num ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u124f645c"}},[s("span",{staticClass:"ne-text"},[t._v(" merge id1 id2——合并序列id1和id2中的数，并将id2清空 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u33058aa0"}},[s("span",{staticClass:"ne-text"},[t._v(" unique id——去掉序列id中重复的元素 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1b073dcf"}},[s("span",{staticClass:"ne-text"},[t._v(" out id ——从小到大输出编号为id的序列中的元素，以空格隔开。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc43a92e7"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入描述】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8728236c"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一行一个数n，表示有多少个命令( n≤200000)。以后n行每行一个命令。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uac4971f8"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出描述】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u026dd17f"}},[s("span",{staticClass:"ne-text"},[t._v(" 按题目要求输出。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0362e60d"}},[s("span",{staticClass:"ne-text"},[t._v(" （ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://blog.csdn.net/qq_44116998/article/details/104419169",href:"https://blog.csdn.net/qq_44116998/article/details/104419169",target:"_blank"}},[s("span",{staticClass:"ne-text",staticStyle:{"font-size":"16px"}},[t._v(" 北大程序设计与算法（三）测验题汇总(2020春季) ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"H8OhL"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2398f599"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua63243de"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uca0dfeb3"}},[s("span",{staticClass:"ne-text"},[t._v(" 16 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc69a31cd"}},[s("span",{staticClass:"ne-text"},[t._v(" new 1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u677de113"}},[s("span",{staticClass:"ne-text"},[t._v(" new 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4810d9d1"}},[s("span",{staticClass:"ne-text"},[t._v(" add 1 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud5321a38"}},[s("span",{staticClass:"ne-text"},[t._v(" add 1 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1a28dac9"}},[s("span",{staticClass:"ne-text"},[t._v(" add 1 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u69038a11"}},[s("span",{staticClass:"ne-text"},[t._v(" add 2 3 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub6e42d8d"}},[s("span",{staticClass:"ne-text"},[t._v(" add 2 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9dbe4119"}},[s("span",{staticClass:"ne-text"},[t._v(" add 2 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u127bc8ac"}},[s("span",{staticClass:"ne-text"},[t._v(" add 2 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u94631091"}},[s("span",{staticClass:"ne-text"},[t._v(" out 1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uccc3ed52"}},[s("span",{staticClass:"ne-text"},[t._v(" out 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uc7d3f210"}},[s("span",{staticClass:"ne-text"},[t._v(" merge 1 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8fe33106"}},[s("span",{staticClass:"ne-text"},[t._v(" out 1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u53eb51f8"}},[s("span",{staticClass:"ne-text"},[t._v(" out 2 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue8e64e8b"}},[s("span",{staticClass:"ne-text"},[t._v(" unique 1 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u2e1508ea"}},[s("span",{staticClass:"ne-text"},[t._v(" out 1 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u876ed06e"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 3 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u36456cf4"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 3 4 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua6a19c1a"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 2 3 3 4 4 5 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue35efe1d"}},[s("span",{staticClass:"ne-text"})]),s("p",{staticClass:"ne-p",attrs:{id:"u79cc5e12"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 3 4 5 ")])])])])])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"DCoCq"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.14")]),t._v(" 链表执行命令"),s("code",[t._v("#include<iostream>\n#include<list>\n#include<algorithm>     //find_if\n#include<iterator>      //ostream_iterator\nusing namespace std;\n\nint main()\n{\n\tlist<int> ls[10005];\n\tint n,id1,id2, num;\n\tcin >> n;\n\tchar str[100];\n\twhile(n--){\n\t\tcin >> str;\n        if(str[0]=='a'){\n            cin >> id1 >> num;\n            auto it=find_if(ls[id1].begin(),ls[id1].end(),[&num](int v) {return v>num;});\n            ls[id1].insert(it,num);\n        }else if(str[0]=='n'){\n            cin >> id1; \n        }else if(str[0]=='m'){\n\t\t\tcin >> id1 >> id2;\n\t\t\tls[id1].merge(ls[id2]);         //合并的两个序列必须有序\n        }else if(str[0]=='u'){\n\t\t\tcin >>id1;\n\t\t\tls[id1].unique ();               //唯一化处理前，list必须有序\n        }else if(str[0]=='o'){\n\t\t\tcin >> id1;\n            copy(ls[id1].begin(), ls[id1].end(), ostream_iterator<int>(cout,\" \"));\n\t\t\tcout << endl;\n        }\n    }\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u3f7300a7"}},[s("span",{staticClass:"ne-text"},[t._v(" 第17-18行先找到插入位置，然后进行插入，实际上实现了插入法排序。find_if是STL的<algorithm>头文件中提供的一个算法，它在指定容器的范围内（前两个参数决定），查找满足第三个参数规定条件的元素迭代器位置。第18行在该位置插入元素。匿名函数从指定范围内第一个大于输入值的元素，保证了指定序列的递增性。 ")])]),s("li",{attrs:{id:"u0ae7da38"}},[s("span",{staticClass:"ne-text"},[t._v(" 注意第17行的匿名函数中，使用了 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [&num] ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，表示引用局部变量 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" num ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。也可也使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [&] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 表示引用当前范围内的任何变量， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [num] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 通过传值方式使用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" num ")])]),s("span",{staticClass:"ne-text"},[t._v(" ， ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" [=] ")])]),s("span",{staticClass:"ne-text"},[t._v(" 通过传值方式使用当前范围内的任意变量。 ")])]),s("li",{attrs:{id:"uf1fc5b1e"}},[s("span",{staticClass:"ne-text"},[t._v(" list的合并函数merge()和去重函数unique()都要求list是有序的，因为在添加新元素时保证了有序性，因此在这两步操作之前都不需要排序。 ")])]),s("li",{attrs:{id:"u27fd2375"}},[s("span",{staticClass:"ne-text"},[t._v(" 在进行命令判断时，因为每个命令的第一个字符正好不同，字符判断的效率要高于字符串，因此只取了首字符进行判断。 ")])]),s("li",{attrs:{id:"u6bb93e92"}},[s("span",{staticClass:"ne-text"},[t._v(" 第9行创建了list的数组，数组中的每个元素都是一个list。 ")])]),s("li",{attrs:{id:"ub64647b9"}},[s("span",{staticClass:"ne-text"},[t._v(" insert(),merge()和unique()都需要对中间元素进行插入和删除操作，list用其特有的数据结构保证了算法的有效性。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u9b702e16"}},[s("span",{staticClass:"ne-text"},[t._v(" 在STL中，算法大量的使用了仿函数，仿函数（Functor）又称为函数对象（Function Object）是一个能行使函数功能的类。仿函数本质上就是通过重载运算符()，将一个类对象按照函数形式进行访问，其使用方法与普通函数相同。以下定义了一个仿函数comp： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"k2Wy1"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.15")]),t._v(" 仿函数示例"),s("code",[t._v("class comp\n{\npublic:\n    comp(int t):num(t){}//显式构造函数\n    //const放前面表示这个函数的返回值是不可修改的，放后面表示这个函数不修改当前对象的成员。\n    bool operator()(int v) const{\n        return v>num;\n    }\nprivate:\n    const int num;\n};")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u0869d4e0"}},[s("span",{staticClass:"ne-text"},[t._v(" 第4行的num(t)表示用形参t对成员属性num进行初始化。 ")])]),s("li",{attrs:{id:"uf1368274"}},[s("span",{staticClass:"ne-text"},[t._v(" 第6-8行重载了操作符()，使comp的对象能够像函数一样被调用。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u3e9c9b10"}},[s("span",{staticClass:"ne-text"},[t._v(" 有了这个仿函数之后，代码8.TODO的第17行就可以修改为： ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"uN9cQ"}},[t._v("auto it=find_if(ls[id1].begin(),ls[id1].end(),comp(num));")]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uc5c3200d"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" find_if() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的第三个参数应该是一个函数，对前两个参数指定范围内的每个元素进行判定。这里传入了一个仿函数对象，并将成员属性进行初始化。 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" find_if() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数对其进行使用时，实际上是调用了仿函数重载的操作符 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" () ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，从而达到了调用函数的效果。 ")])])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"uf9856935"}},[s("span",{staticClass:"ne-text"},[t._v(" 从这个例子中也可以看到仿函数的作用，如果不使用匿名函数，而是使用普遍函数，由于 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" find_if() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的要求，该函数只能有一个参数，约束变量num无法传入，可以将num设定为全局变量，这样会导致数据的组织混乱。而仿函数通过构造函数将额外使用的数据通过构造函数传递给成员属性，操作符 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" () ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的函数体中就可以更加灵活的设置，而成员属性被约束在类的使用范围内，不会导致数据的组织混乱。 ")])]),s("h3",{attrs:{id:"mM2Dg"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T863 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"jfnK0"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"udacd434b"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc2f01194"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uef7db88a"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u774500d9"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u44673f5d"}},[s("span",{staticClass:"ne-text"},[t._v(" T863 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u61c8a8c2"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握链表list的用法，这是一个典型的节点空间不连续容器，迭代器终止判断不能用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" > ")])]),s("span",{staticClass:"ne-text"},[t._v(" 或 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" < ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，只能用 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" != ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubfb99afa"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#VjX61",href:"ch7#VjX61"}},[s("span",{staticClass:"ne-text"},[t._v(" T791 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u54d55755"}},[s("br")])])])])]),s("h1",{attrs:{id:"wJ10H"}},[s("span",{staticClass:"ne-text"},[t._v(" 7 字典 ")])]),s("h2",{attrs:{id:"SGdMn"}},[s("span",{staticClass:"ne-text"},[t._v(" 7.1 关联容器字典map ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ua1a73e6e"}},[s("span",{staticClass:"ne-text"},[t._v(" 字典map是关联容器的典型代表，所有元素都是键值对，在C++中用pair实现。pair中第一个元素是first，作为key（键值），起到索引作用，第二个元素为second，作为value（实值），所有元素都会根据元素的键值自动排序，可以根据key值快速找到value值。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ua99babd7"}},[s("span",{staticClass:"ne-text"},[t._v(" map属于关联式容器，底层结构是用红黑树实现，查找复杂度为O( ")]),s("span",{staticClass:"ne-math",attrs:{id:"SOEhZ"}},[s("img",{attrs:{src:a(1790)}})]),s("span",{staticClass:"ne-text"},[t._v(" )，其中nbison元素的数量。 ")])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"uabccb829"}},[s("span",{staticClass:"ne-text"},[t._v(" 在数组一章获知，打表法是一种高效方法，用空间换时间，快速定位，减少搜索。打表法相当于用下标做键进行快速定位，但是如果使用的有效下标是稀疏的（即在一个较大范围里，只有少量下标被使用），或者所需要的键不是整型时，可以采用map实现打表法。只有有效的键才会出现在map中，减少了空间的浪费。并且map是按照键自动排序的，对有顺序要求的题目非常有用。 ")])])]),s("h3",{attrs:{id:"ZAq0N"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.9 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4067a641"}},[s("span",{staticClass:"ne-text"},[t._v(" 有 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" n ")])]),s("span",{staticClass:"ne-text"},[t._v(" 根可以忽视粗细的棒子。第 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" 棒的长度是 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" a ")]),s("sub",[s("span",{staticClass:"ne-text"},[t._v(" i ")])])]),s("span",{staticClass:"ne-text"},[t._v(" 。 有人想从这些棒子中选出4个棒子，用这些棒子做1个矩形(包括正方形)。 求最大可以制作的矩形面积。（2022年青岛市程序设计竞赛试题小学组真题） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u777fe1c3"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输入格式 】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u7e0c9615"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一行数量n。 第二行n个棒子的长度。4≤n≤10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ,1≤a ")]),s("sub",[s("span",{staticClass:"ne-text"},[t._v(" i ")])]),s("span",{staticClass:"ne-text"},[t._v(" ≤10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"u4bbf5b9c"}},[s("span",{staticClass:"ne-text"},[t._v(" 【输出格式】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u59bd0eb4"}},[s("span",{staticClass:"ne-text"},[t._v(" 最大矩形面积，如果无法组成矩形，输出0。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"y1jXP"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4e6c0e9c"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u954fa9df"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u40940cb6"}},[s("span",{staticClass:"ne-text"},[t._v(" 6 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua772b949"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 1 2 4 2 1 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7470a536"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8069faad"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub8fd6ec6"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 3 3 3 4 4 4 5 5 5 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u67939961"}},[s("span",{staticClass:"ne-text"},[t._v(" 20 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uba479891"}},[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1d8ee60c"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 2 3 4 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uad682aed"}},[s("span",{staticClass:"ne-text"},[t._v(" 0 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u8f2fd023"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】从题目描述看，最佳方案应该是打表法，列出每种长度的棒子的数量，然后从大到小，找到最佳符合要求的棒子组成举行。但是题目给定的棒子长度的数值访问过大，容易造成内存不足，而且遍历所有长度的耗时也非常巨大。进一步查看题目，因为棒子的总数量相对比较小，可以采用map记录存在的棒子，这样键的总量就会大幅减少，map是按照键值从小到大排序的，因此从尾部寻找符合要求的棒子组成矩形即可。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"NXA6n"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.16")]),t._v(" 求最大可以制作的矩形面积"),s("code",[t._v("#include <iostream>\n#include <map>\nusing namespace std;\nint main ()\n{\n    map<int,int> a;\n    int n;\n    cin>>n;\n    for(int i=0;i<n;++i){\n        int val;\n        cin>>val;\n        if(a.count(val))\n        {   if(a[val]<4)   a[val]++; }\n        else\n            a[val]=1;\t\t\t\t//或写为a.insert(pair<int,int>(val,1));\n    }\n    int l1=0;\n    for(auto rit=a.rbegin();rit!=a.rend();rit++){\n        if(rit->second>=2 && l1>0){              //当前棒子数量大于2，并且找到过一对棒子\n            cout<<l1*rit->first<<endl;\n            return 0;\n        }else if(rit->second>=4)                 //当前棒子数量大于4，直接构建方形\n        {\n            cout<<rit->first*rit->first<<endl;\n            return 0;\n        }else if(rit->second>=2 && l1==0){       //找到一对棒子，记录并寻找下一对棒子\n            l1 = rit->first;\n        }\n    }\n    cout<<0<<endl;                               //没有找到合适的棒子构成矩形\n    return 0;\n}")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"uf8eb855e"}},[s("span",{staticClass:"ne-text"},[t._v(" 第12行首先通过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" count() ")])]),s("span",{staticClass:"ne-text"},[t._v(" 函数判断键是否存在，返回1或0。如果存在则加1，否则设置为初值1。根据题目描述，棒子数量超过4即可满足要求，因此当大于4时没有必须继续累加。 ")])]),s("li",{attrs:{id:"u4d039be3"}},[s("span",{staticClass:"ne-text"},[t._v(" 第18行的循环逆序遍历map，因为迭代器书写比较复杂，所以auto自动构建数据类型书写更方便，而且可以减少语法关键词的记忆。 ")])])]),s("h3",{attrs:{id:"cR2Bd"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T871 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"ep52y"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u289ec800"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uc7a4716b"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua6ce4b85"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1602e60b"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue12809df"}},[s("span",{staticClass:"ne-text"},[t._v(" T871 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2630dcef"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握关联容器字典map的用法。可以认为这是打表法的高级用法，当数据量比较大但是比较稀疏时，可以用字典代替打表法 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6904c6de"}},[s("span",{staticClass:"ne-text"},[t._v(" 注意map的键是从小到大天然排序的 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc77abb6d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#bDkij",href:"ch5#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6bc68414"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7d0255f4"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX801) ")])]),s("span",{staticClass:"ne-text"})])]),s("td",{attrs:{width:"70"}}),s("td",{attrs:{width:"67"}})])])]),s("h2",{attrs:{id:"IOOHN"}},[s("span",{staticClass:"ne-text"},[t._v(" 7.2 无序容器字典unordered_map ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ucf7a680e"}},[s("span",{staticClass:"ne-text"},[t._v(" 无序容器与关联容器的最大区别在于：关联容器底层采用红黑树，其所有元素按照键进行排序，当需要进行有序遍历时，非常用用；无序容器底层采用的是哈希表，当需要进行随机访问某个键时，访问速度为常量级，即O(1)，当需要频繁进行快速定位时，无序容器就显示出了它的效率优势。 ")])]),s("h3",{attrs:{id:"hpXsy"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.10 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8e33739d"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出和为目标值 target的那两个整数，并返回它们的数组下标。假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。可以按任意顺序返回答案。（ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 力扣1题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u0e256143"}},[s("span",{staticClass:"ne-text"},[t._v(" 【接口声明】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uee9b1a18"}},[s("span",{staticClass:"ne-text"},[t._v(" vector<int> twoSum(vector<int>& nums, int target) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ua00fcefd"}},[s("span",{staticClass:"ne-text"},[t._v(" 【数据范围】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u8ad30d3d"}},[s("span",{staticClass:"ne-text"},[t._v(" 2 ≤ nums.length ≤10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 4 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，-10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ≤nums[i] ≤10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ，-10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ≤target ≤10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])])]),s("p",{staticClass:"ne-p",attrs:{id:"u97a04722"}},[s("span",{staticClass:"ne-text"},[t._v(" 只会存在一个有效答案 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"n9j3b"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u313e9502"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua9536d91"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5d64ab70"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [2,7,11,15], target = 9 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf319e3d1"}},[s("span",{staticClass:"ne-text"},[t._v(" [0,1] ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uab9d92b6"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [3,2,4], target = 6 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u44dad994"}},[s("span",{staticClass:"ne-text"},[t._v(" [1,2] ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9fbce5a"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [3,3], target = 6 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1d52dacb"}},[s("span",{staticClass:"ne-text"},[t._v(" [0,1] ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u0e2dc613"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】这是力扣的第1题，看似非常简单。用嵌套循环遍历所有组合的可能性，找到符合要求的答案进行输出即可，时间复杂度为O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )。实际上对于任意给定的值v，需要快速确定target-v是否存在，即v对于target的互补数是否存在。打表法可以完成这个任务需求。但2*10 ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 9 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 的数值范围否决了开辟如此大空间的数组可行性。基于哈希表的unordered_map就发挥了它的作用。nums.length的数值范围决定了键的数量不会太多，哈希map既可以类似打表法中数组的快速定位，也可以避免无效空间的浪费。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"wp2aF"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.17")]),t._v(" 找出和为目标的整数"),s("code",[t._v("class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        unordered_map<int,size_t> m;\n        for (size_t i = 0; i < nums.size();++i)\n            m[nums[i]] = i;\t\t\t\t\t\t//反向记录第i个数值对应的下标\n        for (auto it1 = nums.begin(); it1 < nums.end() - 1; it1++)\n        {\n            if (m.count(target - *it1))\t\t\t//若存在互补数\n            {\n                int first = it1 - nums.begin();\t//当前数的序号\n                int second = m[target - *it1];\t//互补数的序号\n                if(first!=second){\t\t\t\t//如果不是同一个元素\n                    return {first,second};\t\t//用两个元素初始化构建一个列表\n                }\n            }\n        }\n        return vector<int>();//返回一个空的vector，保证语法正确，本题保证不会执行到这里\n    }\n};")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ubd12bbcc"}},[s("span",{staticClass:"ne-text"},[t._v(" 从力扣的解题记录中可以可以看到，基于暴力穷举的方法耗时为92ms，而基于unordered_map的方法耗时为8ms，十几倍的速度差显示了unordered_map在快速定位上的效率优势。利用哈希表的特点，第9行的快速定位的时间复杂度为O(1)，这样就将暴力穷举的时间复杂度O(n ")]),s("sup",[s("span",{staticClass:"ne-text"},[t._v(" 2 ")])]),s("span",{staticClass:"ne-text"},[t._v(" )降为O(n)O(1)=O(n)。 ")])]),s("li",{attrs:{id:"u188e22ca"}},[s("span",{staticClass:"ne-text"},[t._v(" 第5-6行以vector的值为键，以下标为值反向构建unordered_map，第9行判定目标值是否存在，利用了unordered_map的快速定位功能。如果找到目标值且不是同一个元素（第13行），则返回答案。 ")])]),s("li",{attrs:{id:"u24ad1fcf"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11行是将迭代器指针转换为序号的常用方法。 ")])]),s("li",{attrs:{id:"ufcb5d654"}},[s("span",{staticClass:"ne-text"},[t._v(" 第14行的大括号是对vector进行初始化的方式，借助这种方式，与返回类型搭配使用，构建一个新的vector返回。 ")])]),s("li",{attrs:{id:"ucc719b1f"}},[s("span",{staticClass:"ne-text"},[t._v(" 因为题目保证了一定有解，因此第18行是不会被执行的。但是从程序设计的角度，所有路径都必须有返回值，因此第18行必须存在。这一行也可以简写为 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" return {}; ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。 ")])])]),s("div",{staticClass:"ne-quote"},[s("p",{staticClass:"ne-p",attrs:{id:"ufa2b9c62"}},[s("span",{staticClass:"ne-text"},[t._v(" 很多文献上使用哈希map时使用头文件<hash_map>中的hash_map，这是一个非标准库，正确方式应该使用头文件<unordered_map>中的unordered_map。 ")])])]),s("h3",{attrs:{id:"jxNPL"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T872 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"g6dTs"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uefa19cb8"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u9f1be56e"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u72a19960"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5598679c"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6d98c1c2"}},[s("span",{staticClass:"ne-text"},[t._v(" T872 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7330e0d3"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握无序容器的用法，重点掌握利用unordered_map构建大且稀疏数据的打表法 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua0f7978a"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#bDkij",href:"ch5#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub517b6c1"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3defd62d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX801) ")])]),s("span",{staticClass:"ne-text"})])]),s("td",{attrs:{width:"70"}}),s("td",{attrs:{width:"67"}})])])]),s("h2",{attrs:{id:"EdSqb"}},[s("span",{staticClass:"ne-text"},[t._v(" 7.3 无序容器字典unordered_set ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"ua9600562"}},[s("span",{staticClass:"ne-text"},[t._v(" 可以认为字典是一种下标为任意类型的特殊数组，因为字典可以遍历，因此可以和循环联动，简化书写。 ")])]),s("h3",{attrs:{id:"FO3kF"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.11 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uabc3ef9c"}},[s("span",{staticClass:"ne-text"},[t._v(" 给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个 不同的索引 i 和 j ，满足 nums[i] == nums[j] 且 abs(i - j) <= k 。如果存在，返回 true ；否则，返回 false 。（ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 力扣219题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"uf60d4b14"}},[s("span",{staticClass:"ne-text"},[t._v(" 【接口声明】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ub669db11"}},[s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" bool containsNearbyDuplicate(vector<int>& nums, int k) ")])]),s("span",{staticClass:"ne-text"})]),s("p",{staticClass:"ne-p",attrs:{id:"u850472a8"}},[s("span",{staticClass:"ne-text"},[t._v(" 【数据范围】 ")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"udf50c237"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"13px"}},[t._v(" 1 <= nums.length <= 10 ")]),s("sup",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"12px"}},[t._v(" 5 ")])])]),s("li",{attrs:{id:"u1f87ee0a"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"13px"}},[t._v(" -10 ")]),s("sup",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"12px"}},[t._v(" 9 ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"13px"}},[t._v(" <= nums[i] <= 10 ")]),s("sup",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"12px"}},[t._v(" 9 ")])])]),s("li",{attrs:{id:"u92609df4"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"13px"}},[t._v(" 0 <= k <= 10 ")]),s("sup",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgba(var(--grey-7-rgb),1)","font-size":"12px"}},[t._v(" 5 ")])])])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"FHxMd"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucb4cd583"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5f999755"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u13e6f7f7"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [1,2,3,1], k = 3 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uda772353"}},[s("span",{staticClass:"ne-text"},[t._v(" true ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ueb160759"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [1,0,1,1], k = 1 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ueed98c9f"}},[s("span",{staticClass:"ne-text"},[t._v(" true ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf94d1141"}},[s("span",{staticClass:"ne-text"},[t._v(" nums = [1,2,3,1,2,3], k = 2 ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u795dab5b"}},[s("span",{staticClass:"ne-text"},[t._v(" false ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u22d81690"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】这是力扣的第219题，可以通过暴力解决，但效率比较低。以下引入滑动窗口的概念，只在长度为k的范围内进行查找，并且利用哈希表查找复杂度为O(1)的特点，加快查找的效率。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"okF7N"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.18")]),t._v(" 多重判断解决方案"),s("code",[t._v("class Solution {\npublic:\n    bool containsNearbyDuplicate(vector<int>& nums, int k) {\n        unordered_set<int> s;\n        for (int i = 0; i < nums.size(); i++) {\n            if (i > k) {\n                s.erase(nums[i - k - 1]);\t\t//删除超过距离k的元素\n            }\n            if (s.count(nums[i])) {\t\t\t\t//哈希查找\n                return true;\n            }\n            s.emplace(nums[i]);\t\t\t\t\t//添加新元素\n        }\n        return false;\n    }\n};")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"u04b29c11"}},[s("span",{staticClass:"ne-text"},[t._v(" 这是一个非常奇妙并且高效的解法。建立了一个 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" unordered_set ")])]),s("span",{staticClass:"ne-text"},[t._v(" 对象，其中只保留 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" k ")])]),s("span",{staticClass:"ne-text"},[t._v(" 个元素，相当于一个 ")]),s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 滑动窗口 ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。当距离超过 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" k ")])]),s("span",{staticClass:"ne-text"},[t._v(" 时，将元素从窗口中删除，第12行将新元素添加到窗口中。第9行利用哈希O(1)的复杂度进行判断是否存在。如果存在则返回 ")]),s("code",{staticClass:"ne-code"},[s("span",{staticClass:"ne-text"},[t._v(" true ")])]),s("span",{staticClass:"ne-text"},[t._v(" 。整个算法的时间复杂度为O(n)。 ")])])]),s("h3",{attrs:{id:"Yve1p"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T873 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"VQLtQ"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u53831e8d"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u370e0693"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4a33de2a"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud85d8824"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0e1dec2a"}},[s("span",{staticClass:"ne-text"},[t._v(" T873 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"uff46b348"}},[s("span",{staticClass:"ne-text"},[t._v(" 重点掌握利用unordered_set构建滑动窗口，理解哈希表查找复杂度为O(1)的特性，利用这一特性，可以代替数组的打表法，尤其对稀疏或非数值数据具有良好的效果。 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8f5d44b5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#bDkij",href:"ch5#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"u17992f24"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{colspan:"3",width:"696"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue6a7495a"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX821) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX801) ")])]),s("span",{staticClass:"ne-text"}),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX814) ")])]),s("span",{staticClass:"ne-text"})])])])])]),s("h2",{attrs:{id:"wmBGH"}},[s("span",{staticClass:"ne-text"},[t._v(" 7.4 字典与循环的联动 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u737fec1f"}},[s("span",{staticClass:"ne-text"},[t._v(" 可以认为字典是一种下标为任意类型的特殊数组，因为字典可以遍历，因此可以和循环联动，简化书写。 ")])]),s("h3",{attrs:{id:"uk7XO"}},[s("span",{staticClass:"ne-text"},[t._v(" 例题8.12 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u87ca6add"}},[s("span",{staticClass:"ne-text"},[t._v(" 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"702px","text-align":"center"},attrs:{border:"1",id:"Rgum2",align:"center"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2e484c2a"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1bd032ff"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"49"}},[s("p",{staticClass:"ne-p",attrs:{id:"ucdda6aac"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf141ba48"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"49"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7bbbda00"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud28ab4c9"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"uba0eb1da"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufc02017f"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf5f1cd77"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8539ee51"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9dcac37c"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"u422ea58c"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",attrs:{id:"uf608460f"}},[s("span",{staticClass:"ne-text"},[t._v(" 字符 ")])])]),s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub9115e78"}},[s("span",{staticClass:"ne-text"},[t._v(" 数值 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u97bd0b36"}},[s("span",{staticClass:"ne-text"},[t._v(" I ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u527d1871"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"49"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u9127025c"}},[s("span",{staticClass:"ne-text"},[t._v(" V ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u3bb44440"}},[s("span",{staticClass:"ne-text"},[t._v(" 5 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"49"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u99dac573"}},[s("span",{staticClass:"ne-text"},[t._v(" X ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uf1f2f62e"}},[s("span",{staticClass:"ne-text"},[t._v(" 10 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u4ba41eb4"}},[s("span",{staticClass:"ne-text"},[t._v(" L ")])])]),s("td",{attrs:{width:"49"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"uae3d54ef"}},[s("span",{staticClass:"ne-text"},[t._v(" 50 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub71da46b"}},[s("span",{staticClass:"ne-text"},[t._v(" C ")])])]),s("td",{attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u9dc4b1ad"}},[s("span",{staticClass:"ne-text"},[t._v(" 100 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u7e6dd648"}},[s("span",{staticClass:"ne-text"},[t._v(" D ")])])]),s("td",{attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u25b0fc4c"}},[s("span",{staticClass:"ne-text"},[t._v(" 500 ")])])]),s("td",{staticStyle:{"background-color":"#FBE4E7"},attrs:{width:"50"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ub8b578aa"}},[s("span",{staticClass:"ne-text"},[t._v(" M ")])])]),s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"u5bd7d138"}},[s("span",{staticClass:"ne-text"},[t._v(" 1000 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u13c18298"}},[s("span",{staticClass:"ne-text"},[t._v(" 例如， 罗马数字2写做 II，即为两个并列的1。12写做XII，即为X+II。 27写做XXVII, 即为XX+V+II 。 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u1a9e3d3e"}},[s("span",{staticClass:"ne-text"},[t._v(" 通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况： ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u6e1370c4"}},[s("span",{staticClass:"ne-text"},[t._v(" I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ud671d1c0"}},[s("span",{staticClass:"ne-text"},[t._v(" X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u17e3f52b"}},[s("span",{staticClass:"ne-text"},[t._v(" C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u3e087e66"}},[s("span",{staticClass:"ne-text"},[t._v(" 给定一个罗马数字，将其转换成整数。（ ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 力扣13题 ")])]),s("span",{staticClass:"ne-text"},[t._v(" ） ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u1c117b01"}},[s("span",{staticClass:"ne-text"},[t._v(" 【接口声明】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u4683908e"}},[s("span",{staticClass:"ne-text"},[t._v(" int romanToInt(string s) ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue8213a02"}},[s("span",{staticClass:"ne-text"},[t._v(" 【数据范围】 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u9963bd1b"}},[s("span",{staticClass:"ne-text"},[t._v(" 1 <= s.length <= 15 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u869e80b1"}},[s("span",{staticClass:"ne-text"},[t._v(" s 仅含字符 ('I', 'V', 'X', 'L', 'C', 'D', 'M') ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u784590cc"}},[s("span",{staticClass:"ne-text"},[t._v(" 题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内 ")])]),s("p",{staticClass:"ne-p",attrs:{id:"ue9349969"}},[s("span",{staticClass:"ne-text"},[t._v(" 题目所给测试用例皆符合罗马数字书写规则，不会出现跨位等情况。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"WupJh"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubaa833e6"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u35703c1a"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6bdecd3e"}},[s("span",{staticClass:"ne-text"},[t._v(' s = "III" ')])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6a70c6cb"}},[s("span",{staticClass:"ne-text"},[t._v(" 3 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u58b38927"}},[s("span",{staticClass:"ne-text"},[t._v(' s = "LVIII" ')])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubd2eeadc"}},[s("span",{staticClass:"ne-text"},[t._v(" 58 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4fe1ed38"}},[s("span",{staticClass:"ne-text"},[t._v(' s = "MCMXCIV" ')])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud2dbb5db"}},[s("span",{staticClass:"ne-text"},[t._v(" 1994 ")])])])])])]),s("p",{staticClass:"ne-p",attrs:{id:"u9c513ea9"}},[s("span",{staticClass:"ne-text"},[t._v(" 【题目解析】这是力扣的第13题，可以通过多重判断解决。但是书写比较复杂。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"rkpaa"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.19")]),t._v(" 多重判断解决方案"),s("code",[t._v("class Solution {\npublic:\n    int romanToInt(string s) {\n        int sum=0;\n        for(int i=0;i<s.size();++i){\n            if(s[i]=='I'){\n                if(s[i+1]=='V'){++i;sum+=4;}\n                else if(s[i+1]=='X'){++i;sum+=9;}\n                else sum++;\n            }\n            else if(s[i]=='X'){\n                if(s[i+1]=='L'){++i;sum+=40;}\n                else if(s[i+1]=='C'){++i;sum+=90;}\n                else sum+=10;\n            }\n            else if(s[i]=='C'){\n                if(s[i+1]=='D'){++i;sum+=400;}\n                else if(s[i+1]=='M'){++i;sum+=900;}\n                else sum+=100;\n            }\n            else if(s[i]=='V'){sum+=5;}\n            else if(s[i]=='L'){sum+=50;}\n            else if(s[i]=='D'){sum+=500;}\n            else if(s[i]=='M'){sum+=1000;}\n        }\n        return sum;\n    }\n};")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-indent":"2em"},attrs:{id:"u44548aaa"}},[s("span",{staticClass:"ne-text"},[t._v(" 造成以上代码多重判断的复杂性根源在于键是一系列不规律的字符，可以将这些特殊键构造成字典，从而简化循环书写逻辑。 ")])]),s("pre",{staticClass:"ne-codeblock language-cpp",attrs:{"data-language":"cpp",id:"T7yAG"}},[s("span",{staticStyle:{"font-weight":"bold"}},[t._v("代码8.20")]),t._v(" 字典解决方案"),s("code",[t._v("class Solution {\npublic:\n    int romanToInt(string s) {\n        int sum=0;\n        unordered_map<char,int> m1=\\{\\{'I',1},{'V',5},{'X',10},{'L',50},\n        \t\t\t\t\t\t\t{'C',100},{'D',500},{'M',1000}};\n        unordered_map<string,int> m2=\\{\\{\"IV\",4},{\"IX\",9},{\"XL\",40},\n        \t\t\t\t\t\t\t{\"XC\",90},{\"CD\",400},{\"CM\",900}};\n        for(int i=0;i<s.size();++i){\n            if(m2.count(s.substr(i,2))) sum+=m2[s.substr(i++,2)];\n            else sum+=m1[s[i]];\n        }\n        return sum;\n    }\n};")])]),s("ul",{staticClass:"ne-ul"},[s("li",{attrs:{id:"ufe6e7f6c"}},[s("span",{staticClass:"ne-text"},[t._v(" 可以看到，代码得到了极大的简化，核心就是构造了两个字典，形成了键值的映射。 ")])]),s("li",{attrs:{id:"u6a509bb9"}},[s("span",{staticClass:"ne-text"},[t._v(" 第10行判断双字符键是否存在，如果存在则增加对应的值。特别注意i++，因为是双字符键，需要跨越两个字符，因此sum累加后，要将i增加1。 ")])]),s("li",{attrs:{id:"u22c7438b"}},[s("span",{staticClass:"ne-text"},[t._v(" 第11行对单字符键进行累加操作。 ")])])]),s("h3",{attrs:{id:"EnDgK"}},[s("span",{staticClass:"ne-text"},[t._v(" 随堂练习8.2 ")])]),s("p",{staticClass:"ne-p",staticStyle:{"text-align":"left"},attrs:{id:"u9a66d153"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 仿照C++的定义对可能含有转义序列的字符串进行转换，输出转换后的结果。 ")]),s("strong",[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 只需实现 ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" ： ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(231, 76, 60)"}},[t._v(" \\n ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(231, 76, 60)"}},[t._v(" \\t ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(231, 76, 60)"}},[t._v(" \\? ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(231, 76, 60)"}},[t._v(" \\' ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(231, 76, 60)"}},[t._v(' \\" ')]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" , ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(231, 76, 60)"}},[t._v(" \\\\ ")]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" 即可。注意根据知识点 ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#W9YYd",href:"ch2#W9YYd"}},[s("span",{staticClass:"ne-text"},[t._v(" T274 ")])]),s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)"}},[t._v(" ，当输入中有转义字符时，不会认为是转义字符，而会逐个字符处理。 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"IylW4"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud9a1dcdd"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输入 ")])])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u57ee1c4b"}},[s("strong",[s("span",{staticClass:"ne-text"},[t._v(" 样例输出 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua0bdb428"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" new\\nline ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8a1d18dd"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" new ")])]),s("p",{staticClass:"ne-p",attrs:{id:"u22a820d4"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" line ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9eaea655"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" T\\tAB ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"uecbee0c7"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" T AB ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"ubbbc3e11"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" \\?\\'\\\"\\\\ ")])])]),s("td",{attrs:{width:"375"}},[s("p",{staticClass:"ne-p",attrs:{id:"u046afcbf"}},[s("span",{staticClass:"ne-text",staticStyle:{color:"rgb(64, 64, 64)","font-size":"12px"}},[t._v(" ?'\"\\ ")])])])])])]),s("h3",{attrs:{id:"mu9UI"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点：T874 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"VCGJC"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"u292cb2af"}},[s("span",{staticClass:"ne-text"},[t._v(" 索引 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",staticStyle:{"text-align":"center"},attrs:{id:"ua85aecbc"}},[s("span",{staticClass:"ne-text"},[t._v(" 要点 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc62273f0"}},[s("span",{staticClass:"ne-text"},[t._v(" 正链 ")])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub22a0487"}},[s("span",{staticClass:"ne-text"},[t._v(" 反链 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{rowspan:"2",width:"58"}},[s("p",{staticClass:"ne-p",attrs:{id:"uffaf4c1a"}},[s("span",{staticClass:"ne-text"},[t._v(" T874 ")])])]),s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua9ee8cb3"}},[s("span",{staticClass:"ne-text"},[t._v(" 掌握字典与循环联动的方法，理解字典在书写上类似特殊下标的数组 ")])])]),s("td",{attrs:{width:"70"}},[s("p",{staticClass:"ne-p",attrs:{id:"u1faa894e"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#WGgmO",href:"ch5#WGgmO"}},[s("span",{staticClass:"ne-text"},[t._v(" T522 ")])])])]),s("td",{attrs:{width:"67"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub3d25c13"}},[s("br")])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"559"}},[s("p",{staticClass:"ne-p",attrs:{id:"u27caa42c"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" (LX815) ")])]),s("span",{staticClass:"ne-text"})])]),s("td",{attrs:{width:"70"}}),s("td",{attrs:{width:"67"}})])])]),s("p",{staticClass:"ne-p",attrs:{id:"u8a19d09d"}},[s("span",{staticClass:"ne-text"},[t._v(" 参考文献 ")])]),s("ol",{staticClass:"ne-ol"},[s("li",{attrs:{id:"ucabb1a90"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103",href:"https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" https://frankcastle520.gitee.io/2020/03/16/language/c/c-ti-gao-bian-cheng/#toc-heading-103 ")])])]),s("li",{attrs:{id:"ua7a8bd0d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"http://c.biancheng.net/view/6803.html",href:"http://c.biancheng.net/view/6803.html",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" http://c.biancheng.net/view/6803.html ")])])]),s("li",{attrs:{id:"u8e1fff5b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://blog.csdn.net/ych9527/article/details/117324385",href:"https://blog.csdn.net/ych9527/article/details/117324385",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" https://blog.csdn.net/ych9527/article/details/117324385 ")])])])]),s("h1",{attrs:{id:"OEDhg"}},[s("span",{staticClass:"ne-text"},[t._v(" 题单 ")])]),s("table",{staticClass:"ne-table",staticStyle:{width:"100%"},attrs:{border:"1",id:"FANQT"}},[s("tbody",[s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8e2681c3"}},[s("span",{staticClass:"ne-text"},[t._v(" 序号 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u97ce9857"}},[s("span",{staticClass:"ne-text"},[t._v(" 题目名称 ")])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u63a0c2cb"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点 ")])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3ad306a6"}},[s("span",{staticClass:"ne-text"},[t._v(" 序号 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4e859026"}},[s("span",{staticClass:"ne-text"},[t._v(" 题目名称 ")])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue4694c05"}},[s("span",{staticClass:"ne-text"},[t._v(" 知识点 ")])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u15e91a5c"}},[s("span",{staticClass:"ne-text"},[t._v(" LX801 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue6867b7d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161765",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 第一个出现两次的字母 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8686f3c1"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#bDkij",href:"ch5#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#wG8i3",href:"ch2#wG8i3"}},[s("span",{staticClass:"ne-text"},[t._v(" T242 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"ufff68c93"}},[s("span",{staticClass:"ne-text"},[t._v(" LX802 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"udd036635"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161766",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161766",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 加一 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0c69e5c3"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#TSGz6",href:"ch5#TSGz6"}},[s("span",{staticClass:"ne-text"},[t._v(" T549 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0591cb18"}},[s("span",{staticClass:"ne-text"},[t._v(" LX803 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"udecf8a13"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161767",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161767",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 三个数的最大乘积 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u047289c9"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#pyYpq",href:"ch5#pyYpq"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"uecefd206"}},[s("span",{staticClass:"ne-text"},[t._v(" LX804 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"uefc5d0d5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161768",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 移动零 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc95b687f"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#kYcFw",href:"#kYcFw"}},[s("span",{staticClass:"ne-text"},[t._v(" T842 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#o8Kxq",href:"ch5#o8Kxq"}},[s("span",{staticClass:"ne-text"},[t._v(" T524 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u18d734d8"}},[s("span",{staticClass:"ne-text"},[t._v(" LX805 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"ude098280"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161769",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161769",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 只出现一次的数字 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u57bd9664"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#panTK",href:"ch2#panTK"}},[s("span",{staticClass:"ne-text"},[t._v(" T26C ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u70ee49c3"}},[s("span",{staticClass:"ne-text"},[t._v(" LX806 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud550f8e0"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161774",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 移除元素 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"uec413efb"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#kYcFw",href:"#kYcFw"}},[s("span",{staticClass:"ne-text"},[t._v(" T842 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#o8Kxq",href:"ch5#o8Kxq"}},[s("span",{staticClass:"ne-text"},[t._v(" T524 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u3a537aba"}},[s("span",{staticClass:"ne-text"},[t._v(" LX807 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"uea49a3d1"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161770",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161770",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 合并两个有序数组 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5fa58791"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#pyYpq",href:"ch5#pyYpq"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#L8fPI",href:"ch5#L8fPI",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" T528 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua936f615"}},[s("span",{staticClass:"ne-text"},[t._v(" LX808 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub80f4ea4"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161771",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161771",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 搜索插入位置 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua5467cd1"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#AE9qD",href:"ch2#AE9qD"}},[s("span",{staticClass:"ne-text"},[t._v(" T251 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u27585b6f"}},[s("span",{staticClass:"ne-text"},[t._v(" LX809 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u22c8a90c"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161772",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161772",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 和相等的子数组 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2e0767bd"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#jxNPL",href:"#jxNPL"}},[s("span",{staticClass:"ne-text"},[t._v(" T872 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u4a20dc91"}},[s("span",{staticClass:"ne-text"},[t._v(" LX810 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"u9cc23b50"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161773",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161773",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 第三大的数 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7559d6ea"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#TFSS3",href:"ch5#TFSS3"}},[s("span",{staticClass:"ne-text"},[t._v(" T515 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u261730c9"}},[s("span",{staticClass:"ne-text"},[t._v(" LX811 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6f7f3976"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161775",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161775",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 学生分数的最小差值 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua73bb148"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#pyYpq",href:"ch5#pyYpq"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#TFSS3",href:"ch5#TFSS3"}},[s("span",{staticClass:"ne-text"},[t._v(" T515 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u769cf93a"}},[s("span",{staticClass:"ne-text"},[t._v(" LX812 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"uff6e743d"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161776",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161776",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 串联数组 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"udc32ef04"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#zTfai",href:"ch5#zTfai"}},[s("span",{staticClass:"ne-text"},[t._v(" T542 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7cd6df3e"}},[s("span",{staticClass:"ne-text"},[t._v(" LX813 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua5204a90"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161777",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161777",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 删除某些元素后的数组均值 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc5039c42"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#pyYpq",href:"ch5#pyYpq"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u812a1ddb"}},[s("span",{staticClass:"ne-text"},[t._v(" LX814 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"u946c0bcf"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161779",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 丢失的数字 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u6b2e8efc"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#bDkij",href:"ch5#bDkij"}},[s("span",{staticClass:"ne-text"},[t._v(" T526 ")])]),s("span",{staticClass:"ne-text"},[t._v(" , ")]),s("a",{staticClass:"ne-link",attrs:{"data-href":"#Yve1p",href:"#Yve1p"}},[s("span",{staticClass:"ne-text"},[t._v(" T873 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc6a915c9"}},[s("span",{staticClass:"ne-text"},[t._v(" LX815 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u7e18bf6b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161778",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 罗马数字转整数 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2c91f959"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#mu9UI",href:"#mu9UI"}},[s("span",{staticClass:"ne-text"},[t._v(" T874 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u10138cc3"}},[s("span",{staticClass:"ne-text"},[t._v(" LX816 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub130c7aa"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161780",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161780",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 主要元素 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"ue480f942"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#jxNPL",href:"#jxNPL"}},[s("span",{staticClass:"ne-text"},[t._v(" T872 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0477cf72"}},[s("span",{staticClass:"ne-text"},[t._v(" LX817 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"ueeb4d70a"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161781",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161781",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 判断能否形成等差数列 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"ua714c028"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#pyYpq",href:"ch5#pyYpq"}},[s("span",{staticClass:"ne-text"},[t._v(" T527 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u20c2a107"}},[s("span",{staticClass:"ne-text"},[t._v(" LX818 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"u14e28ab5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161782",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 棒球比赛 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"ube88e950"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#BlTTv",href:"#BlTTv"}},[s("span",{staticClass:"ne-text"},[t._v(" T841 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud22ea8bb"}},[s("span",{staticClass:"ne-text"},[t._v(" LX819 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u44e470cc"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161783",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 存在连续三个奇数的数组 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u5a3fe690"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#z5syf",href:"#z5syf"}},[s("span",{staticClass:"ne-text"},[t._v(" T862 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u96689abd"}},[s("span",{staticClass:"ne-text"},[t._v(" LX820 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"uaff7fbea"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161784",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161784",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 重新排列数组 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u08544e3a"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"ch#AE9qD",href:"ch2#AE9qD"}},[s("span",{staticClass:"ne-text"},[t._v(" T251 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8e7daa8a"}},[s("span",{staticClass:"ne-text"},[t._v(" LX821 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u90fbc2da"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 存在重复元素II ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u2e68871b"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#Yve1p",href:"#Yve1p"}},[s("span",{staticClass:"ne-text"},[t._v(" T873 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"u70fb75f4"}},[s("span",{staticClass:"ne-text"},[t._v(" LX822 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"u930fe2ae"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161785",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 存在重复元素 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u40f3e4c5"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#jxNPL",href:"#jxNPL"}},[s("span",{staticClass:"ne-text"},[t._v(" T872 ")])])])])]),s("tr",{staticStyle:{height:"33px"}},[s("td",{attrs:{width:"66"}},[s("p",{staticClass:"ne-p",attrs:{id:"uc256348f"}},[s("span",{staticClass:"ne-text"},[t._v(" LX823 ")])])]),s("td",{attrs:{width:"202"}},[s("p",{staticClass:"ne-p",attrs:{id:"u0097c855"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161787",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 有效的括号 ")])])])]),s("td",{attrs:{width:"94"}},[s("p",{staticClass:"ne-p",attrs:{id:"u95ea3a91"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#BlTTv",href:"#BlTTv"}},[s("span",{staticClass:"ne-text"},[t._v(" T841 ")])])])]),s("td",{attrs:{width:"65"}},[s("p",{staticClass:"ne-p",attrs:{id:"ud7b34d94"}},[s("span",{staticClass:"ne-text"},[t._v(" LX824 ")])])]),s("td",{attrs:{width:"109"}},[s("p",{staticClass:"ne-p",attrs:{id:"ub94f5b50"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788",href:"https://www.qingline.net/practice-list/practice?question_bank_id=13997&id=161788",target:"_blank"}},[s("span",{staticClass:"ne-text"},[t._v(" 两数之和 ")])])])]),s("td",{attrs:{width:"99"}},[s("p",{staticClass:"ne-p",attrs:{id:"u8c9240e9"}},[s("a",{staticClass:"ne-link",attrs:{"data-href":"#jxNPL",href:"#jxNPL"}},[s("span",{staticClass:"ne-text"},[t._v(" T862 ")])])])])])])])])])}],n={mounted(){this.$nextTick((()=>{this.goAnchor(window.location.hash)})),hljs.initHighlightingOnLoad(),hljs.initLineNumbersOnLoad({singleLine:!0})},methods:{goAnchor(t){if(t){console.log(t);let s=document.getElementById(t.replace("#",""));s.scrollIntoView(!0)}}}},c=n,l=a(1001),p=(0,l.Z)(c,e,i,!1,null,null,null),d=p.exports},1790:function(t,s,a){t.exports=a.p+"img/cd40280cdc832013a593b2df92ed2275.01a9c13e.svg"},6416:function(t,s,a){t.exports=a.p+"img/1660379324357-53fff7a7-d418-409d-b996-c6d80365c924.d99640ff.gif"},7349:function(t,s,a){t.exports=a.p+"img/1660388751603-9f34660c-c0cf-47ad-b0c6-b99415e2fc42.e57086ce.jpeg"},2483:function(t,s,a){t.exports=a.p+"img/1660388854927-9c3e4482-5f3c-46c6-b3ff-a1bd5515c5eb.92f1ddfe.jpeg"},4747:function(t,s,a){t.exports=a.p+"img/1660388907957-654add39-4d5b-42fc-9234-bb417537b693.24f4c341.jpeg"},8327:function(t,s,a){t.exports=a.p+"img/1660456972321-5a8dc67d-6587-4428-a5d3-a182eff2d7f2.63f79dff.jpeg"},1446:function(t,s,a){t.exports=a.p+"img/1676860900025-3f218d18-c64d-4f81-991e-bd2c6cb266e8.0b24d8bd.png"},64:function(t,s,a){t.exports=a.p+"img/1676860934880-d997877f-83fb-4d5c-9afc-4fd160ade211.718b6cde.png"},4221:function(t,s,a){t.exports=a.p+"img/1676860982277-3344c2ac-537d-42f3-8a6f-af0a98ae300a.3f2c5640.png"}}]);
//# sourceMappingURL=570.a27d3ebd.js.map